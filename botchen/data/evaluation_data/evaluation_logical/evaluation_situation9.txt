>> Loaded models dict_keys(['chat'])


>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on-animal) 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on|lendrn on-desk on|left man-sitting|a) 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n has-head animal-has animal-has animal-has animal-in animal-has animal-has animal-has) 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n animal-has animal-has animal-has) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n on-plant tree-has) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(animal.n on|left animal-has) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on|topographic_point has-topographic_point animal-has animal-has animal-has animal-in animal-in animal-has) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(top.n giraffe-has) 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(pasture.n in-park has-head has-head has-head eats-pasture has-ear eats-pasture has-pasture eats-pasture has-ear has-ear eating-pasture eats-pasture has-pasture eats-pasture eating 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(pasture.n animal-has animal-has) 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(pasture.n in-pasture animal-in) 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(pasture.n far|awa parked far|ay parked parked behind-man-has man-wearing) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(animal.n animal-has animal-has) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(pasture.n feed animal-has) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(pasture.n animal-has animal-has giraffe-has animal-has animal-has animal-has animal-has) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(animal.n feed feed has-head has-head has-head has-head eats-ear has-ear eats-pasture eats-pasture enjoying-pasture enjoying-pasture eats-pasture animal-pasture has- 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has animal-has animal-has) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(eye.n spart animal-has animal-has) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(top.n on-neck) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n animal-has) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(top.n on|left ft feeding in-park has-head has-head eating-pasture eats-pasture has-pasture has-head has-head enjoying-pasture has-ear has-head has-ear  

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has animal-has animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(animal.n animal-has animal-has animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n has-horn has-horn has-horn has-horn has-horn has-horn has-head has-horn has-head has-horn has-head has-horn has-horn has-horn has-head has-horn has-horn has- 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(animal.n giraffe-in animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n has-head has-horn has-horn has-head animal-has animal-has animal-has animal-has animal-has animal-has) 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n animal-has) 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has animal-has) 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-topographic_point animal-has topographic_point-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(topographic_point.n on-topographic_point has-topographic_point topographic_point-on topographic_point-on topographic_point-on topographic_point-on topograph 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(body.n animal-has animal-has) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n on-neck on-neck) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n animal-in) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n giraffe-has giraffe-has animal-has) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n in-park has-head has-head eats-pasture has-ear has-head has-ear has-ear has-ear has-topographic_point has-topographic_point has-topographic_point topographic 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(leaf.n on-tree behind-tree tree-has) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n behind-animal tree-has) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(ear.n on|right giraffe-has) 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n has-head has-head has-head has-head eats-pasture eats-pasture has-pasture eating-pasture has-ear has-pasture eating-pasture eats-pasture eating-pasture eating-pasture has-pasture has 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(ear.n animal-has animal-has animal-has) 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n giraffe-has animal-has) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-neck on-neck) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(neck.n animal-has) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(topographic_point.n animal-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on|right animal-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on|right animal-has animal-has animal-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on|left animal-has animal-has) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n on-plant tree-has) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n on-plant tree-has) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n in-park behind-man) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n in-park has-head behind-mane has-ear has-head has-head has-head has-ear has-head has-head eating-pasture has-pasture eats-pasture has-pasture has-ear has-head  

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(branch.n plant-has plant-has) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(plant.n in-tree tree-has) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 
