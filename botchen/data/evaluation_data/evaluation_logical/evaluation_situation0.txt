>> Loaded models dict_keys(['chat'])


>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(colar.n cessing) 

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(cordr.n drawn on-dish) 

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(desk.n colare with-lin  

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(chollar.n black) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(bicycle.n parked far|ay parked|on-street) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(bicycle.n near-parked|on parked|a-parked|ay parked|ay bicycle-parked|on far|ay parked|on-parked|ay parked 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(parking_point.n animal-has animal-has) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(park.n parked|on-street) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(street.n bicycle-parked|on parked bicycle-ns parked parked|on-parked parked|a-sidewalk) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked parked behind-man-has man-wearing) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind bicycle-park has-behind) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(street.n bicycle-near parked bicycle-near parking_meter-park has-behind bicycle-behind) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n brown wearing-shirt wearing-shirt) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n brown woman-wearing woman-wearing woman-wearing woman-wearing) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing woman-wearing woman-wearing woman-wearing) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n brown man-has man-has) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n woman-wearing man-wearing woman-wearing woman-wears woman-wearing woman-wearing man-wears) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n woman-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n black animal-has animal-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n parked|on-sidewalk) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n man-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n parked behind-animal) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n brown) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has man-has) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(back.n parked|on-sidewalk) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker-on bicycle-near near-near) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(street.n brown bicycle-parked|on parked|on-parked parked|on parked|on-street) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n near-parked parked|on bicycle-parked parked parked|on-parked|on bicycle-parked far|on parked parked|on-sidewalk)</u 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n parked|on-sidewalk) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n near-parked far|ar|away parked|on-sidewalk) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(wall.n green paddde-on) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n black murtuge-has) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n black tanding blver-has) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n wateee with-food) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n drar-has) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n black with-window) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind behind-behind) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(trunk.n on-street) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(trunk.n elephant-has) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked|on parking_meter-behind) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(bicycle.n parked parked|on-parked|a-parked parked|on parked|on-street) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(park.n tree-has parked|on parked|on-sidewalk) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(park.n parked|on-street) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(bicycle.n near-tree parked|on parked|a-parked parked|on-sidewalk) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-has woman-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wearing man-wearing) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(park.n parked|a-sidewalk) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n ndrn near-tree behind-tree behind-animal) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n parked far|ay parked far|ar|ay parked|on-street) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n ndrn parked|on parked parked|on-street) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|at|a-desk working sitting|at|a-desk wearing-desk at|at|a-desk wearing-desk) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-has) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(trouser.n brown woman-wearing man-wearing) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|a-desk) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker-wearing woman-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing man-has man-wearing man-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-has man-wearing man-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(man.n ar-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-has man-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n woman-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing man-has man-wearing) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker=HUM>(chin.n drarawn on) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker-chin) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker=HUM>(choat.n man-wearing) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker-chin) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(calar.n rawn wareeeelllll_prococess with-window bag-on) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(g.n raware wndre) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(g.n holding-carain) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(choard.n raware ) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind behind-behind) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-fur|of) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n brick next|to-street bicycle-parked|of parked|on-parking_meter-on bicycle-parked|on parked|on-parked parked|a-park 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked|on bicycle-parked|on bicycle-parked parked|on-parked|on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n pastice-on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n partion-on basent-on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n paster-on edge-on edge-of edge-of edge-of edge-of edge-of) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked parked far|ay parked|on-sidewalk) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked parked parked far|ay parking_meter-behind-animal has-ear animal-in animal-in animal-in animal-in) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(park.n parked parked|on-sidewalk) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked faried parked|on-street) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cent.n black) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(ceat.n drawn on-dish) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cal.n ) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cal.n drawn ) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(bink.n black on-table with-food with-food) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(cent.n ral_processing drice|on-desk) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(barg.n black) 

>> Prompt: road.n 
>> Response:  )</script.1 type=HUM>(courdrg.n ) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(bage.n black) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(bage.n with-food) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has woman-wearing) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-has man-wearing woman-wearing) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(bicycle.n near-near parked|ay parked|on-street) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(man.n has-head has-head eating-pasture eats-pasture has-head has-head has-ear has-ear has-head enjoying-pasture has-ear has-head has-head has-head has-head has-head has- 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-has woman-wearing) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n drawn cessing) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(frame.n armchair-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(frame.n armchair-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(window.n house-on) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(couch.n drawn cheememch with-food) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(courd.n ) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(coucollllllar.n with-liquide) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(choate.n ) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing woman-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wearing woman-wearing) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-tree near-behind animal-animal-has) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-tree parked behind-animal) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parking_shoe-incain) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-parked|ar|on fawareeed parked parked|on-sidewalk) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(pordd.n ) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mag.n ) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mad.n red) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mercantile_establishment.n on-wall pastograph-wall) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on keyboard-on computer-in|on keyboard-in|a keyboard-in|a keyboard-on keyboard-on keyboard-on keyboard-on computer-on) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n white in-bedroom bedroom-has bedroom-has lamp-in) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n black on-table on-table for-computer part-on) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(desk.n man-has man-wearing) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(desk.n man-sitting|a man-sitting|at|at|a man-sitting|at|a a) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(monitor.n white in-park wearing-trouser on-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wears-shirt) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(monitor.n white girl-sitting|at|a working sitting|a-sitting|at|a working|a) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n collartreed cessing_unit-under) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n cochdroch with-lin with-food) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n carentral_unit-under) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(telephone.n white on-desk on-bureau on-desk) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(telephone.n ) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-under cable-on cable-on cable-on cable-on) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(drawer.n ) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(drawer.n ) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n carentrocessing_unit-under) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n cal_prordrocessing_prdrick-in) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n white clupltered|of-desk) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n cal_unit-with) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(telephone.n white) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n couch-net|to monitor-on monitor-on) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a girl-sitting|a) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(hair.n black man-has man-wearing man-wearing) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk on-desk) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(monitor.n white girl-has) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(hair.n black man-sitting|at|a man-sitting|at|at|at|a) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n potograph-on edge-of) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n partered ptop grey) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n mercantile_establishment-on mercantile_establishment-on mercantile_element-on edge-of edge-of) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(pen.n ) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(girl.n sitting|a-desk working|at|at|a-desk) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(pearge.n black) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(peacket.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n sitting|a-desk) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-of cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on edge-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(cable.n white on-floor) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: floor.n cable-on
>> Response:  cable-on cable-on) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n paster-on ptop-on edge-of laptop-of edge-of edge-of edge-of edge-on) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(desk.n caral_processing cessing_meter-behind) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing_unit-under) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_unit-under) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_processing_prtick with-lit) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(table.n with-lin with-food) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(calar.n drawn on-pasee light-in) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(calare.n ) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(straw.n ) 

>> Prompt: strap.n black
>> Response:  <u speaker=BOT>(strap.n ) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(couck.n black) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(car.n ) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-wall edge-of edge-of edge-of edge-of edge-of) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(wall.n green potter-on ptop-on) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a girl-sitting|at|a) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(monitor.n white girl-has girl-has) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-has) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n green poter-on padtick-on) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n paster-on pastograph-on) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(potice.n ) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|a girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|at|a girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|at|a) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(girl.n girl-has) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(girl.n has|a-desk girl-sitting|at|at|a working sitting|at|a-desk girl-sitting|at|a) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(pen.n ) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(pear.n ) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(bag.n drine-in) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(cord.n drar-has) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(bag.n black) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tiled tan) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n drawn on-table with-food fork-next|to) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n dre|on girl-wearing) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tiled tan) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(pot.n part) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(sundding.n poxt|of-p) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(part.n black mug-has) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(pardding.n ) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(susait.n midleft dried ) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(sunde.n prt) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(sususunde.n mer purple) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(potick.n port-has) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(shoundd.n paror-on) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(sun.n partied) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(pillow.n on-armchair on-sund on-armchair) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(pillow.n against-sun on-wall teddy-against against) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n ) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n postice-on) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n ) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n in-bedroom lamp-in) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in lamp-in) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souse.n w-ee watee light-in) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(ouse.n woch wor wate with-cheese) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souse.n on-wall) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souster.n on-wall) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n on-st on-armchair) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(shot.n on-floor) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sof) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sthoth teddy-against) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(pillow.n on-sof) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sunde.n pag-on teddy-has) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sunde.n parocess-on) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sususe.n black) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(saide.n me-with) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(sususe.n mage-with) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(sun.n drar-has) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(susun.n red) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(ouse.n on-wall) 

>> Prompt: window.n 
>> Response:  ) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(out.n ) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(ouster.n on-wall) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(susad.n partied) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(sunder.n on-wall) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(susususe.n pardding pppppppot) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(sunde.n pag-has) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n of-dish) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(padding.n red) 

>> Prompt: door.n to-patio glass sliding
>> Response:  part)</script.1> <script.1 type=CONV> <u speaker=HUM>(courdr.n ) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(port.n port-has post-on) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(porddding.n pase-on past-on ptop-on) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(door.n to) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(to.n to|of-dish) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(bowl.n to|of-food) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(sausee.n black) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(sun.n de-with) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(see.n black) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(susage.n dr-has) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(suseet.n part-on) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(port.n partied ) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(se.n black on-wall) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(port.n ) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(pordding.n red) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(wall.n green poster-on pastograph-on edge-of) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(wall.n green bartise-on) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(seet.n wateee ceens) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(sususe.n paddding ppast) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(see.n black) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(port.n ) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(bord.n ) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(metallic_element.n ) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n furn far|ofed|of-drop) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n fllllllver on on-desk on-desk girl-sitting|at|at|at|a girl-sitting|at|a girl-sitting|at|a) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n fllllate feed|a-desk man-sitting|a) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hin.n draware ) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n drare-with) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n troate-with) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tral_prol_processing with-window bardrorocessing.n with-lin with-food) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sthot on-armchair) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker-behind) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(sun.n teddy-has) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(shouse.n on-floor) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(coardrd.n red) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(couct.n drare|on) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(bag.n black on-table table-in) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(cardaink.n ) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(sund.n part) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(sun.n green woorde w-light has-lamp lamp-in light-in lamp-in lamp-in lamp-in lamp-in lamp-in lamp-in lamp-in 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(pillow.n white on-armchair on-armchair) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker-sunde.n part-on) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(susunde.n part-has) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sooter.n on-wall) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sounge.n ) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sooust.n port-has part) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|at|a-desk working sitting|a-desk) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n wearing-trouser wearing-trouser sitting|a-desk wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-shirt wearing-sunsuised  

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n are|awn man-wearing) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n has-hair has-hair wears-shirt has-hair wearing-trouser wearing-shirt wearing-trouser wearing-trouser wearing-shirt wearing-sunsuit wearing-trouser wearing-trouser wears 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wears man-wearing man-wearing) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-under) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n man-sitting|a) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(calal.n dre|on-desk) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM_prdrocessing.n ) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(bard.n black on-table on-table with-table) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(bag.n drawn on-dish) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-wearing) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing woman-wears woman-wearing) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(mane.n man-wearing) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white on-table monitor-on keyboard-on keyboard-on keyboard-on computer-on computer-on computer-on) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(part.n on-wall) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white clare tral_processing working sitting|on-desk on-desk) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white on-desk on-desk) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(calal.n black) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under cable-on cable-on) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n couch-on man-has man-wearing) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n white clucluchairedinginging with-desk on-desk on-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n ar-wearing man-wearing woman-wearing) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n asirn working sitting|at|a-desk working|at|a-desk at|a-sitting|a-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n asian working working sitting|at|a-desk working sitting|at|at|a-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-wearing) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(sun.n red) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n partion-on ptop-on) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n pastered bledge-of) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n paster-on paster-on) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n potograph-on edge-of) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(bag.n e-on drawnde-on) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(shade.n on-street) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(metal.n ric_element on-wall) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parking_shoe-incoatroat wearing-trouser eating-ring wearing-trouser wearing-trouser wearing-trouser wearing-shirt wearing-trouser wearing-trouser wears- 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked parked behind-man-has parked|on) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(collllack.n black) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(met.n ) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(meat.n ) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(dish.n with-food with-food dish-with) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bin.n black on-table on-table for-computer part-of) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bin.n draware de|on) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(cord.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(coad.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(carg.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(carg.n ) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(hand.n man-has) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n sitting girl-sitting|at|a working|at|a) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(man.n man-has man-wearing woman-wears man-wearing) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(hand.n on-desk) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(hand.n girl-has) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(man.n man-has man-wearing) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(turoad.n on-wall) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(tu speaker=BOT>(lace.n trawaptop grey on-floor) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(lue.n black on-desk on-desk) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(llap.n prt-has) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(lace.n black on-desk) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(wall.n pastick-on padd-on) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(wall.n pastered ptop-on ptop-on ptop-on) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(window.n hound-on) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n pastick-on edge-of) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n baby-on ptop-on monitor-on) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n partion parocessing_unit-under cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: tray.n red
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: tray.n red
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: tray.n red
>> Response:  <u speaker=BOT>(dish.n ) 

>> Prompt: tray.n red
>> Response:  )</u speaker=HUM>(dish.n with-cheese) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-has) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n has-hair man-sitting|at|a man-sitting|at|a) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n araire wearing-trouser sitting|at|a-desk) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n areed man-wearing man-wearing) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(couck.n dr-has) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(susun.n e-with) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(court.n de|of-dish) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(calal.n mise-with) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(saide.n black) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(desk.n caraptop cendrawn chocessing_unit-under) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(seet.n black) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing_unit-with girl-wearing girl-with) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n chal_prococessing_ptop grey chrordrick with-lindrdrick.n with-lish with-food)</ 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n chochdrde-has) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing woman-wearing) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n man-has man-wearing man-wearing man-wearing woman-wears man-wearing) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: container.n made|of-metallic_element
>> Response:  )</script.1> <u speaker=HUM>(bag.n black on-wall) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(couch.n ) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(coucord.n black) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sususee.n black on-wall) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sun.n red) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sundrar.n drawn ) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(saide.n de|on-table) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(bink.n black) 

>> Prompt: pavement.n band-on
>> Response:  drawndee|on) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(bag.n drarawn on-dish) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(calar.n dare|on darawn on-dish) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(coladr.n ) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(pordding.n ) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(chouch.n tan) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(cholt.n tan) 

>> Prompt: device.n green
>> Response:  cordr-has) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bage.n e-with) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bink.n enge with-food) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in bedroom-in lamp-in lamp-in lamp-in lamp-in) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(bedroom.n in-park has-ear behind-mane behind-man) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(bedroom.n in-bedroom feed|in bedroom-in bedroom-has) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(desk.n white claptop-on chair-on monitor-on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(wall.n green cllaptop grey) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(wall.n caroptop ptop-on ptop-on laptop-on ptop-on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(padding.n past) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n black clulueentrocessing_unit-with) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n white cluclucluentroch workinging_ptop grey roroch with-lin with-lit) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk on-desk) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(hair.n drick with-food) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(hair.n dressing dressing_unit-under) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(light.n light-in lamp-in lamp-in lamp-in) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(light.n wate light-in) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(wall.n potick potick-on) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n housh porddd-on) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n hound-of) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(bin.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(bag.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(caraink.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(carain.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(bureau.n costick-on monitor-on) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(desk.n cholartiled with-food) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(bureau.n cotrtion-on carocessing_ptop grey) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(desktop.n carent.n cal_prdrocess-on girl-with) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n parstered ptop-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n partised part-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n partered ptop-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n pastice-on) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n green poter-on lastograph-on edge-of) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on ledge-of edge-of) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(lacel.n black) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n green poster-on padtice|on ptop-on) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing with-lit) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(desk.n carock-on) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(pardding.n red) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n pastick-in) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(chourdrd.n ) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(lue.n black on-desk) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(lueellal.n ceing) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n book-on baby) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n book-on) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n on-table on-desk on-table) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n carentral_pcessing_prtrticke|mit) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  curtapart.n black) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n cal_processing with-lit) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n cal_processing chordrick-on) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on edge-of edge-of ledge-of edge-of) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n coultice-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n coladrk-on chair-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n courtiled with-food) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(wall.n green bag-on) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(said.n with-lis) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(sunde.n on-floor) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(hair.n watee deee with-cheese) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(lacke.n choladr-on) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(lap.n red) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(bag.n ) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(bard.n black) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n ) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n on in-lamp light-in light-in lamp-in) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n on in-bedroom bedroom-in bedroom-in) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(lap.n green) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(ledge.n of-image) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(light.n on) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n in-lamp) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(lamp.n in-bedroom) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(lamp.n in-bedroom bedroom-has) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(bedroom.n in-bedroom feed|in bedroom-in) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(bedroom.n in-park has-ear has-ear behind-ear has-animal has-ear has-ear has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-top 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in bedroom-has) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(chouct.n ) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(wall.n postick-on edge-of) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(chourt.n ) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n white cluclaptop grey on-bureau) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n laptop-on) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-desk) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lue.n black on-bureau on-bureau on-desk on-bureau) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(part.n corddr-on) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(choush.n black) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(page.n with-liquidd) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(couch.n black) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(pard.n red) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(port.n black) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(paddrink.n red) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(wall.n paster-on ptop-on padtick-on edge-on edge-of edge-of) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(wall.n green poster-on) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n cortion de-on) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n caraprol_processing_unit-under) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n corddrocessing_unit-with) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk on-bureau) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on computer-on keyboard-on) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-table for-bureau) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n keyboard-on keyboard-on keyboard-on computer-on computer-on) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-table keyboard-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n potice-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n green parose-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partion part-on past-on edge-of edge-of edge-of edge-of edge-of edge-of edge-of edge-of 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(computer.n on-desk) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker-holding chin chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(chin.n holding-chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(charger.n red chordrg-holding holding-chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(charger.n chin) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker-on) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker=HUM>(con.n white on-table con-on keyboard-on keyboard-on keyboard-on computer-on keyboard-on computer-on computer-on) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker-on chordd.n on-table con-on cain) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker=HUM>(con.n green chourde-on) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-with) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n caral_processing_unit-with pen-under) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n courtiling) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n caral_processing_unit-under) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau on-bureau on-floor) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-desk on-table mousepad-on) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table for-computer) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table for-computer mouse-on mouse-on mouse-on) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(computer.n on-table for-computer mouse-on) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(table.n white table-with) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(monitor.n white keyboard-in|a monitor-on keyboard-in|a) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker-nex.n cal|to monitor-on) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(couch.n chollarde with-cheese) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(con.n green coucholadre ce-on) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(saun.n white) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(courd.n on-table) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker-on chouch-on) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(wall.n partered en-on edge-of) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(wall.n pastick e-on edge-of edge-of) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(susaage.n black) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(noustid.n ) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(noustide.n ) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(n.n on-wall) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(noutrd.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(niousk.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(nouset.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(nition.n ) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n pastick-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n potick prt-on pastograph-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n green postograph-on lad-on edge-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n paster-on) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(chourd.n red) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(sun.n mugy-with) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(seetrain.n drawn on-dish) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(suse.n black) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(edge.n of-image edge-of) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(n.n n-of edge-of) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(nound.n ) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker-on) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(coucouck.n chollar-has) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(coucourd.n cessing_unit-with) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(couch.n colarde with-cheese napkin-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bord.n e-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(barge.n ) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bage.n black) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(chourd.n red) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(couck.n black murtide|of-dish) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(bag.n e-in) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white girl-has) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white girl-sitting|in|a girl-wearing) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(computer.n lawaptop lamp-on lamp-on laptop-on lamp-in lamp-in lamp-in) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(computer.n latered keyboard-on keyboard-on keyboard-on computer-on) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau on-bureau) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(computer.n lawn cheeelll-on) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker-of) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(mousepad.n on-desk on-desk on-desk) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(mousepad.n white keyboard-in) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n pastick next|to-wall) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(shoush.n image-of) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partion bag-on ptop-on edge-on) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on edge-of edge-of) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(said.n red) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n colartiling) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(table.n white claptop-on) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n courdrocessing with-lindrick-cheese) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n coladre-on) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(table.n cal_processing_unit-under) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-desk) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(table.n white cluchair-has) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table on-table) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-desk) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-picture) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(cholt.n girl-with) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(wall.n partion bed monitor-on part-on) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(wall.n baby-on ledge-of) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(chouck.n with-lis) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(napkin.n on-plate) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-plate) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n cheese-in) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(with.n with-food dish-under) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(with.n dish-with) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(food.n with-food) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(liquid.n with-food) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(liquid.n with-liquige) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(glass.n with-glass) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(liquid.n with-liquid) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(lin.n with-liquid) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  dish-in) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(glass.n with-straw) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(straw.n with-food) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(straw.n with-food) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n glass-with) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n dish-with) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n with-food with-cheese) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n green) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(lindd.n ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(food.n glass ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(lind.n red) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-under) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(on.n plate-on) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n dish-with) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n under-napkin under-cheese) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(napkin.n ) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker-on plate-with) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(cheese.n under-napkin) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(courg.n ) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(chouch.n miged with-lis) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(susage.n ) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(sarge.n ) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-under) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food with-cheese cheese-on under-napkin-on) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n under-cheese) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food dish-with) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(car.n black) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(choad.n ch-with) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mag.n mage-on bottle-in) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mage.n with-liquy mid-food) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mug.n red) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-with) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n with-food with-cheese) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(table.n table-in) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker-under) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker=HUM>(cheese.n under-cheese) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker-under)</u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food dish-with) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-cheese) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(cheese.n dish-with) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(cheese.n cheese-on under-cheese) 
>> Loaded models dict_keys(['chat'])


>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(colar.n cessing) 

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(cordr.n drawn on-dish) 

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(desk.n colare with-lin  

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(chollar.n black) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(bicycle.n parked far|ay parked|on-street) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(bicycle.n near-parked|on parked|a-parked|ay parked|ay bicycle-parked|on far|ay parked|on-parked|ay parked 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(parking_point.n animal-has animal-has) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(park.n parked|on-street) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(street.n bicycle-parked|on parked bicycle-ns parked parked|on-parked parked|a-sidewalk) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked parked behind-man-has man-wearing) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind bicycle-park has-behind) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(street.n bicycle-near parked bicycle-near parking_meter-park has-behind bicycle-behind) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n brown wearing-shirt wearing-shirt) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n brown woman-wearing woman-wearing woman-wearing woman-wearing) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing woman-wearing woman-wearing woman-wearing) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n brown man-has man-has) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n woman-wearing man-wearing woman-wearing woman-wears woman-wearing woman-wearing man-wears) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n woman-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n black animal-has animal-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n parked|on-sidewalk) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n man-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n parked behind-animal) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n brown) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has man-has) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(back.n parked|on-sidewalk) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker-on bicycle-near near-near) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(street.n brown bicycle-parked|on parked|on-parked parked|on parked|on-street) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n near-parked parked|on bicycle-parked parked parked|on-parked|on bicycle-parked far|on parked parked|on-sidewalk)</u 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n parked|on-sidewalk) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n near-parked far|ar|away parked|on-sidewalk) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(wall.n green paddde-on) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n black murtuge-has) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n black tanding blver-has) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n wateee with-food) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n drar-has) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n black with-window) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind behind-behind) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(trunk.n on-street) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(trunk.n elephant-has) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked|on parking_meter-behind) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(bicycle.n parked parked|on-parked|a-parked parked|on parked|on-street) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(park.n tree-has parked|on parked|on-sidewalk) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(park.n parked|on-street) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(bicycle.n near-tree parked|on parked|a-parked parked|on-sidewalk) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-has woman-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wearing man-wearing) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(park.n parked|a-sidewalk) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n ndrn near-tree behind-tree behind-animal) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n parked far|ay parked far|ar|ay parked|on-street) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n ndrn parked|on parked parked|on-street) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|at|a-desk working sitting|at|a-desk wearing-desk at|at|a-desk wearing-desk) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-has) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(trouser.n brown woman-wearing man-wearing) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|a-desk) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker-wearing woman-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing man-has man-wearing man-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-has man-wearing man-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(man.n ar-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-has man-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n woman-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing man-has man-wearing) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker=HUM>(chin.n drarawn on) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker-chin) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker=HUM>(choat.n man-wearing) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker-chin) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(calar.n rawn wareeeelllll_prococess with-window bag-on) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(g.n raware wndre) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(g.n holding-carain) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(choard.n raware ) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind behind-behind) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-fur|of) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n brick next|to-street bicycle-parked|of parked|on-parking_meter-on bicycle-parked|on parked|on-parked parked|a-park 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked|on bicycle-parked|on bicycle-parked parked|on-parked|on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n pastice-on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n partion-on basent-on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n paster-on edge-on edge-of edge-of edge-of edge-of edge-of) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked parked far|ay parked|on-sidewalk) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked parked parked far|ay parking_meter-behind-animal has-ear animal-in animal-in animal-in animal-in) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(park.n parked parked|on-sidewalk) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked faried parked|on-street) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cent.n black) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(ceat.n drawn on-dish) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cal.n ) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cal.n drawn ) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(bink.n black on-table with-food with-food) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(cent.n ral_processing drice|on-desk) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(barg.n black) 

>> Prompt: road.n 
>> Response:  )</script.1 type=HUM>(courdrg.n ) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(bage.n black) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(bage.n with-food) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has woman-wearing) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-has man-wearing woman-wearing) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(bicycle.n near-near parked|ay parked|on-street) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(man.n has-head has-head eating-pasture eats-pasture has-head has-head has-ear has-ear has-head enjoying-pasture has-ear has-head has-head has-head has-head has-head has- 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-has woman-wearing) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n drawn cessing) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(frame.n armchair-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(frame.n armchair-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(window.n house-on) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(couch.n drawn cheememch with-food) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(courd.n ) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(coucollllllar.n with-liquide) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(choate.n ) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing woman-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wearing woman-wearing) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-tree near-behind animal-animal-has) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-tree parked behind-animal) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parking_shoe-incain) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-parked|ar|on fawareeed parked parked|on-sidewalk) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(pordd.n ) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mag.n ) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mad.n red) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mercantile_establishment.n on-wall pastograph-wall) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on keyboard-on computer-in|on keyboard-in|a keyboard-in|a keyboard-on keyboard-on keyboard-on keyboard-on computer-on) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n white in-bedroom bedroom-has bedroom-has lamp-in) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n black on-table on-table for-computer part-on) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(desk.n man-has man-wearing) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(desk.n man-sitting|a man-sitting|at|at|a man-sitting|at|a a) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(monitor.n white in-park wearing-trouser on-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wears-shirt) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(monitor.n white girl-sitting|at|a working sitting|a-sitting|at|a working|a) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n collartreed cessing_unit-under) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n cochdroch with-lin with-food) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n carentral_unit-under) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(telephone.n white on-desk on-bureau on-desk) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(telephone.n ) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-under cable-on cable-on cable-on cable-on) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(drawer.n ) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(drawer.n ) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n carentrocessing_unit-under) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n cal_prordrocessing_prdrick-in) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n white clupltered|of-desk) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n cal_unit-with) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(telephone.n white) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n couch-net|to monitor-on monitor-on) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a girl-sitting|a) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(hair.n black man-has man-wearing man-wearing) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk on-desk) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(monitor.n white girl-has) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(hair.n black man-sitting|at|a man-sitting|at|at|at|a) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n potograph-on edge-of) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n partered ptop grey) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n mercantile_establishment-on mercantile_establishment-on mercantile_element-on edge-of edge-of) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(pen.n ) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(girl.n sitting|a-desk working|at|at|a-desk) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(pearge.n black) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(peacket.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n sitting|a-desk) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-of cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on edge-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(cable.n white on-floor) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: floor.n cable-on
>> Response:  cable-on cable-on) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n paster-on ptop-on edge-of laptop-of edge-of edge-of edge-of edge-on) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(desk.n caral_processing cessing_meter-behind) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing_unit-under) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_unit-under) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_processing_prtick with-lit) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(table.n with-lin with-food) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(calar.n drawn on-pasee light-in) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(calare.n ) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(straw.n ) 

>> Prompt: strap.n black
>> Response:  <u speaker=BOT>(strap.n ) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(couck.n black) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(car.n ) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-wall edge-of edge-of edge-of edge-of edge-of) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(wall.n green potter-on ptop-on) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a girl-sitting|at|a) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(monitor.n white girl-has girl-has) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-has) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n green poter-on padtick-on) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n paster-on pastograph-on) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(potice.n ) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|a girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|at|a girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|at|a) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(girl.n girl-has) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(girl.n has|a-desk girl-sitting|at|at|a working sitting|at|a-desk girl-sitting|at|a) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(pen.n ) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(pear.n ) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(bag.n drine-in) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(cord.n drar-has) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(bag.n black) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tiled tan) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n drawn on-table with-food fork-next|to) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n dre|on girl-wearing) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tiled tan) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(pot.n part) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(sundding.n poxt|of-p) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(part.n black mug-has) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(pardding.n ) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(susait.n midleft dried ) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(sunde.n prt) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(sususunde.n mer purple) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(potick.n port-has) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(shoundd.n paror-on) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(sun.n partied) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(pillow.n on-armchair on-sund on-armchair) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(pillow.n against-sun on-wall teddy-against against) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n ) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n postice-on) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n ) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n in-bedroom lamp-in) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in lamp-in) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souse.n w-ee watee light-in) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(ouse.n woch wor wate with-cheese) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souse.n on-wall) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souster.n on-wall) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n on-st on-armchair) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(shot.n on-floor) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sof) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sthoth teddy-against) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(pillow.n on-sof) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sunde.n pag-on teddy-has) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sunde.n parocess-on) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sususe.n black) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(saide.n me-with) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(sususe.n mage-with) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(sun.n drar-has) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(susun.n red) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(ouse.n on-wall) 

>> Prompt: window.n 
>> Response:  ) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(out.n ) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(ouster.n on-wall) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(susad.n partied) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(sunder.n on-wall) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(susususe.n pardding pppppppot) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(sunde.n pag-has) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n of-dish) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(padding.n red) 

>> Prompt: door.n to-patio glass sliding
>> Response:  part)</script.1> <script.1 type=CONV> <u speaker=HUM>(courdr.n ) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(port.n port-has post-on) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(porddding.n pase-on past-on ptop-on) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(door.n to) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(to.n to|of-dish) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(bowl.n to|of-food) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(sausee.n black) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(sun.n de-with) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(see.n black) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(susage.n dr-has) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(suseet.n part-on) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(port.n partied ) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(se.n black on-wall) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(port.n ) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(pordding.n red) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(wall.n green poster-on pastograph-on edge-of) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(wall.n green bartise-on) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(seet.n wateee ceens) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(sususe.n paddding ppast) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(see.n black) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(port.n ) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(bord.n ) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(metallic_element.n ) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n furn far|ofed|of-drop) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n fllllllver on on-desk on-desk girl-sitting|at|at|at|a girl-sitting|at|a girl-sitting|at|a) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n fllllate feed|a-desk man-sitting|a) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hin.n draware ) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n drare-with) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n troate-with) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tral_prol_processing with-window bardrorocessing.n with-lin with-food) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sthot on-armchair) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker-behind) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(sun.n teddy-has) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(shouse.n on-floor) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(coardrd.n red) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(couct.n drare|on) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(bag.n black on-table table-in) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(cardaink.n ) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(sund.n part) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(sun.n green woorde w-light has-lamp lamp-in light-in lamp-in lamp-in lamp-in lamp-in lamp-in lamp-in lamp-in 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(pillow.n white on-armchair on-armchair) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker-sunde.n part-on) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(susunde.n part-has) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sooter.n on-wall) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sounge.n ) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sooust.n port-has part) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|at|a-desk working sitting|a-desk) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n wearing-trouser wearing-trouser sitting|a-desk wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-shirt wearing-sunsuised  

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n are|awn man-wearing) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n has-hair has-hair wears-shirt has-hair wearing-trouser wearing-shirt wearing-trouser wearing-trouser wearing-shirt wearing-sunsuit wearing-trouser wearing-trouser wears 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wears man-wearing man-wearing) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-under) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n man-sitting|a) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(calal.n dre|on-desk) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM_prdrocessing.n ) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(bard.n black on-table on-table with-table) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(bag.n drawn on-dish) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-wearing) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing woman-wears woman-wearing) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(mane.n man-wearing) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white on-table monitor-on keyboard-on keyboard-on keyboard-on computer-on computer-on computer-on) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(part.n on-wall) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white clare tral_processing working sitting|on-desk on-desk) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white on-desk on-desk) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(calal.n black) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under cable-on cable-on) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n couch-on man-has man-wearing) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n white clucluchairedinginging with-desk on-desk on-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n ar-wearing man-wearing woman-wearing) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n asirn working sitting|at|a-desk working|at|a-desk at|a-sitting|a-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n asian working working sitting|at|a-desk working sitting|at|at|a-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-wearing) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(sun.n red) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n partion-on ptop-on) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n pastered bledge-of) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n paster-on paster-on) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n potograph-on edge-of) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(bag.n e-on drawnde-on) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(shade.n on-street) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(metal.n ric_element on-wall) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parking_shoe-incoatroat wearing-trouser eating-ring wearing-trouser wearing-trouser wearing-trouser wearing-shirt wearing-trouser wearing-trouser wears- 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked parked behind-man-has parked|on) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(collllack.n black) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(met.n ) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(meat.n ) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(dish.n with-food with-food dish-with) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bin.n black on-table on-table for-computer part-of) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bin.n draware de|on) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(cord.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(coad.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(carg.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(carg.n ) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(hand.n man-has) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n sitting girl-sitting|at|a working|at|a) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(man.n man-has man-wearing woman-wears man-wearing) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(hand.n on-desk) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(hand.n girl-has) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(man.n man-has man-wearing) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(turoad.n on-wall) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(tu speaker=BOT>(lace.n trawaptop grey on-floor) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(lue.n black on-desk on-desk) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(llap.n prt-has) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(lace.n black on-desk) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(wall.n pastick-on padd-on) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(wall.n pastered ptop-on ptop-on ptop-on) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(window.n hound-on) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n pastick-on edge-of) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n baby-on ptop-on monitor-on) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n partion parocessing_unit-under cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: tray.n red
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: tray.n red
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: tray.n red
>> Response:  <u speaker=BOT>(dish.n ) 

>> Prompt: tray.n red
>> Response:  )</u speaker=HUM>(dish.n with-cheese) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-has) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n has-hair man-sitting|at|a man-sitting|at|a) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n araire wearing-trouser sitting|at|a-desk) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n areed man-wearing man-wearing) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(couck.n dr-has) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(susun.n e-with) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(court.n de|of-dish) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(calal.n mise-with) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(saide.n black) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(desk.n caraptop cendrawn chocessing_unit-under) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(seet.n black) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing_unit-with girl-wearing girl-with) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n chal_prococessing_ptop grey chrordrick with-lindrdrick.n with-lish with-food)</ 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n chochdrde-has) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing woman-wearing) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n man-has man-wearing man-wearing man-wearing woman-wears man-wearing) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: container.n made|of-metallic_element
>> Response:  )</script.1> <u speaker=HUM>(bag.n black on-wall) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(couch.n ) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(coucord.n black) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sususee.n black on-wall) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sun.n red) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sundrar.n drawn ) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(saide.n de|on-table) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(bink.n black) 

>> Prompt: pavement.n band-on
>> Response:  drawndee|on) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(bag.n drarawn on-dish) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(calar.n dare|on darawn on-dish) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(coladr.n ) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(pordding.n ) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(chouch.n tan) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(cholt.n tan) 

>> Prompt: device.n green
>> Response:  cordr-has) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bage.n e-with) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bink.n enge with-food) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in bedroom-in lamp-in lamp-in lamp-in lamp-in) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(bedroom.n in-park has-ear behind-mane behind-man) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(bedroom.n in-bedroom feed|in bedroom-in bedroom-has) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(desk.n white claptop-on chair-on monitor-on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(wall.n green cllaptop grey) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(wall.n caroptop ptop-on ptop-on laptop-on ptop-on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(padding.n past) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n black clulueentrocessing_unit-with) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n white cluclucluentroch workinging_ptop grey roroch with-lin with-lit) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk on-desk) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(hair.n drick with-food) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(hair.n dressing dressing_unit-under) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(light.n light-in lamp-in lamp-in lamp-in) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(light.n wate light-in) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(wall.n potick potick-on) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n housh porddd-on) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n hound-of) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(bin.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(bag.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(caraink.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(carain.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(bureau.n costick-on monitor-on) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(desk.n cholartiled with-food) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(bureau.n cotrtion-on carocessing_ptop grey) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(desktop.n carent.n cal_prdrocess-on girl-with) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n parstered ptop-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n partised part-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n partered ptop-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n pastice-on) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n green poter-on lastograph-on edge-of) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on ledge-of edge-of) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(lacel.n black) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n green poster-on padtice|on ptop-on) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing with-lit) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(desk.n carock-on) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(pardding.n red) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n pastick-in) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(chourdrd.n ) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(lue.n black on-desk) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(lueellal.n ceing) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n book-on baby) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n book-on) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n on-table on-desk on-table) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n carentral_pcessing_prtrticke|mit) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  curtapart.n black) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n cal_processing with-lit) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n cal_processing chordrick-on) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on edge-of edge-of ledge-of edge-of) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n coultice-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n coladrk-on chair-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n courtiled with-food) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(wall.n green bag-on) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(said.n with-lis) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(sunde.n on-floor) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(hair.n watee deee with-cheese) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(lacke.n choladr-on) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(lap.n red) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(bag.n ) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(bard.n black) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n ) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n on in-lamp light-in light-in lamp-in) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n on in-bedroom bedroom-in bedroom-in) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(lap.n green) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(ledge.n of-image) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(light.n on) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n in-lamp) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(lamp.n in-bedroom) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(lamp.n in-bedroom bedroom-has) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(bedroom.n in-bedroom feed|in bedroom-in) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(bedroom.n in-park has-ear has-ear behind-ear has-animal has-ear has-ear has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-top 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in bedroom-has) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(chouct.n ) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(wall.n postick-on edge-of) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(chourt.n ) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n white cluclaptop grey on-bureau) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n laptop-on) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-desk) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lue.n black on-bureau on-bureau on-desk on-bureau) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(part.n corddr-on) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(choush.n black) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(page.n with-liquidd) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(couch.n black) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(pard.n red) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(port.n black) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(paddrink.n red) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(wall.n paster-on ptop-on padtick-on edge-on edge-of edge-of) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(wall.n green poster-on) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n cortion de-on) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n caraprol_processing_unit-under) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n corddrocessing_unit-with) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk on-bureau) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on computer-on keyboard-on) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-table for-bureau) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n keyboard-on keyboard-on keyboard-on computer-on computer-on) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-table keyboard-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n potice-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n green parose-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partion part-on past-on edge-of edge-of edge-of edge-of edge-of edge-of edge-of edge-of 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(computer.n on-desk) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker-holding chin chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(chin.n holding-chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(charger.n red chordrg-holding holding-chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(charger.n chin) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker-on) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker=HUM>(con.n white on-table con-on keyboard-on keyboard-on keyboard-on computer-on keyboard-on computer-on computer-on) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker-on chordd.n on-table con-on cain) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker=HUM>(con.n green chourde-on) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-with) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n caral_processing_unit-with pen-under) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n courtiling) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n caral_processing_unit-under) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau on-bureau on-floor) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-desk on-table mousepad-on) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table for-computer) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table for-computer mouse-on mouse-on mouse-on) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(computer.n on-table for-computer mouse-on) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(table.n white table-with) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(monitor.n white keyboard-in|a monitor-on keyboard-in|a) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker-nex.n cal|to monitor-on) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(couch.n chollarde with-cheese) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(con.n green coucholadre ce-on) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(saun.n white) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(courd.n on-table) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker-on chouch-on) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(wall.n partered en-on edge-of) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(wall.n pastick e-on edge-of edge-of) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(susaage.n black) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(noustid.n ) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(noustide.n ) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(n.n on-wall) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(noutrd.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(niousk.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(nouset.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(nition.n ) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n pastick-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n potick prt-on pastograph-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n green postograph-on lad-on edge-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n paster-on) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(chourd.n red) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(sun.n mugy-with) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(seetrain.n drawn on-dish) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(suse.n black) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(edge.n of-image edge-of) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(n.n n-of edge-of) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(nound.n ) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker-on) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(coucouck.n chollar-has) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(coucourd.n cessing_unit-with) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(couch.n colarde with-cheese napkin-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bord.n e-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(barge.n ) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bage.n black) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(chourd.n red) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(couck.n black murtide|of-dish) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(bag.n e-in) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white girl-has) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white girl-sitting|in|a girl-wearing) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(computer.n lawaptop lamp-on lamp-on laptop-on lamp-in lamp-in lamp-in) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(computer.n latered keyboard-on keyboard-on keyboard-on computer-on) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau on-bureau) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(computer.n lawn cheeelll-on) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker-of) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(mousepad.n on-desk on-desk on-desk) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(mousepad.n white keyboard-in) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n pastick next|to-wall) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(shoush.n image-of) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partion bag-on ptop-on edge-on) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on edge-of edge-of) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(said.n red) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n colartiling) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(table.n white claptop-on) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n courdrocessing with-lindrick-cheese) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n coladre-on) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(table.n cal_processing_unit-under) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-desk) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(table.n white cluchair-has) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table on-table) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-desk) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-picture) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(cholt.n girl-with) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(wall.n partion bed monitor-on part-on) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(wall.n baby-on ledge-of) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(chouck.n with-lis) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(napkin.n on-plate) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-plate) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n cheese-in) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(with.n with-food dish-under) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(with.n dish-with) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(food.n with-food) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(liquid.n with-food) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(liquid.n with-liquige) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(glass.n with-glass) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(liquid.n with-liquid) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(lin.n with-liquid) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  dish-in) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(glass.n with-straw) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(straw.n with-food) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(straw.n with-food) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n glass-with) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n dish-with) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n with-food with-cheese) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n green) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(lindd.n ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(food.n glass ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(lind.n red) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-under) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(on.n plate-on) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n dish-with) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n under-napkin under-cheese) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(napkin.n ) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker-on plate-with) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(cheese.n under-napkin) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(courg.n ) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(chouch.n miged with-lis) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(susage.n ) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(sarge.n ) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-under) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food with-cheese cheese-on under-napkin-on) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n under-cheese) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food dish-with) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(car.n black) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(choad.n ch-with) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mag.n mage-on bottle-in) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mage.n with-liquy mid-food) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mug.n red) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-with) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n with-food with-cheese) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(table.n table-in) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker-under) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker=HUM>(cheese.n under-cheese) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker-under)</u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food dish-with) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-cheese) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(cheese.n dish-with) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(cheese.n cheese-on under-cheese) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(napkin.n under-cheese) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(napkin.n on-dish) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(napkin.n under-cheese cheese) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-plate) 
>> Loaded models dict_keys(['chat'])


>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(colar.n cessing) 

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(cordr.n drawn on-dish) 

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(desk.n colare with-lin  

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(chollar.n black) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(bicycle.n parked far|ay parked|on-street) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(bicycle.n near-parked|on parked|a-parked|ay parked|ay bicycle-parked|on far|ay parked|on-parked|ay parked 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(parking_point.n animal-has animal-has) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(park.n parked|on-street) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(street.n bicycle-parked|on parked bicycle-ns parked parked|on-parked parked|a-sidewalk) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked parked behind-man-has man-wearing) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind bicycle-park has-behind) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(street.n bicycle-near parked bicycle-near parking_meter-park has-behind bicycle-behind) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n brown wearing-shirt wearing-shirt) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n brown woman-wearing woman-wearing woman-wearing woman-wearing) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing woman-wearing woman-wearing woman-wearing) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n brown man-has man-has) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n woman-wearing man-wearing woman-wearing woman-wears woman-wearing woman-wearing man-wears) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n woman-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n black animal-has animal-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n parked|on-sidewalk) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n man-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n parked behind-animal) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n brown) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has man-has) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(back.n parked|on-sidewalk) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker-on bicycle-near near-near) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(street.n brown bicycle-parked|on parked|on-parked parked|on parked|on-street) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n near-parked parked|on bicycle-parked parked parked|on-parked|on bicycle-parked far|on parked parked|on-sidewalk)</u 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n parked|on-sidewalk) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n near-parked far|ar|away parked|on-sidewalk) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(wall.n green paddde-on) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n black murtuge-has) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n black tanding blver-has) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n wateee with-food) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n drar-has) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n black with-window) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind behind-behind) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(trunk.n on-street) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(trunk.n elephant-has) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked|on parking_meter-behind) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(bicycle.n parked parked|on-parked|a-parked parked|on parked|on-street) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(park.n tree-has parked|on parked|on-sidewalk) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(park.n parked|on-street) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(bicycle.n near-tree parked|on parked|a-parked parked|on-sidewalk) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-has woman-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wearing man-wearing) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(park.n parked|a-sidewalk) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n ndrn near-tree behind-tree behind-animal) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n parked far|ay parked far|ar|ay parked|on-street) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n ndrn parked|on parked parked|on-street) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|at|a-desk working sitting|at|a-desk wearing-desk at|at|a-desk wearing-desk) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-has) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(trouser.n brown woman-wearing man-wearing) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|a-desk) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker-wearing woman-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing man-has man-wearing man-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-has man-wearing man-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(man.n ar-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-has man-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n woman-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing man-has man-wearing) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker=HUM>(chin.n drarawn on) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker-chin) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker=HUM>(choat.n man-wearing) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker-chin) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(calar.n rawn wareeeelllll_prococess with-window bag-on) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(g.n raware wndre) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(g.n holding-carain) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(choard.n raware ) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind behind-behind) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-fur|of) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n brick next|to-street bicycle-parked|of parked|on-parking_meter-on bicycle-parked|on parked|on-parked parked|a-park 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked|on bicycle-parked|on bicycle-parked parked|on-parked|on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n pastice-on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n partion-on basent-on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n paster-on edge-on edge-of edge-of edge-of edge-of edge-of) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked parked far|ay parked|on-sidewalk) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked parked parked far|ay parking_meter-behind-animal has-ear animal-in animal-in animal-in animal-in) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(park.n parked parked|on-sidewalk) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked faried parked|on-street) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cent.n black) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(ceat.n drawn on-dish) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cal.n ) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cal.n drawn ) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(bink.n black on-table with-food with-food) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(cent.n ral_processing drice|on-desk) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(barg.n black) 

>> Prompt: road.n 
>> Response:  )</script.1 type=HUM>(courdrg.n ) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(bage.n black) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(bage.n with-food) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has woman-wearing) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-has man-wearing woman-wearing) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(bicycle.n near-near parked|ay parked|on-street) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(man.n has-head has-head eating-pasture eats-pasture has-head has-head has-ear has-ear has-head enjoying-pasture has-ear has-head has-head has-head has-head has-head has- 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-has woman-wearing) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n drawn cessing) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(frame.n armchair-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(frame.n armchair-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(window.n house-on) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(couch.n drawn cheememch with-food) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(courd.n ) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(coucollllllar.n with-liquide) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(choate.n ) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing woman-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wearing woman-wearing) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-tree near-behind animal-animal-has) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-tree parked behind-animal) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parking_shoe-incain) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-parked|ar|on fawareeed parked parked|on-sidewalk) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(pordd.n ) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mag.n ) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mad.n red) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mercantile_establishment.n on-wall pastograph-wall) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on keyboard-on computer-in|on keyboard-in|a keyboard-in|a keyboard-on keyboard-on keyboard-on keyboard-on computer-on) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n white in-bedroom bedroom-has bedroom-has lamp-in) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n black on-table on-table for-computer part-on) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(desk.n man-has man-wearing) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(desk.n man-sitting|a man-sitting|at|at|a man-sitting|at|a a) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(monitor.n white in-park wearing-trouser on-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wears-shirt) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(monitor.n white girl-sitting|at|a working sitting|a-sitting|at|a working|a) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n collartreed cessing_unit-under) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n cochdroch with-lin with-food) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n carentral_unit-under) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(telephone.n white on-desk on-bureau on-desk) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(telephone.n ) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-under cable-on cable-on cable-on cable-on) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(drawer.n ) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(drawer.n ) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n carentrocessing_unit-under) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n cal_prordrocessing_prdrick-in) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n white clupltered|of-desk) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n cal_unit-with) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(telephone.n white) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n couch-net|to monitor-on monitor-on) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a girl-sitting|a) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(hair.n black man-has man-wearing man-wearing) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk on-desk) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(monitor.n white girl-has) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(hair.n black man-sitting|at|a man-sitting|at|at|at|a) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n potograph-on edge-of) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n partered ptop grey) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n mercantile_establishment-on mercantile_establishment-on mercantile_element-on edge-of edge-of) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(pen.n ) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(girl.n sitting|a-desk working|at|at|a-desk) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(pearge.n black) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(peacket.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n sitting|a-desk) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-of cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on edge-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(cable.n white on-floor) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: floor.n cable-on
>> Response:  cable-on cable-on) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n paster-on ptop-on edge-of laptop-of edge-of edge-of edge-of edge-on) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(desk.n caral_processing cessing_meter-behind) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing_unit-under) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_unit-under) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_processing_prtick with-lit) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(table.n with-lin with-food) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(calar.n drawn on-pasee light-in) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(calare.n ) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(straw.n ) 

>> Prompt: strap.n black
>> Response:  <u speaker=BOT>(strap.n ) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(couck.n black) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(car.n ) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-wall edge-of edge-of edge-of edge-of edge-of) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(wall.n green potter-on ptop-on) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a girl-sitting|at|a) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(monitor.n white girl-has girl-has) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-has) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n green poter-on padtick-on) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n paster-on pastograph-on) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(potice.n ) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|a girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|at|a girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|at|a) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(girl.n girl-has) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(girl.n has|a-desk girl-sitting|at|at|a working sitting|at|a-desk girl-sitting|at|a) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(pen.n ) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(pear.n ) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(bag.n drine-in) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(cord.n drar-has) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(bag.n black) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tiled tan) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n drawn on-table with-food fork-next|to) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n dre|on girl-wearing) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tiled tan) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(pot.n part) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(sundding.n poxt|of-p) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(part.n black mug-has) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(pardding.n ) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(susait.n midleft dried ) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(sunde.n prt) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(sususunde.n mer purple) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(potick.n port-has) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(shoundd.n paror-on) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(sun.n partied) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(pillow.n on-armchair on-sund on-armchair) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(pillow.n against-sun on-wall teddy-against against) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n ) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n postice-on) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n ) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n in-bedroom lamp-in) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in lamp-in) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souse.n w-ee watee light-in) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(ouse.n woch wor wate with-cheese) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souse.n on-wall) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souster.n on-wall) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n on-st on-armchair) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(shot.n on-floor) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sof) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sthoth teddy-against) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(pillow.n on-sof) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sunde.n pag-on teddy-has) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sunde.n parocess-on) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sususe.n black) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(saide.n me-with) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(sususe.n mage-with) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(sun.n drar-has) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(susun.n red) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(ouse.n on-wall) 

>> Prompt: window.n 
>> Response:  ) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(out.n ) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(ouster.n on-wall) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(susad.n partied) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(sunder.n on-wall) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(susususe.n pardding pppppppot) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(sunde.n pag-has) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n of-dish) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(padding.n red) 

>> Prompt: door.n to-patio glass sliding
>> Response:  part)</script.1> <script.1 type=CONV> <u speaker=HUM>(courdr.n ) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(port.n port-has post-on) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(porddding.n pase-on past-on ptop-on) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(door.n to) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(to.n to|of-dish) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(bowl.n to|of-food) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(sausee.n black) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(sun.n de-with) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(see.n black) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(susage.n dr-has) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(suseet.n part-on) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(port.n partied ) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(se.n black on-wall) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(port.n ) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(pordding.n red) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(wall.n green poster-on pastograph-on edge-of) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(wall.n green bartise-on) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(seet.n wateee ceens) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(sususe.n paddding ppast) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(see.n black) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(port.n ) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(bord.n ) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(metallic_element.n ) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n furn far|ofed|of-drop) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n fllllllver on on-desk on-desk girl-sitting|at|at|at|a girl-sitting|at|a girl-sitting|at|a) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n fllllate feed|a-desk man-sitting|a) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hin.n draware ) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n drare-with) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n troate-with) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tral_prol_processing with-window bardrorocessing.n with-lin with-food) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sthot on-armchair) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker-behind) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(sun.n teddy-has) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(shouse.n on-floor) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(coardrd.n red) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(couct.n drare|on) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(bag.n black on-table table-in) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(cardaink.n ) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(sund.n part) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(sun.n green woorde w-light has-lamp lamp-in light-in lamp-in lamp-in lamp-in lamp-in lamp-in lamp-in lamp-in 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(pillow.n white on-armchair on-armchair) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker-sunde.n part-on) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(susunde.n part-has) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sooter.n on-wall) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sounge.n ) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sooust.n port-has part) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|at|a-desk working sitting|a-desk) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n wearing-trouser wearing-trouser sitting|a-desk wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-shirt wearing-sunsuised  

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n are|awn man-wearing) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n has-hair has-hair wears-shirt has-hair wearing-trouser wearing-shirt wearing-trouser wearing-trouser wearing-shirt wearing-sunsuit wearing-trouser wearing-trouser wears 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wears man-wearing man-wearing) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-under) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n man-sitting|a) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(calal.n dre|on-desk) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM_prdrocessing.n ) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(bard.n black on-table on-table with-table) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(bag.n drawn on-dish) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-wearing) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing woman-wears woman-wearing) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(mane.n man-wearing) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white on-table monitor-on keyboard-on keyboard-on keyboard-on computer-on computer-on computer-on) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(part.n on-wall) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white clare tral_processing working sitting|on-desk on-desk) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white on-desk on-desk) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(calal.n black) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under cable-on cable-on) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n couch-on man-has man-wearing) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n white clucluchairedinginging with-desk on-desk on-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n ar-wearing man-wearing woman-wearing) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n asirn working sitting|at|a-desk working|at|a-desk at|a-sitting|a-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n asian working working sitting|at|a-desk working sitting|at|at|a-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-wearing) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(sun.n red) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n partion-on ptop-on) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n pastered bledge-of) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n paster-on paster-on) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n potograph-on edge-of) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(bag.n e-on drawnde-on) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(shade.n on-street) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(metal.n ric_element on-wall) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parking_shoe-incoatroat wearing-trouser eating-ring wearing-trouser wearing-trouser wearing-trouser wearing-shirt wearing-trouser wearing-trouser wears- 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked parked behind-man-has parked|on) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(collllack.n black) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(met.n ) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(meat.n ) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(dish.n with-food with-food dish-with) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bin.n black on-table on-table for-computer part-of) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bin.n draware de|on) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(cord.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(coad.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(carg.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(carg.n ) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(hand.n man-has) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n sitting girl-sitting|at|a working|at|a) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(man.n man-has man-wearing woman-wears man-wearing) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(hand.n on-desk) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(hand.n girl-has) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(man.n man-has man-wearing) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(turoad.n on-wall) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(tu speaker=BOT>(lace.n trawaptop grey on-floor) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(lue.n black on-desk on-desk) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(llap.n prt-has) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(lace.n black on-desk) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(wall.n pastick-on padd-on) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(wall.n pastered ptop-on ptop-on ptop-on) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(window.n hound-on) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n pastick-on edge-of) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n baby-on ptop-on monitor-on) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n partion parocessing_unit-under cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: tray.n red
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: tray.n red
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: tray.n red
>> Response:  <u speaker=BOT>(dish.n ) 

>> Prompt: tray.n red
>> Response:  )</u speaker=HUM>(dish.n with-cheese) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-has) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n has-hair man-sitting|at|a man-sitting|at|a) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n araire wearing-trouser sitting|at|a-desk) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n areed man-wearing man-wearing) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(couck.n dr-has) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(susun.n e-with) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(court.n de|of-dish) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(calal.n mise-with) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(saide.n black) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(desk.n caraptop cendrawn chocessing_unit-under) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(seet.n black) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing_unit-with girl-wearing girl-with) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n chal_prococessing_ptop grey chrordrick with-lindrdrick.n with-lish with-food)</ 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n chochdrde-has) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing woman-wearing) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n man-has man-wearing man-wearing man-wearing woman-wears man-wearing) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: container.n made|of-metallic_element
>> Response:  )</script.1> <u speaker=HUM>(bag.n black on-wall) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(couch.n ) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(coucord.n black) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sususee.n black on-wall) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sun.n red) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sundrar.n drawn ) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(saide.n de|on-table) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(bink.n black) 

>> Prompt: pavement.n band-on
>> Response:  drawndee|on) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(bag.n drarawn on-dish) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(calar.n dare|on darawn on-dish) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(coladr.n ) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(pordding.n ) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(chouch.n tan) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(cholt.n tan) 

>> Prompt: device.n green
>> Response:  cordr-has) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bage.n e-with) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bink.n enge with-food) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in bedroom-in lamp-in lamp-in lamp-in lamp-in) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(bedroom.n in-park has-ear behind-mane behind-man) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(bedroom.n in-bedroom feed|in bedroom-in bedroom-has) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(desk.n white claptop-on chair-on monitor-on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(wall.n green cllaptop grey) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(wall.n caroptop ptop-on ptop-on laptop-on ptop-on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(padding.n past) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n black clulueentrocessing_unit-with) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n white cluclucluentroch workinging_ptop grey roroch with-lin with-lit) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk on-desk) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(hair.n drick with-food) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(hair.n dressing dressing_unit-under) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(light.n light-in lamp-in lamp-in lamp-in) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(light.n wate light-in) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(wall.n potick potick-on) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n housh porddd-on) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n hound-of) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(bin.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(bag.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(caraink.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(carain.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(bureau.n costick-on monitor-on) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(desk.n cholartiled with-food) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(bureau.n cotrtion-on carocessing_ptop grey) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(desktop.n carent.n cal_prdrocess-on girl-with) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n parstered ptop-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n partised part-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n partered ptop-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n pastice-on) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n green poter-on lastograph-on edge-of) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on ledge-of edge-of) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(lacel.n black) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n green poster-on padtice|on ptop-on) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing with-lit) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(desk.n carock-on) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(pardding.n red) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n pastick-in) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(chourdrd.n ) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(lue.n black on-desk) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(lueellal.n ceing) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n book-on baby) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n book-on) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n on-table on-desk on-table) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n carentral_pcessing_prtrticke|mit) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  curtapart.n black) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n cal_processing with-lit) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n cal_processing chordrick-on) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on edge-of edge-of ledge-of edge-of) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n coultice-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n coladrk-on chair-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n courtiled with-food) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(wall.n green bag-on) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(said.n with-lis) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(sunde.n on-floor) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(hair.n watee deee with-cheese) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(lacke.n choladr-on) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(lap.n red) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(bag.n ) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(bard.n black) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n ) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n on in-lamp light-in light-in lamp-in) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n on in-bedroom bedroom-in bedroom-in) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(lap.n green) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(ledge.n of-image) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(light.n on) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n in-lamp) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(lamp.n in-bedroom) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(lamp.n in-bedroom bedroom-has) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(bedroom.n in-bedroom feed|in bedroom-in) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(bedroom.n in-park has-ear has-ear behind-ear has-animal has-ear has-ear has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-top 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in bedroom-has) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(chouct.n ) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(wall.n postick-on edge-of) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(chourt.n ) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n white cluclaptop grey on-bureau) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n laptop-on) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-desk) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lue.n black on-bureau on-bureau on-desk on-bureau) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(part.n corddr-on) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(choush.n black) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(page.n with-liquidd) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(couch.n black) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(pard.n red) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(port.n black) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(paddrink.n red) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(wall.n paster-on ptop-on padtick-on edge-on edge-of edge-of) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(wall.n green poster-on) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n cortion de-on) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n caraprol_processing_unit-under) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n corddrocessing_unit-with) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk on-bureau) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on computer-on keyboard-on) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-table for-bureau) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n keyboard-on keyboard-on keyboard-on computer-on computer-on) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-table keyboard-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n potice-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n green parose-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partion part-on past-on edge-of edge-of edge-of edge-of edge-of edge-of edge-of edge-of 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(computer.n on-desk) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker-holding chin chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(chin.n holding-chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(charger.n red chordrg-holding holding-chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(charger.n chin) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker-on) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker=HUM>(con.n white on-table con-on keyboard-on keyboard-on keyboard-on computer-on keyboard-on computer-on computer-on) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker-on chordd.n on-table con-on cain) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker=HUM>(con.n green chourde-on) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-with) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n caral_processing_unit-with pen-under) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n courtiling) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n caral_processing_unit-under) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau on-bureau on-floor) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-desk on-table mousepad-on) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table for-computer) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table for-computer mouse-on mouse-on mouse-on) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(computer.n on-table for-computer mouse-on) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(table.n white table-with) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(monitor.n white keyboard-in|a monitor-on keyboard-in|a) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker-nex.n cal|to monitor-on) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(couch.n chollarde with-cheese) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(con.n green coucholadre ce-on) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(saun.n white) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(courd.n on-table) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker-on chouch-on) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(wall.n partered en-on edge-of) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(wall.n pastick e-on edge-of edge-of) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(susaage.n black) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(noustid.n ) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(noustide.n ) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(n.n on-wall) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(noutrd.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(niousk.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(nouset.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(nition.n ) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n pastick-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n potick prt-on pastograph-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n green postograph-on lad-on edge-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n paster-on) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(chourd.n red) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(sun.n mugy-with) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(seetrain.n drawn on-dish) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(suse.n black) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(edge.n of-image edge-of) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(n.n n-of edge-of) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(nound.n ) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker-on) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(coucouck.n chollar-has) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(coucourd.n cessing_unit-with) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(couch.n colarde with-cheese napkin-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bord.n e-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(barge.n ) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bage.n black) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(chourd.n red) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(couck.n black murtide|of-dish) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(bag.n e-in) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white girl-has) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white girl-sitting|in|a girl-wearing) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(computer.n lawaptop lamp-on lamp-on laptop-on lamp-in lamp-in lamp-in) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(computer.n latered keyboard-on keyboard-on keyboard-on computer-on) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau on-bureau) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(computer.n lawn cheeelll-on) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker-of) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(mousepad.n on-desk on-desk on-desk) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(mousepad.n white keyboard-in) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n pastick next|to-wall) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(shoush.n image-of) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partion bag-on ptop-on edge-on) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on edge-of edge-of) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(said.n red) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n colartiling) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(table.n white claptop-on) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n courdrocessing with-lindrick-cheese) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n coladre-on) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(table.n cal_processing_unit-under) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-desk) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(table.n white cluchair-has) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table on-table) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-desk) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-picture) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(cholt.n girl-with) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(wall.n partion bed monitor-on part-on) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(wall.n baby-on ledge-of) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(chouck.n with-lis) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(napkin.n on-plate) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-plate) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n cheese-in) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(with.n with-food dish-under) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(with.n dish-with) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(food.n with-food) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(liquid.n with-food) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(liquid.n with-liquige) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(glass.n with-glass) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(liquid.n with-liquid) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(lin.n with-liquid) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  dish-in) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(glass.n with-straw) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(straw.n with-food) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(straw.n with-food) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n glass-with) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n dish-with) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n with-food with-cheese) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n green) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(lindd.n ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(food.n glass ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(lind.n red) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-under) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(on.n plate-on) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n dish-with) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n under-napkin under-cheese) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(napkin.n ) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker-on plate-with) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(cheese.n under-napkin) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(courg.n ) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(chouch.n miged with-lis) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(susage.n ) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(sarge.n ) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-under) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food with-cheese cheese-on under-napkin-on) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n under-cheese) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food dish-with) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(car.n black) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(choad.n ch-with) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mag.n mage-on bottle-in) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mage.n with-liquy mid-food) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mug.n red) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-with) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n with-food with-cheese) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(table.n table-in) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker-under) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker=HUM>(cheese.n under-cheese) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker-under)</u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food dish-with) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-cheese) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(cheese.n dish-with) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(cheese.n cheese-on under-cheese) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(napkin.n under-cheese) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(napkin.n on-dish) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(napkin.n under-cheese cheese) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-plate) 

>> Prompt: vegetable.n on-dish
>> Response:  <u speaker=HUM>(dish.n glass-on) 

>> Prompt: vegetable.n on-dish
>> Response:  <u speaker=HUM>(plate.n under-cheese) 

>> Prompt: vegetable.n on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: vegetable.n on-dish
>> Response:  <u speaker=HUM>(plate.n with-cheese) 

>> Prompt: condiment.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n with-food) 

>> Prompt: condiment.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n with-cheese) 

>> Prompt: condiment.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n coucoch with-food) 

>> Prompt: condiment.n in-bottle
>> Response:  <u speaker=HUM>(coadr.n ) 

>> Prompt: man.n eating-ring wears-trouser in-shirt holding-ring wearing-shirt has-nose has-ear wearing-watch light-behind wears-shirt has-hair eating wearing-trouser wearing-spectacles has-hand licking-thumb has-watch has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: man.n eating-ring wears-trouser in-shirt holding-ring wearing-shirt has-nose has-ear wearing-watch light-behind wears-shirt has-hair eating wearing-trouser wearing-spectacles has-hand licking-thumb has-watch has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing) 

>> Prompt: man.n eating-ring wears-trouser in-shirt holding-ring wearing-shirt has-nose has-ear wearing-watch light-behind wears-shirt has-hair eating wearing-trouser wearing-spectacles has-hand licking-thumb has-watch has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing woman-wearing) 

>> Prompt: man.n eating-ring wears-trouser in-shirt holding-ring wearing-shirt has-nose has-ear wearing-watch light-behind wears-shirt has-hair eating wearing-trouser wearing-spectacles has-hand licking-thumb has-watch has-spectacles
>> Response:  <u speaker=HUM>(ring.n wearing-shirt woman-wearing) 

>> Prompt: shirt.n woman-wearing blue baby|blue lamp|blue man-wearing man-wears woman-wears has-piece man-in has-button short|sleeved light|blue has-collar woman-in
>> Response:  <u speaker=HUM>(hair.n woman-has) 

>> Prompt: shirt.n woman-wearing blue baby|blue lamp|blue man-wearing man-wears woman-wears has-piece man-in has-button short|sleeved light|blue has-collar woman-in
>> Response:  <u speaker=HUM>(hair.n woman-wearing) 

>> Prompt: shirt.n woman-wearing blue baby|blue lamp|blue man-wearing man-wears woman-wears has-piece man-in has-button short|sleeved light|blue has-collar woman-in
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: shirt.n woman-wearing blue baby|blue lamp|blue man-wearing man-wears woman-wears has-piece man-in has-button short|sleeved light|blue has-collar woman-in
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: ring.n woman-eating woman-holding brown man-eating man-holding
>> Response:  <u speaker=HUM>(guy.n woman-wearing woman-wearing woman-wearing) 

>> Prompt: ring.n woman-eating woman-holding brown man-eating man-holding
>> Response:  <u speaker=HUM>(chin.n black woman-wearing) 

>> Prompt: ring.n woman-eating woman-holding brown man-eating man-holding
>> Response:  <u speaker=HUM>(guym_shoe.n brown woman-has man-wearing man-wearing) 

>> Prompt: ring.n woman-eating woman-holding brown man-eating man-holding
>> Response:  <u speaker=HUM>(chin.n drawn on) 

>> Prompt: watch.n woman-has woman-wearing multicolored black man-wearing red man-has
>> Response:  <u speaker=HUM>(trouser.n woman-wearing man-wearing man-wearing woman-wearing) 

>> Prompt: watch.n woman-has woman-wearing multicolored black man-wearing red man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: watch.n woman-has woman-wearing multicolored black man-wearing red man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing) 

>> Prompt: watch.n woman-has woman-wearing multicolored black man-wearing red man-has
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: spectacles.n woman-has woman-wearing dark man-wearing brown a|pair man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: spectacles.n woman-has woman-wearing dark man-wearing brown a|pair man-has
>> Response:  <u speaker=HUM>(trouser.n brown man-has man-wearing man-wearing) 

>> Prompt: spectacles.n woman-has woman-wearing dark man-wearing brown a|pair man-has
>> Response:  <u speaker=HUM>(ring.n holding-chin) 

>> Prompt: spectacles.n woman-has woman-wearing dark man-wearing brown a|pair man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing woman-wearing) 

>> Prompt: hair.n woman-has black shaved messy brown man-has
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing woman-wearing) 

>> Prompt: hair.n woman-has black shaved messy brown man-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: hair.n woman-has black shaved messy brown man-has
>> Response:  <u speaker=HUM>(hair.n black woman-has) 

>> Prompt: hair.n woman-has black shaved messy brown man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-has) 

>> Prompt: thumb.n man-licking woman-licking in-face in-mouth
>> Response:  <u speaker=HUM>(gy.n dr-has) 

>> Prompt: thumb.n man-licking woman-licking in-face in-mouth
>> Response:  <u speaker=HUM>(ge.n drawn ware wn on-dish) 

>> Prompt: thumb.n man-licking woman-licking in-face in-mouth
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: thumb.n man-licking woman-licking in-face in-mouth
>> Response:  <u speaker=HUM>(gy.n woman-has) 

>> Prompt: mouth.n thumb-in
>> Response:  <u speaker=HUM>(light.n cholart) 

>> Prompt: mouth.n thumb-in
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: mouth.n thumb-in
>> Response:  <u speaker=HUM>(lamp.n in-bedroom lamp-in bedroom-in) 

>> Prompt: mouth.n thumb-in
>> Response:  <u speaker=HUM>(lamp.n in|bart feed parked|on-street) 

>> Prompt: light.n behind-man behind-woman
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n behind-man behind-woman
>> Response:  <u speaker=HUM>(man.n man-wearing achin|a) 

>> Prompt: light.n behind-man behind-woman
>> Response:  <u speaker=HUM>(woman.n woman-has woman-has) 

>> Prompt: light.n behind-man behind-woman
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing woman-wearing woman-wearing) 

>> Prompt: wall.n beige red orange
>> Response:  <u speaker=HUM>(courdr.n brown) 

>> Prompt: wall.n beige red orange
>> Response:  <u speaker=HUM>(suse.n woman-wearing) 

>> Prompt: wall.n beige red orange
>> Response:  <u speaker=HUM>(suseet.n woman-wearing) 

>> Prompt: wall.n beige red orange
>> Response:  <u speaker=HUM>(see.n woman-has) 

>> Prompt: trouser.n woman-wearing dark man-wearing man-wears woman-wears
>> Response:  <u speaker=HUM>(man.n man-has) 

>> Prompt: trouser.n woman-wearing dark man-wearing man-wears woman-wears
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing) 

>> Prompt: trouser.n woman-wearing dark man-wearing man-wears woman-wears
>> Response:  <u speaker=HUM>(man.n wearing-trouser wearing-trouser wearing-shirt) 

>> Prompt: trouser.n woman-wearing dark man-wearing man-wears woman-wears
>> Response:  <u speaker=HUM>(trouser.n woman-wearing) 

>> Prompt: ear.n woman-has man-has
>> Response:  <u speaker=HUM>(headlight.n man-has man-has) 

>> Prompt: ear.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n ar-wearing) 

>> Prompt: ear.n woman-has man-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: ear.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n man-has) 

>> Prompt: hand.n woman-has man-has
>> Response:  <u speaker=HUM>(hair.n black man-has) 

>> Prompt: hand.n woman-has man-has
>> Response:  <u speaker=HUM>(hair.n black woman-wearing) 

>> Prompt: hand.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n ar-wearing man-wearing man-wearing) 

>> Prompt: hand.n woman-has man-has
>> Response:  <u speaker=HUM>(hair.n woman-has man-has man-wearing) 

>> Prompt: button.n white shirt-has
>> Response:  <u speaker=HUM>(seet.n woman-has) 

>> Prompt: button.n white shirt-has
>> Response:  woman-has) 

>> Prompt: button.n white shirt-has
>> Response:  <u speaker=HUM>(fullllat.n black woman-wearing) 

>> Prompt: button.n white shirt-has
>> Response:  shirt-has woman-has woman-has) 

>> Prompt: elbow.n bent
>> Response:  <u speaker=HUM>(cord.n dr-on) 

>> Prompt: elbow.n bent
>> Response:  <u speaker=HUM>(couch.n dr-with) 

>> Prompt: elbow.n bent
>> Response:  <u speaker=HUM>(page.n with-food) 

>> Prompt: elbow.n bent
>> Response:  <u speaker=HUM>(cord.n ) 

>> Prompt: collar.n dress-has shirt-has
>> Response:  <u speaker=HUM>(shirt.n brown woman-wearing) 

>> Prompt: collar.n dress-has shirt-has
>> Response:  <u speaker=HUM>(shirt.n brown woman-wearing woman-has man-wearing woman-wearing woman-wearing) 

>> Prompt: collar.n dress-has shirt-has
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: collar.n dress-has shirt-has
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: board.n white
>> Response:  <u speaker=HUM>(barg.n black) 

>> Prompt: board.n white
>> Response:  <u speaker=HUM>(chouck.n drick ) 

>> Prompt: board.n white
>> Response:  <u speaker=HUM>(chair.n tricke-has) 

>> Prompt: board.n white
>> Response:  <u speaker=HUM>(chouch.n drare-has) 

>> Prompt: bottle.n brown glass reddish
>> Response:  <u speaker=HUM>(couck.n midde-on chin|front-keyboard-in|of) 

>> Prompt: bottle.n brown glass reddish
>> Response:  <u speaker=HUM>(chin.n black muge-has) 

>> Prompt: bottle.n brown glass reddish
>> Response:  <u speaker=HUM>(muge.n with-food) 

>> Prompt: bottle.n brown glass reddish
>> Response:  <u speaker=HUM>(musk.n with-liquid) 

>> Prompt: chair.n black
>> Response:  <u speaker=HUM>(hair.n black with-food with-food with-food) 

>> Prompt: chair.n black
>> Response:  <u speaker=HUM>(hair.n tiled) 

>> Prompt: chair.n black
>> Response:  <u speaker=HUM>(hair.n tiled) 

>> Prompt: chair.n black
>> Response:  <u speaker=HUM>(hair.n girl-sitting|in|a) 

>> Prompt: nose.n woman-has man-has
>> Response:  <u speaker=HUM>(nose.n on|left man-wearing woman-wearing) 

>> Prompt: nose.n woman-has man-has
>> Response:  <u speaker=HUM>(nose.n animal-has) 

>> Prompt: nose.n woman-has man-has
>> Response:  <u speaker=HUM>(head.n has-head has-head eats-pasture has-head has-head has-ear has-head eating-pasture has-pasture has-ear has-head eats-pasture has-pasture has-head has-ear eats-pasture has 

>> Prompt: nose.n woman-has man-has
>> Response:  <u speaker=HUM>(nose.n animal-has) 

>> Prompt: couch.n black
>> Response:  <u speaker=HUM>(susarde.n ) 

>> Prompt: couch.n black
>> Response:  <u speaker=HUM>(coadr.n ) 

>> Prompt: couch.n black
>> Response:  <u speaker=HUM>(couch.n drar-has) 

>> Prompt: couch.n black
>> Response:  <u speaker=HUM>(sususage.n with-food with-food) 

>> Prompt: woman.n eating-ring wears-trouser in-shirt in-dress holding-ring wearing-shirt licking-thumb has-nose has-ear wearing-watch wears-dress wearing-dress light-behind wears-shirt wearing-glasses has-glasses has-hair eating has-accessory wearing-trouser wearing-spectacles lamp-behind has-hand has-watch has-spectacles wearing-accessory
>> Response:  <u speaker=HUM>(trouser.n man-wearing woman-wearing) 

>> Prompt: woman.n eating-ring wears-trouser in-shirt in-dress holding-ring wearing-shirt licking-thumb has-nose has-ear wearing-watch wears-dress wearing-dress light-behind wears-shirt wearing-glasses has-glasses has-hair eating has-accessory wearing-trouser wearing-spectacles lamp-behind has-hand has-watch has-spectacles wearing-accessory
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-has) 

>> Prompt: woman.n eating-ring wears-trouser in-shirt in-dress holding-ring wearing-shirt licking-thumb has-nose has-ear wearing-watch wears-dress wearing-dress light-behind wears-shirt wearing-glasses has-glasses has-hair eating has-accessory wearing-trouser wearing-spectacles lamp-behind has-hand has-watch has-spectacles wearing-accessory
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing) 

>> Prompt: woman.n eating-ring wears-trouser in-shirt in-dress holding-ring wearing-shirt licking-thumb has-nose has-ear wearing-watch wears-dress wearing-dress light-behind wears-shirt wearing-glasses has-glasses has-hair eating has-accessory wearing-trouser wearing-spectacles lamp-behind has-hand has-watch has-spectacles wearing-accessory
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-wearing) 

>> Prompt: face.n thumb-in
>> Response:  <u speaker=HUM>(light.n on) 

>> Prompt: face.n thumb-in
>> Response:  <u speaker=HUM>(light.n on in-lamp lamp-in light-in) 

>> Prompt: face.n thumb-in
>> Response:  <u speaker=HUM>(light.n raprococessing light has-lamp-in lamp-in lamp-in light-in) 

>> Prompt: face.n thumb-in
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: piece.n dress-has white shirt-has
>> Response:  <u speaker=HUM>(ring.n woman-has) 

>> Prompt: piece.n dress-has white shirt-has
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wears) 

>> Prompt: piece.n dress-has white shirt-has
>> Response:  <u speaker=HUM>(ring.n brown woman-wearing) 

>> Prompt: piece.n dress-has white shirt-has
>> Response:  <u speaker=HUM>(ring.n woman-wearing) 

>> Prompt: glasses.n woman-has woman-wearing dark brown a|pair
>> Response:  <u speaker=HUM>(trouser.n brown woman-has woman-wearing) 

>> Prompt: glasses.n woman-has woman-wearing dark brown a|pair
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: glasses.n woman-has woman-wearing dark brown a|pair
>> Response:  <u speaker=HUM>(ring.n brown woman-wearing man-wearing man-wearing man-wearing) 

>> Prompt: glasses.n woman-has woman-wearing dark brown a|pair
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: lamp.n behind-woman
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: lamp.n behind-woman
>> Response:  <u speaker=HUM>(lamp.n in|bardr-bedroom) 

>> Prompt: lamp.n behind-woman
>> Response:  <u speaker=HUM>(lamp.n in-lamp lamp-in lamp-in) 

>> Prompt: lamp.n behind-woman
>> Response:  <u speaker=HUM>(light.n on in-lamp) 

>> Prompt: dress.n woman-wearing blue baby|blue lamp|blue has-piece woman-wears short|sleeved has-collar woman-in
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: dress.n woman-wearing blue baby|blue lamp|blue has-piece woman-wears short|sleeved has-collar woman-in
>> Response:  <u speaker=HUM>(woman.n woman-has woman-has woman-wearing) 

>> Prompt: dress.n woman-wearing blue baby|blue lamp|blue has-piece woman-wears short|sleeved has-collar woman-in
>> Response:  <u speaker=HUM>(woman.n brown woman-has) 

>> Prompt: dress.n woman-wearing blue baby|blue lamp|blue has-piece woman-wears short|sleeved has-collar woman-in
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: accessory.n woman-has woman-wearing black multicolored red
>> Response:  <u speaker=HUM>(thumb.n woman-wearing) 

>> Prompt: accessory.n woman-has woman-wearing black multicolored red
>> Response:  <u speaker=HUM>(shirt.n brown woman-has) 

>> Prompt: accessory.n woman-has woman-wearing black multicolored red
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: accessory.n woman-has woman-wearing black multicolored red
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n has-ear has-ear has-topographic_point has-topographic_point topographic_point has-topographic_point has-topographic_point topographic_point-on topographic_ 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on-animal) 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n has-head has-horn has-head has-horn has-head has-horn has-horn has-head has-horn has-horn has-head has-head eats-pasture has-head eats-pasture eats-pasture enjoying 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n animal-has animal-has animal-has animal-has animal-has) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n in-tree behind-animal has-animal has-plant has-plant has-plant plant-plant has-plant has-plant has-plant has-plant has-plant has-branch has-branch has-branch has-branch has-branch 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n on-plant plant-in) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has animal-has animal-has animal-has) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(pasture.n feeding in-park has-head has-head has-head has-ear eats-pasture has-ear has-head enjoying-pasture has-pasture eats-pasture has-pasture has-ear has-ear eating- 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(pasture.n animal-has animal-has) 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(ear.n on-body) 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(ear.n on-animal animal-has) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(animal.n animal-has) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(pasture.n animal-has animal-has) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(pasture.n has-ear animal-in animal-in) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(pasture.n fasian fan fed has-head has-ear animal-in animal-in plant-in) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(eye.n animal-has) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has animal-has animal-has animal-has) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(eye.n animal-has) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has animal-has animal-has) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(horn.n giraffe-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has animal-in animal-has animal-has animal-has animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(animal.n animal-has animal-has animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n has-horn has-horn has-horn has-horn animal-has animal-has animal-has) 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-topographic_point topographic_point-on topographic_point-on topographic_point-on topographic_point-on topographic_point-on top 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on|topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(plant.n on-tree behind-animal) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-braid braid-behind) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(top.n animal-in) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(top.n animal-has animal-has animal-has) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n on-neck on-neck) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n on-neck on-neck) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n in-park has-head behind-man) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n in-park has-ear behind-animal) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n in-tree behind-woman on|me woman-wearing) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n in-park behind-animal has-animal has-head eats-ear has-head has-ear has-ear has-ear has-ear has-topographic_point has-topographic_point has-topographic_point 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(branch.n tree-has tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-tree tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-tree tree-has) 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(ear.n on|left ft ft feding in-park has-park has-head eats-pasture eats-pasture eating-pasture eats-pasture has-pasture eating-pasture eats-pasture has- 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n has-headlight) 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has animal-has animal-has) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-neck on-neck on-neck on|topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(neck.n animal-has animal-has) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(neck.n animal-has) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=BOT>(topographic_point.n on-neck) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(neck.n girl-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n has-head has-head has-horn has-head has-head eating-pasture eating-pasture has-pasture eating-pasture has-pasture has-pasture has-pasture eats-pasture has-ear eating-pasture eats- 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on|left animal-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on|left feed animal-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n animal-has animal-has) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has plant-has) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n in|front-park behind-animal) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(branch.n plant-has) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(plant.n in-tree behind-woman) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(plant.n on-plant) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(branch.n plant-has) 

>> Prompt: plate.n white cheese-on|a cracker-on chopstick-in|middle|of with-food table-with
>> Response:  <u speaker=HUM>(dish.n with-food with-cheese) 

>> Prompt: plate.n white cheese-on|a cracker-on chopstick-in|middle|of with-food table-with
>> Response:  <u speaker-with)</u speaker=HUM>(food.n ) 

>> Prompt: plate.n white cheese-on|a cracker-on chopstick-in|middle|of with-food table-with
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: plate.n white cheese-on|a cracker-on chopstick-in|middle|of with-food table-with
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: bit.n container-of bowl-of
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: bit.n container-of bowl-of
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: bit.n container-of bowl-of
>> Response:  <u speaker=HUM>(container.n with-food with-food) 

>> Prompt: bit.n container-of bowl-of
>> Response:  <u speaker=HUM>(container.n with-food dish-with) 

>> Prompt: bowl.n colorful black filled|with-drop striped of-bit wire of-drop
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: bowl.n colorful black filled|with-drop striped of-bit wire of-drop
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: bowl.n colorful black filled|with-drop striped of-bit wire of-drop
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: bowl.n colorful black filled|with-drop striped of-bit wire of-drop
>> Response:  <u speaker=HUM>(bowl.n filled bowl-with) 

>> Prompt: sauce.n food-next|to red
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: sauce.n food-next|to red
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: sauce.n food-next|to red
>> Response:  <u speaker=HUM>(dish.n dish-on) 

>> Prompt: sauce.n food-next|to red
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: food.n white cubed on|a-dish platter-full|of plate-with next|to-sauce dish-with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: food.n white cubed on|a-dish platter-full|of plate-with next|to-sauce dish-with
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: food.n white cubed on|a-dish platter-full|of plate-with next|to-sauce dish-with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: food.n white cubed on|a-dish platter-full|of plate-with next|to-sauce dish-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: vegetable.n platter-full|of tray-full|of
>> Response:  <u speaker=HUM>(platter.n of-of) 

>> Prompt: vegetable.n platter-full|of tray-full|of
>> Response:  <u speaker=HUM>(bowl.n fillled|a-desk) 

>> Prompt: vegetable.n platter-full|of tray-full|of
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: vegetable.n platter-full|of tray-full|of
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: tray.n full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: tray.n full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: tray.n full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: tray.n full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: chopstick.n in|middle|of-dish in|middle|of-plate
>> Response:  <u speaker=HUM>(plate.n with-cheese) 

>> Prompt: chopstick.n in|middle|of-dish in|middle|of-plate
>> Response:  <u speaker=HUM>(dish.n dish-under) 

>> Prompt: chopstick.n in|middle|of-dish in|middle|of-plate
>> Response:  <u speaker=HUM>(dish.n dish-under) 

>> Prompt: chopstick.n in|middle|of-dish in|middle|of-plate
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: table.n with-plate with-dish
>> Response:  <u speaker=HUM>(food.n with-cheese) 

>> Prompt: table.n with-plate with-dish
>> Response:  <u speaker=HUM>(food.n with-food dish-with) 

>> Prompt: table.n with-plate with-dish
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: table.n with-plate with-dish
>> Response:  <u speaker=HUM>(food.n with-food) 

>> Prompt: cracker.n on-plate platter-of tray-of on-dish
>> Response:  <u speaker-of) 

>> Prompt: cracker.n on-plate platter-of tray-of on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: cracker.n on-plate platter-of tray-of on-dish
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cracker.n on-plate platter-of tray-of on-dish
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: basket.n with-napkin napkin-in with-handle light|tan light|brown
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: basket.n with-napkin napkin-in with-handle light|tan light|brown
>> Response:  <u speaker=HUM>(light.n light-in) 

>> Prompt: basket.n with-napkin napkin-in with-handle light|tan light|brown
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: basket.n with-napkin napkin-in with-handle light|tan light|brown
>> Response:  <u speaker=HUM>(dish.n with-food with-food with-food) 

>> Prompt: napkin.n white basket-with container-with in-basket in-container
>> Response:  <u speaker=HUM>(container.n with-food dish-under) 

>> Prompt: napkin.n white basket-with container-with in-basket in-container
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: napkin.n white basket-with container-with in-basket in-container
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: napkin.n white basket-with container-with in-basket in-container
>> Response:  <u speaker=HUM>(container.n white) 

>> Prompt: cheese.n white cubed on|a-plate on|a-dish
>> Response:  <u speaker=HUM>(plate.n with-food with-cheese) 

>> Prompt: cheese.n white cubed on|a-plate on|a-dish
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: cheese.n white cubed on|a-plate on|a-dish
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: cheese.n white cubed on|a-plate on|a-dish
>> Response:  <u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: drop.n bowl-filled|with container-of bowl-of container-filled|with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: drop.n bowl-filled|with container-of bowl-of container-filled|with
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: drop.n bowl-filled|with container-of bowl-of container-filled|with
>> Response:  <u speaker=HUM>(container.n with-food with-food) 

>> Prompt: drop.n bowl-filled|with container-of bowl-of container-filled|with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: bread.n flat
>> Response:  <u speaker=HUM>(ceat.n black murtuge.n ) 

>> Prompt: bread.n flat
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: bread.n flat
>> Response:  <u speaker=HUM>(cellllacel.n black) 

>> Prompt: bread.n flat
>> Response:  <u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: fabric.n red
>> Response:  <u speaker=HUM>(seet.n wn on-dish) 

>> Prompt: fabric.n red
>> Response:  <u speaker=HUM>(wateel.n black wure black with-cheese) 

>> Prompt: fabric.n red
>> Response:  <u speaker=HUM>(sususk.n ) 

>> Prompt: fabric.n red
>> Response:  <u speaker=HUM>(seade.n ) 

>> Prompt: pile.n 
>> Response:  <u speaker=HUM>(page.n ) 

>> Prompt: pile.n 
>> Response:  <u speaker=HUM>(potograph.n on-wall) 

>> Prompt: pile.n 
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: pile.n 
>> Response:  <u speaker=HUM>(wall.n postograph-on ptop-on) 

>> Prompt: rug.n 
>> Response:  <u speaker=HUM>(shoun.n ) 

>> Prompt: rug.n 
>> Response:  <u speaker=HUM>(floor.n potograph-on laptop-on) 

>> Prompt: rug.n 
>> Response:  <u speaker=HUM>(shi.n ) 

>> Prompt: rug.n 
>> Response:  <u speaker=HUM>(shouse.n ) 

>> Prompt: sushi.n platter-of tray-of
>> Response:  <u speaker=HUM>(platter.n of-of) 

>> Prompt: sushi.n platter-of tray-of
>> Response:  <u speaker=HUM>(platter.n fur|ofi) 

>> Prompt: sushi.n platter-of tray-of
>> Response:  <u speaker=HUM>(platter.n fur|offillllllllllled|of-dish) 

>> Prompt: sushi.n platter-of tray-of
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: handle.n basket-with container-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: handle.n basket-with container-with
>> Response:  card.n )</scre|has </script.1> <script.8 pe=CONV> <u speaker=HUM>(furnilled woman-has) 

>> Prompt: handle.n basket-with container-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: handle.n basket-with container-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: dish.n white cheese-on|a chopstick-in|middle|of cracker-on with-food food-on|a table-with object-in|middle|of
>> Response:  <u speaker=HUM>(food.n charen black) 

>> Prompt: dish.n white cheese-on|a chopstick-in|middle|of cracker-on with-food food-on|a table-with object-in|middle|of
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: dish.n white cheese-on|a chopstick-in|middle|of cracker-on with-food food-on|a table-with object-in|middle|of
>> Response:  <u speaker=HUM>(food.n caraiged) 

>> Prompt: dish.n white cheese-on|a chopstick-in|middle|of cracker-on with-food food-on|a table-with object-in|middle|of
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: container.n with-napkin colorful black filled|with-drop napkin-in striped with-handle light|tan of-bit wire light|brown of-drop
>> Response:  <u speaker=HUM>(bowl.n of-filed|of) 

>> Prompt: container.n with-napkin colorful black filled|with-drop napkin-in striped with-handle light|tan of-bit wire light|brown of-drop
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: container.n with-napkin colorful black filled|with-drop napkin-in striped with-handle light|tan of-bit wire light|brown of-drop
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: container.n with-napkin colorful black filled|with-drop napkin-in striped with-handle light|tan of-bit wire light|brown of-drop
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: platter.n full|of-food full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: platter.n full|of-food full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: platter.n full|of-food full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: platter.n full|of-food full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: object.n in|middle|of-dish
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: object.n in|middle|of-dish
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: object.n in|middle|of-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: object.n in|middle|of-dish
>> Response:  <u speaker=HUM>(ceat.n with-liquid) 

>> Prompt: elephant.n trunk-of gray in-braid has-eye braid-next|to braid-behind baby in-center and-elephant elephant-and in|front-adult adult small has-tail big young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(elephant.n adult has-adult has-tail) 

>> Prompt: elephant.n trunk-of gray in-braid has-eye braid-next|to braid-behind baby in-center and-elephant elephant-and in|front-adult adult small has-tail big young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(trunk.n elephant-has) 

>> Prompt: elephant.n trunk-of gray in-braid has-eye braid-next|to braid-behind baby in-center and-elephant elephant-and in|front-adult adult small has-tail big young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(trunk.n tree-has) 

>> Prompt: elephant.n trunk-of gray in-braid has-eye braid-next|to braid-behind baby in-center and-elephant elephant-and in|front-adult adult small has-tail big young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: trunk.n white long animal-has elephant-has of-animal of-elephant
>> Response:  <u speaker=HUM>(elephant.n adult has-tail) 

>> Prompt: trunk.n white long animal-has elephant-has of-animal of-elephant
>> Response:  <u speaker=HUM>(elephant.n adult has-adult has-tail) 

>> Prompt: trunk.n white long animal-has elephant-has of-animal of-elephant
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: trunk.n white long animal-has elephant-has of-animal of-elephant
>> Response:  <u speaker=HUM>(elephant.n adult) 

>> Prompt: grass.n brown tall yellow
>> Response:  <u speaker=HUM>(ear.n on|lefde|left ft parked animal-has) 

>> Prompt: grass.n brown tall yellow
>> Response:  <u speaker=HUM>(chourdrdr.n ) 

>> Prompt: grass.n brown tall yellow
>> Response:  <u speaker=HUM>(susun.n red man-has) 

>> Prompt: grass.n brown tall yellow
>> Response:  <u speaker=HUM>(susun.n mage-has) 

>> Prompt: ear.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-in) 

>> Prompt: ear.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n adult) 

>> Prompt: ear.n animal-has elephant-has
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: ear.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tree.n has-branch
>> Response:  tree-has) 

>> Prompt: tree.n has-branch
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-branch
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: tree.n has-branch
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(branch.n plant-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: center.n animal-in elephant-in
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: center.n animal-in elephant-in
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: center.n animal-in elephant-in
>> Response:  <u speaker=HUM>(animal.n feed feed ffeedededing in-park has-head eats-pasture eats-pasture has-pasture has-ear has-ear has-ear animal-has animal-has animal- 

>> Prompt: center.n animal-in elephant-in
>> Response:  <u speaker=HUM>(animal.n rain) 

>> Prompt: braid.n animal-in next|to-elephant behind-elephant behind-animal plant-on elephant-in dense next|to-animal green leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-braid) 

>> Prompt: braid.n animal-in next|to-elephant behind-elephant behind-animal plant-on elephant-in dense next|to-animal green leaf-on
>> Response:  <u speaker=HUM>(tree.n in-tree tree-has) 

>> Prompt: braid.n animal-in next|to-elephant behind-elephant behind-animal plant-on elephant-in dense next|to-animal green leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: braid.n animal-in next|to-elephant behind-elephant behind-animal plant-on elephant-in dense next|to-animal green leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree behind-animal tree-behind) 

>> Prompt: leaf.n small on-braid
>> Response:  <u speaker=HUM>(tree.n in-tree tree-has) 

>> Prompt: leaf.n small on-braid
>> Response:  <u speaker=HUM>(tree.n tree-has tree-has) 

>> Prompt: leaf.n small on-braid
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: leaf.n small on-braid
>> Response:  <u speaker=HUM>(braid.n elephant-has) 

>> Prompt: eye.n animal-has elephant-has
>> Response:  <u speaker=HUM>(elephant.n spottttted adult has-adult has-body has-body has-body has-body has-topographic_point has-topographic_point animal-in animal-has) 

>> Prompt: eye.n animal-has elephant-has
>> Response:  <u speaker=HUM>(elephant.n adult has-tail) 

>> Prompt: eye.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: eye.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tail.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tail.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tail.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tail.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has animal-has animal-has animal-has) 

>> Prompt: back.n elephant-seen animal-seen
>> Response:  <u speaker=HUM>(tree.n behind-animal) 

>> Prompt: back.n elephant-seen animal-seen
>> Response:  <u speaker=HUM>(tree.n in-tree tree-has) 

>> Prompt: back.n elephant-seen animal-seen
>> Response:  <u speaker=HUM>(tree.n behind-animal) 

>> Prompt: back.n elephant-seen animal-seen
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: adult.n animal-in|front elephant-in|front
>> Response:  <u speaker=HUM>(adult.n adult) 

>> Prompt: adult.n animal-in|front elephant-in|front
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: adult.n animal-in|front elephant-in|front
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: adult.n animal-in|front elephant-in|front
>> Response:  <u speaker=HUM>(elephant.n elephant-in) 

>> Prompt: plant.n yellow has-branch small brown tall on-braid
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked|on bicycle-parked parked|on-parked|on parked|on-sidewalk) 

>> Prompt: plant.n yellow has-branch small brown tall on-braid
>> Response:  <u speaker=HUM>(ear.n elephant-has elephant-has) 

>> Prompt: plant.n yellow has-branch small brown tall on-braid
>> Response:  <u speaker=HUM>(ear.n tree-has) 

>> Prompt: plant.n yellow has-branch small brown tall on-braid
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: animal.n animal-and trunk-of gray in-braid has-eye has-limb braid-next|to braid-behind baby in-center and-animal body-of in|front-adult adult seen-body small has-tail big has-body young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: animal.n animal-and trunk-of gray in-braid has-eye has-limb braid-next|to braid-behind baby in-center and-animal body-of in|front-adult adult seen-body small has-tail big has-body young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(trunk.n on-sidewalk) 

>> Prompt: animal.n animal-and trunk-of gray in-braid has-eye has-limb braid-next|to braid-behind baby in-center and-animal body-of in|front-adult adult seen-body small has-tail big has-body young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(trunk.n elephant-has) 

>> Prompt: animal.n animal-and trunk-of gray in-braid has-eye has-limb braid-next|to braid-behind baby in-center and-animal body-of in|front-adult adult seen-body small has-tail big has-body young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(elephant.n adult) 

>> Prompt: body.n white long animal-has animal-seen of-animal
>> Response:  <u speaker=HUM>(animal.n adult has-tail) 

>> Prompt: body.n white long animal-has animal-seen of-animal
>> Response:  <u speaker=HUM>(animal.n on|left animal-has animal-has) 

>> Prompt: body.n white long animal-has animal-seen of-animal
>> Response:  <u speaker=HUM>(animal.n adult has-body has-tail) 

>> Prompt: body.n white long animal-has animal-seen of-animal
>> Response:  <u speaker=HUM>(animal.n animal-has animal-has) 

>> Prompt: limb.n animal-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: limb.n animal-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: limb.n animal-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: limb.n animal-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: suit.n man-wearing person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: suit.n man-wearing person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n brown woman-has) 

>> Prompt: suit.n man-wearing person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: suit.n man-wearing person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n woman-wearing woman-wearing) 

>> Prompt: man.n smiling has-eye sitting wearing-shirt has-hair has-nose wearing-necktie wearing-suit in|front|of-building
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: man.n smiling has-eye sitting wearing-shirt has-hair has-nose wearing-necktie wearing-suit in|front|of-building
>> Response:  <u speaker=HUM>(trouser.n brown woman-wearing) 

>> Prompt: man.n smiling has-eye sitting wearing-shirt has-hair has-nose wearing-necktie wearing-suit in|front|of-building
>> Response:  <u speaker=HUM>(trouser.n man-has man-has) 

>> Prompt: man.n smiling has-eye sitting wearing-shirt has-hair has-nose wearing-necktie wearing-suit in|front|of-building
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: necktie.n purple person-wearing man-wearing cartridge_holder-over cartridge_holder-on maroon
>> Response:  <u speaker=HUM>(bard.n drick with-food) 

>> Prompt: necktie.n purple person-wearing man-wearing cartridge_holder-over cartridge_holder-on maroon
>> Response:  <u speaker=HUM>(bag.n black on-wall) 

>> Prompt: necktie.n purple person-wearing man-wearing cartridge_holder-over cartridge_holder-on maroon
>> Response:  <u speaker=HUM>(bardrick.n ) 

>> Prompt: necktie.n purple person-wearing man-wearing cartridge_holder-over cartridge_holder-on maroon
>> Response:  <u speaker=HUM>(bard.n black on-wall) 

>> Prompt: woman.n wearing-sweater smiling has|a-hand has-hair tree-behind wearing-jewelry wearing-suit has-head has-hand wearing-earring
>> Response:  <u speaker=HUM>(hair.n woman-has man-wearing woman-wearing woman-wears woman-wearing) 

>> Prompt: woman.n wearing-sweater smiling has|a-hand has-hair tree-behind wearing-jewelry wearing-suit has-head has-hand wearing-earring
>> Response:  <u speaker=HUM>(hair.n woman-has) 

>> Prompt: woman.n wearing-sweater smiling has|a-hand has-hair tree-behind wearing-jewelry wearing-suit has-head has-hand wearing-earring
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing) 

>> Prompt: woman.n wearing-sweater smiling has|a-hand has-hair tree-behind wearing-jewelry wearing-suit has-head has-hand wearing-earring
>> Response:  <u speaker=HUM>(hair.n black sharturoat-has man-wearing man-wearing) 

>> Prompt: shirt.n white person-wearing man-wearing
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n white person-wearing man-wearing
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: shirt.n white person-wearing man-wearing
>> Response:  <u speaker=HUM>(shirt.n brown woman-wearing) 

>> Prompt: shirt.n white person-wearing man-wearing
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: nose.n big man-has person-has
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing woman-wearing) 

>> Prompt: nose.n big man-has person-has
>> Response:  <u speaker=HUM>(woman.n tan) 

>> Prompt: nose.n big man-has person-has
>> Response:  <u speaker=HUM>(woman.n woman-has woman-wearing) 

>> Prompt: nose.n big man-has person-has
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing man-wears) 

>> Prompt: table.n small hand-on brown wooden round worn
>> Response:  <u speaker=HUM>(hair.n drawn chol_proch with-lin with-food) 

>> Prompt: table.n small hand-on brown wooden round worn
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: table.n small hand-on brown wooden round worn
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: table.n small hand-on brown wooden round worn
>> Response:  <u speaker=HUM>(hair.n drick tan) 

>> Prompt: eye.n man-has person-has
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing man-wears woman-wearing) 

>> Prompt: eye.n man-has person-has
>> Response:  <u speaker=HUM>(man.n man-has) 

>> Prompt: eye.n man-has person-has
>> Response:  <u speaker=HUM>(woman.n woman-has) 

>> Prompt: eye.n man-has person-has
>> Response:  <u speaker=HUM>(man.n man-wearing man-has) 

>> Prompt: earring.n stone black in-ear woman-wearing
>> Response:  <u speaker=HUM>(man.n asian ) 

>> Prompt: earring.n stone black in-ear woman-wearing
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: earring.n stone black in-ear woman-wearing
>> Response:  <u speaker=HUM>(man.n ar-wearing) 

>> Prompt: earring.n stone black in-ear woman-wearing
>> Response:  <u speaker=HUM>(shirt.n woman-wearing) 

>> Prompt: ear.n earring-in jewelry-in
>> Response:  <u speaker=HUM>(woman.n tan) 

>> Prompt: ear.n earring-in jewelry-in
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: ear.n earring-in jewelry-in
>> Response:  <u speaker=HUM>(woman.n woman-has) 

>> Prompt: ear.n earring-in jewelry-in
>> Response:  <u speaker=HUM>(woman.n tan) 

>> Prompt: cartridge_holder.n on-necktie silver over-necktie metal
>> Response:  <u speaker=HUM>(hair.n tan with-window baby-on) 

>> Prompt: cartridge_holder.n on-necktie silver over-necktie metal
>> Response:  <u speaker=HUM>(hair.n tan maged|of-street) 

>> Prompt: cartridge_holder.n on-necktie silver over-necktie metal
>> Response:  <u speaker=HUM>(desk.n brtied with-liquid) 

>> Prompt: cartridge_holder.n on-necktie silver over-necktie metal
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: belt.n black under-cringle
>> Response:  <u speaker=HUM>(hair.n drar-has woman-wearing) 

>> Prompt: belt.n black under-cringle
>> Response:  <u speaker=HUM>(hair.n black with-window) 

>> Prompt: belt.n black under-cringle
>> Response:  <u speaker=HUM>(hair.n woman-has) 

>> Prompt: belt.n black under-cringle
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: hand.n on-hand woman-has on-table on-shoulder hand-on|top|of hand-on on|top|of-hand woman-has|a
>> Response:  <u speaker=HUM>(hand.n on|a-desk) 

>> Prompt: hand.n on-hand woman-has on-table on-shoulder hand-on|top|of hand-on on|top|of-hand woman-has|a
>> Response:  <u speaker=HUM>(hand.n man-wearing) 

>> Prompt: hand.n on-hand woman-has on-table on-shoulder hand-on|top|of hand-on on|top|of-hand woman-has|a
>> Response:  <u speaker=HUM>(hair.n woman-wearing) 

>> Prompt: hand.n on-hand woman-has on-table on-shoulder hand-on|top|of hand-on on|top|of-hand woman-has|a
>> Response:  <u speaker=HUM>(hair.n woman-has man-wearing) 

>> Prompt: hair.n woman-has black pulled|back man-has person-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: hair.n woman-has black pulled|back man-has person-has
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: hair.n woman-has black pulled|back man-has person-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-has man-wearing) 

>> Prompt: hair.n woman-has black pulled|back man-has person-has
>> Response:  woman-has) 

>> Prompt: button.n 
>> Response:  <u speaker=BOT>(s.n woman-wearing) 

>> Prompt: button.n 
>> Response:  <u speaker=HUM>(s.n man-has man-wearing woman-wearing) 

>> Prompt: button.n 
>> Response:  <u speaker=HUM>(furnit.n man-wearing) 

>> Prompt: button.n 
>> Response:  <u speaker=HUM>(fare.n man-has) 

>> Prompt: tree.n has-leaf behind-woman has-trunk
>> Response:  <u speaker=HUM>(leaf.n on-braid) 

>> Prompt: tree.n has-leaf behind-woman has-trunk
>> Response:  <u speaker=HUM>(leaf.n behind-animal) 

>> Prompt: tree.n has-leaf behind-woman has-trunk
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-leaf behind-woman has-trunk
>> Response:  <u speaker=HUM>(tree.n in-tree behind-animal) 

>> Prompt: leaf.n tree-has
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: leaf.n tree-has
>> Response:  <u speaker=HUM>(tree.n in-park behind-man) 

>> Prompt: leaf.n tree-has
>> Response:  <u speaker=HUM>(leaf.n tree-has) 

>> Prompt: leaf.n tree-has
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: trunk.n tree-has
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: trunk.n tree-has
>> Response:  <u speaker=HUM>(elephant.n adult has-tail) 

>> Prompt: trunk.n tree-has
>> Response:  <u speaker=HUM>(tree.n in-park behind-animal) 

>> Prompt: trunk.n tree-has
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: cringle.n accessory-under belt-under
>> Response:  <u speaker=HUM>(couch.n ddr-with) 

>> Prompt: cringle.n accessory-under belt-under
>> Response:  <u speaker=HUM>(couck.n mage-with) 

>> Prompt: cringle.n accessory-under belt-under
>> Response:  <u speaker=HUM>(glass.n ) 

>> Prompt: cringle.n accessory-under belt-under
>> Response:  <u speaker=HUM>(couck.n dr-with) 

>> Prompt: shoulder.n hand-on
>> Response:  <u speaker=HUM>(hair.n girl-has) 

>> Prompt: shoulder.n hand-on
>> Response:  <u speaker=HUM>(hand.n man-has) 

>> Prompt: shoulder.n hand-on
>> Response:  <u speaker=HUM>(hand.n on-desk) 

>> Prompt: shoulder.n hand-on
>> Response:  <u speaker-on) 

>> Prompt: building.n white man-in|front|of person-in|front|of
>> Response:  <u speaker=HUM>(man.n asian working sitting|a-desk wearing-trouser sitting|at|a-desk) 

>> Prompt: building.n white man-in|front|of person-in|front|of
>> Response:  <u speaker=HUM>(man.n ar|aide|on) 

>> Prompt: building.n white man-in|front|of person-in|front|of
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: building.n white man-in|front|of person-in|front|of
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: person.n wearing-sweater has-face smiling has-eye sitting wearing-shirt has-hair in|front|of-house has-nose wearing-necktie wearing-suit has-head in|front|of-building
>> Response:  <u speaker=HUM>(hair.n woman-wearing) 

>> Prompt: person.n wearing-sweater has-face smiling has-eye sitting wearing-shirt has-hair in|front|of-house has-nose wearing-necktie wearing-suit has-head in|front|of-building
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: person.n wearing-sweater has-face smiling has-eye sitting wearing-shirt has-hair in|front|of-house has-nose wearing-necktie wearing-suit has-head in|front|of-building
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: person.n wearing-sweater has-face smiling has-eye sitting wearing-shirt has-hair in|front|of-house has-nose wearing-necktie wearing-suit has-head in|front|of-building
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: sweater.n person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(woman.n wearing-shirt) 

>> Prompt: sweater.n person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n woman-wearing woman-wearing) 

>> Prompt: sweater.n person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: accessory.n black under-cringle
>> Response:  <u speaker=HUM>(s.n woman-has) 

>> Prompt: accessory.n black under-cringle
>> Response:  <u speaker=HUM>(s.n woman-wearing man-wearing man-wearing man-wearing man-wearing) 

>> Prompt: accessory.n black under-cringle
>> Response:  <u speaker=HUM>(see.n woman-wearing) 

>> Prompt: accessory.n black under-cringle
>> Response:  <u speaker=HUM>(shirt.n brown woman-wearing woman-has) 

>> Prompt: face.n person-has
>> Response:  <u speaker=HUM>(woman.n woman-has) 

>> Prompt: face.n person-has
>> Response:  <u speaker=HUM>(man.n woman-wearing man-wearing) 

>> Prompt: face.n person-has
>> Response:  <u speaker=HUM>(woman.n tan) 

>> Prompt: face.n person-has
>> Response:  <u speaker=HUM>(man.n woman-wearing woman-has) 

>> Prompt: house.n white person-in|front|of
>> Response:  <u speaker=HUM>(woman.n brown woman-wearing woman-wearing woman-wearing woman-wears) 

>> Prompt: house.n white person-in|front|of
>> Response:  <u speaker=HUM>(man.n man-has man-has man-wearing) 

>> Prompt: house.n white person-in|front|of
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: house.n white person-in|front|of
>> Response:  <u speaker=HUM>(man.n asian working sitting|a-desk) 

>> Prompt: head.n woman-has pulled|back black person-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: head.n woman-has pulled|back black person-has
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: head.n woman-has pulled|back black person-has
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: head.n woman-has pulled|back black person-has
>> Response:  <u speaker=HUM>(trouser.n man-has woman-has) 

>> Prompt: jewelry.n stone woman-wearing black in-ear
>> Response:  <u speaker=HUM>(shirt.n woman-has man-wearing) 

>> Prompt: jewelry.n stone woman-wearing black in-ear
>> Response:  <u speaker=HUM>(ear.n raised woman-has) 

>> Prompt: jewelry.n stone woman-wearing black in-ear
>> Response:  <u speaker=HUM>(ear.n animal-has) 

>> Prompt: jewelry.n stone woman-wearing black in-ear
>> Response:  <u speaker=HUM>(ear.n on-animal) 
>> Loaded models dict_keys(['chat'])


>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(colar.n cessing) 

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(cordr.n drawn on-dish) 

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(desk.n colare with-lin  

>> Prompt: clock.n tall green
>> Response:  <u speaker=HUM>(chollar.n black) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(bicycle.n parked far|ay parked|on-street) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(bicycle.n near-parked|on parked|a-parked|ay parked|ay bicycle-parked|on far|ay parked|on-parked|ay parked 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(parking_point.n animal-has animal-has) 

>> Prompt: street.n plant-next|to car-parked|on parking_meter-on|top|of sidewalk shade-on clean sidewalk-next|to vehicle-parked|on tree-next|to
>> Response:  <u speaker=HUM>(park.n parked|on-street) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(street.n bicycle-parked|on parked bicycle-ns parked parked|on-parked parked|a-sidewalk) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked parked behind-man-has man-wearing) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind bicycle-park has-behind) 

>> Prompt: shade.n on-street
>> Response:  <u speaker=HUM>(street.n bicycle-near parked bicycle-near parking_meter-park has-behind bicycle-behind) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n brown wearing-shirt wearing-shirt) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n brown woman-wearing woman-wearing woman-wearing woman-wearing) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing woman-wearing woman-wearing woman-wearing) 

>> Prompt: man.n wears-trouser has-trouser has-shirt in-shirt wearing-shoe wearing-shirt has-raincoat wearing-jacket in-sweater has-jacket wears-gym_shoe holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser shirt-on wearing-spectacles sweater-on has-sweater wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n brown man-has man-has) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n woman-wearing man-wearing woman-wearing woman-wears woman-wearing woman-wearing man-wears) 

>> Prompt: gym_shoe.n man-wears woman-wears grey
>> Response:  <u speaker=HUM>(man.n woman-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n black animal-has animal-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n parked|on-sidewalk) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n man-has) 

>> Prompt: headlight.n vehicle-has car-has off
>> Response:  <u speaker=HUM>(park.n parked behind-animal) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n brown) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has man-has) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(back.n parked|on-sidewalk) 

>> Prompt: car.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker-on bicycle-near near-near) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(street.n brown bicycle-parked|on parked|on-parked parked|on parked|on-street) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n near-parked parked|on bicycle-parked parked parked|on-parked|on bicycle-parked far|on parked parked|on-sidewalk)</u 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n parked|on-sidewalk) 

>> Prompt: bicycle.n behind-woman on-sidewalk behind-man far|away near-tree chained parked near-plant parked|on-sidewalk
>> Response:  <u speaker=HUM>(bicycle.n near-parked far|ar|away parked|on-sidewalk) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(wall.n green paddde-on) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n black murtuge-has) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: sign.n on-building on-house black
>> Response:  <u speaker=HUM>(hair.n black tanding blver-has) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n wateee with-food) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n drar-has) 

>> Prompt: building.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n black with-window) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind behind-behind) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(trunk.n on-street) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(trunk.n elephant-has) 

>> Prompt: trunk.n on-sidewalk
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked|on parking_meter-behind) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(bicycle.n parked parked|on-parked|a-parked parked|on parked|on-street) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(park.n tree-has parked|on parked|on-sidewalk) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(park.n parked|on-street) 

>> Prompt: sidewalk.n bicycle-parked|on next|to-street brick tree-by plant-by bicycle-on parking_meter-on trunk-on
>> Response:  <u speaker=HUM>(bicycle.n near-tree parked|on parked|a-parked parked|on-sidewalk) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-has woman-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: shirt.n orange man-wearing on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wearing man-wearing) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(park.n parked|a-sidewalk) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n ndrn near-tree behind-tree behind-animal) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n parked far|ay parked far|ar|ay parked|on-street) 

>> Prompt: back.n vehicle-has car-has
>> Response:  <u speaker=HUM>(bicycle.n ndrn parked|on parked parked|on-street) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|at|a-desk working sitting|at|a-desk wearing-desk at|at|a-desk wearing-desk) 

>> Prompt: spectacles.n woman-has man-wearing woman-wearing man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-has) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: parking_meter.n behind-woman on-sidewalk orange behind-man on|top|of-street
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-has) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(trouser.n brown woman-wearing man-wearing) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|a-desk) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: shoe.n woman-has woman-wearing man-wearing brown man-has
>> Response:  <u speaker-wearing woman-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing man-has man-wearing man-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-has man-wearing man-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(man.n ar-wearing) 

>> Prompt: trouser.n woman-has gray black woman-wearing man-wearing man-wears woman-wears man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-has man-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n woman-wearing) 

>> Prompt: jacket.n man-wearing grey gray man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing man-has man-wearing) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker=HUM>(chin.n drarawn on) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker-chin) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker=HUM>(choat.n man-wearing) 

>> Prompt: chin.n woman-holding raised man-holding guy-holding
>> Response:  <u speaker-chin) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(calar.n rawn wareeeelllll_prococess with-window bag-on) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(g.n raware wndre) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(g.n holding-carain) 

>> Prompt: guy.n holding-chin
>> Response:  <u speaker=HUM>(choard.n raware ) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parking_meter-behind behind-behind) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-fur|of) 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n brick next|to-street bicycle-parked|of parked|on-parking_meter-on bicycle-parked|on parked|on-parked parked|a-park 

>> Prompt: van.n parked white
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked|on bicycle-parked|on bicycle-parked parked|on-parked|on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n pastice-on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n partion-on basent-on) 

>> Prompt: wall.n grey
>> Response:  <u speaker=HUM>(wall.n paster-on edge-on edge-of edge-of edge-of edge-of edge-of) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked parked far|ay parked|on-sidewalk) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked parked parked far|ay parking_meter-behind-animal has-ear animal-in animal-in animal-in animal-in) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(park.n parked parked|on-sidewalk) 

>> Prompt: tree.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parked faried parked|on-street) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cent.n black) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(ceat.n drawn on-dish) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cal.n ) 

>> Prompt: arm.n raised
>> Response:  <u speaker=HUM>(cal.n drawn ) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(bink.n black on-table with-food with-food) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(cent.n ral_processing drice|on-desk) 

>> Prompt: road.n 
>> Response:  <u speaker=HUM>(barg.n black) 

>> Prompt: road.n 
>> Response:  )</script.1 type=HUM>(courdrg.n ) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(bage.n black) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(bage.n with-food) 

>> Prompt: window.n building-with house-with
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has woman-wearing) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-has man-wearing woman-wearing) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(bicycle.n near-near parked|ay parked|on-street) 

>> Prompt: vehicle.n white has-headlight parked|on-street parked has-back
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing man-wearing) 

>> Prompt: raincoat.n woman-has gray woman-wearing man-wearing man-has grey
>> Response:  <u speaker=HUM>(man.n has-head has-head eating-pasture eats-pasture has-head has-head has-ear has-ear has-head enjoying-pasture has-ear has-head has-head has-head has-head has-head has- 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(man.n man-wearing) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-has woman-wearing) 

>> Prompt: sweater.n woman-has woman-wearing orange man-wearing on-woman woman-in on-man man-in red man-has grey
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(hair.n drawn cessing) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(frame.n armchair-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(frame.n armchair-has) 

>> Prompt: house.n sign-on tall with-window brick
>> Response:  <u speaker=HUM>(window.n house-on) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(couch.n drawn cheememch with-food) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(courd.n ) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(coucollllllar.n with-liquide) 

>> Prompt: separation.n grey
>> Response:  <u speaker=HUM>(choate.n ) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing woman-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: woman.n wears-trouser has-trouser wearing-shoe has-raincoat in-sweater has-sunglasses wears-gym_shoe wearing-sunglasses holding-chin wearing-sweater parking_meter-behind bicycle-behind wearing-trouser has-sweater wearing-spectacles sweater-on wearing-raincoat has-shoe has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wearing woman-wearing) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: sunglasses.n woman-has woman-wearing
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-tree near-behind animal-animal-has) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-tree parked behind-animal) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n parking_shoe-incain) 

>> Prompt: plant.n next|to-street bicycle-near by-sidewalk sparse
>> Response:  <u speaker=HUM>(bicycle.n near-parked|ar|on fawareeed parked parked|on-sidewalk) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(pordd.n ) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mag.n ) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mad.n red) 

>> Prompt: mercantile_establishment.n on-wall electrical wall-has
>> Response:  <u speaker=HUM>(mercantile_establishment.n on-wall pastograph-wall) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on keyboard-on computer-in|on keyboard-in|a keyboard-in|a keyboard-on keyboard-on keyboard-on keyboard-on computer-on) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n white in-bedroom bedroom-has bedroom-has lamp-in) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk) 

>> Prompt: keyboard.n in|front|of-monitor white mouse-next|to
>> Response:  <u speaker=HUM>(monitor.n black on-table on-table for-computer part-on) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(desk.n man-has man-wearing) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(desk.n man-sitting|a man-sitting|at|at|a man-sitting|at|a a) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(monitor.n white in-park wearing-trouser on-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wears-shirt) 

>> Prompt: monitor.n turned|off white on-wall girl-in|front|of keyboard-in|front|of off
>> Response:  <u speaker=HUM>(monitor.n white girl-sitting|at|a working sitting|a-sitting|at|a working|a) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n collartreed cessing_unit-under) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n cochdroch with-lin with-food) 

>> Prompt: central_processing_unit.n under-desktop under-desk
>> Response:  <u speaker=HUM>(desk.n carentral_unit-under) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(telephone.n white on-desk on-bureau on-desk) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(telephone.n ) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-under cable-on cable-on cable-on cable-on) 

>> Prompt: desktop.n central_processing_unit-under curved
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(drawer.n ) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: drawer.n has-handle
>> Response:  <u speaker=HUM>(drawer.n ) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n carentrocessing_unit-under) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n cal_prordrocessing_prdrick-in) 

>> Prompt: mouse.n white next|to-keyboard
>> Response:  <u speaker=HUM>(desk.n white clupltered|of-desk) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n cal_unit-with) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(telephone.n white) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n couch-net|to monitor-on monitor-on) 

>> Prompt: desk.n girl-sitting|at central_processing_unit-under telephone-on bag-on pen-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a girl-sitting|a) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: plug.n 
>> Response:  <u speaker=HUM>(plug.n ) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(hair.n black man-has man-wearing man-wearing) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk on-desk) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(monitor.n white girl-has) 

>> Prompt: girl.n wears-chain sitting working|on-computer sitting|at-desk in|front|of-monitor has-hair with-hair wearing-necklace
>> Response:  <u speaker=HUM>(hair.n black man-sitting|at|a man-sitting|at|at|at|a) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n potograph-on edge-of) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n partered ptop grey) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(wall.n mercantile_establishment-on mercantile_establishment-on mercantile_element-on edge-of edge-of) 

>> Prompt: wall.n picture-on photograph-on mercantile_establishment-on monitor-on has-mercantile_establishment
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(pen.n ) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(girl.n sitting|a-desk working|at|at|a-desk) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(pearge.n black) 

>> Prompt: hair.n girl-with long girl-has
>> Response:  <u speaker=HUM>(peacket.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n sitting|a-desk) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: chain.n girl-wears
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: pen.n blue black yellow on-desk next|to-telephone
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-of cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on edge-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n on-floor
>> Response:  <u speaker=HUM>(cable.n white on-floor) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: floor.n cable-on
>> Response:  cable-on cable-on) 

>> Prompt: floor.n cable-on
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n paster-on ptop-on edge-of laptop-of edge-of edge-of edge-of edge-on) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: bag.n on-desk black
>> Response:  <u speaker=HUM>(desk.n caral_processing cessing_meter-behind) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing_unit-under) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_unit-under) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(desk.n cal_processing_prtick with-lit) 

>> Prompt: telephone.n on-desk black on-table pen-next|to
>> Response:  <u speaker=HUM>(table.n with-lin with-food) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(calar.n drawn on-pasee light-in) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(calare.n ) 

>> Prompt: strap.n black
>> Response:  <u speaker=HUM>(straw.n ) 

>> Prompt: strap.n black
>> Response:  <u speaker=BOT>(strap.n ) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(couck.n black) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: partition.n calendar-on
>> Response:  <u speaker=HUM>(car.n ) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(edge.n of-wall edge-of edge-of edge-of edge-of edge-of) 

>> Prompt: picture.n on-wall
>> Response:  <u speaker=HUM>(wall.n green potter-on ptop-on) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: calendar.n on-partition
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|in|a girl-sitting|at|a) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(monitor.n white girl-has girl-has) 

>> Prompt: computer.n girl-working|on
>> Response:  <u speaker=HUM>(desk.n girl-has) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n green poter-on padtick-on) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n paster-on pastograph-on) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: photograph.n on-wall
>> Response:  <u speaker=HUM>(potice.n ) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|a girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|at|a girl-sitting|at|a) 

>> Prompt: table.n white telephone-on
>> Response:  <u speaker=HUM>(desk.n girl-sitting|at|at|a) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: handle.n drawer-has
>> Response:  <u speaker=HUM>(cable.n on-wall) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(girl.n girl-has) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(girl.n has|a-desk girl-sitting|at|at|a working sitting|at|a-desk girl-sitting|at|a) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(pen.n ) 

>> Prompt: necklace.n girl-wearing
>> Response:  <u speaker=HUM>(pear.n ) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(bag.n drine-in) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(cord.n drar-has) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: cabinet.n beige grey
>> Response:  <u speaker=HUM>(bag.n black) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tiled tan) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n drawn on-table with-food fork-next|to) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n dre|on girl-wearing) 

>> Prompt: curtain.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tiled tan) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(pot.n part) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(sundding.n poxt|of-p) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(part.n black mug-has) 

>> Prompt: chair.n blue black purple next|to-table next|to-support has-padding slender
>> Response:  <u speaker=HUM>(pardding.n ) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(susait.n midleft dried ) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(sunde.n prt) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(sususunde.n mer purple) 

>> Prompt: padding.n chair-has seat-has blue
>> Response:  <u speaker=HUM>(potick.n port-has) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(shoundd.n paror-on) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(sun.n partied) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(pillow.n on-armchair on-sund on-armchair) 

>> Prompt: pillow.n white teddy-against on-armchair puppet-against on-sofa
>> Response:  <u speaker=HUM>(pillow.n against-sun on-wall teddy-against against) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n ) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n postice-on) 

>> Prompt: rug.n gray purple on-floor clean plush grey
>> Response:  <u speaker=HUM>(floor.n ) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n in-bedroom lamp-in) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in lamp-in) 

>> Prompt: floor.n rug-on wooden wood lamp-on
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souse.n w-ee watee light-in) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(ouse.n woch wor wate with-cheese) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souse.n on-wall) 

>> Prompt: desk.n wooden
>> Response:  <u speaker=HUM>(souster.n on-wall) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n on-st on-armchair) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(shot.n on-floor) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sof) 

>> Prompt: sofa.n purple pillow-on has-frame lamp-behind wooden cloth teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sthoth teddy-against) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(pillow.n on-sof) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sunde.n pag-on teddy-has) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sunde.n parocess-on) 

>> Prompt: teddy.n forward has-fabric on-armchair stuffed against-pillow on-sofa
>> Response:  <u speaker=HUM>(sususe.n black) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(saide.n me-with) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(sususe.n mage-with) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(sun.n drar-has) 

>> Prompt: color.n purple blue
>> Response:  <u speaker=HUM>(susun.n red) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(ouse.n on-wall) 

>> Prompt: window.n 
>> Response:  ) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(out.n ) 

>> Prompt: window.n 
>> Response:  <u speaker=HUM>(ouster.n on-wall) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(susad.n partied) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(sunder.n on-wall) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(susususe.n pardding pppppppot) 

>> Prompt: frame.n wooden armchair-has sofa-has
>> Response:  <u speaker=HUM>(sunde.n pag-has) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n of-dish) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: table.n glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(padding.n red) 

>> Prompt: door.n to-patio glass sliding
>> Response:  part)</script.1> <script.1 type=CONV> <u speaker=HUM>(courdr.n ) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(port.n port-has post-on) 

>> Prompt: door.n to-patio glass sliding
>> Response:  <u speaker=HUM>(porddding.n pase-on past-on ptop-on) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(door.n to) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(to.n to|of-dish) 

>> Prompt: patio.n door-to
>> Response:  <u speaker=HUM>(bowl.n to|of-food) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(sausee.n black) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(sun.n de-with) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(see.n black) 

>> Prompt: fabric.n teddy-has red puppet-has
>> Response:  <u speaker=HUM>(susage.n dr-has) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(suseet.n part-on) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(port.n partied ) 

>> Prompt: seat.n blue black purple next|to-support has-padding slender
>> Response:  <u speaker=HUM>(se.n black on-wall) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(port.n ) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(pordding.n red) 

>> Prompt: picture.n water black art
>> Response:  <u speaker=HUM>(wall.n green poster-on pastograph-on edge-of) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(wall.n green bartise-on) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(seet.n wateee ceens) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(sususe.n paddding ppast) 

>> Prompt: lamp.n behind-armchair black behind-sofa tall standing chrome on-floor
>> Response:  <u speaker=HUM>(see.n black) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(port.n ) 

>> Prompt: box.n empty
>> Response:  <u speaker=HUM>(bord.n ) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(metallic_element.n ) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n furn far|ofed|of-drop) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n fllllllver on on-desk on-desk girl-sitting|at|at|at|a girl-sitting|at|a girl-sitting|at|a) 

>> Prompt: support.n seat-next|to glass chair-next|to metal
>> Response:  <u speaker=HUM>(bowl.n fllllate feed|a-desk man-sitting|a) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hin.n draware ) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n drare-with) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n troate-with) 

>> Prompt: furniture.n drawn designed tied blue
>> Response:  <u speaker=HUM>(hair.n tral_prol_processing with-window bardrorocessing.n with-lin with-food) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(pillow.n white on-sthot on-armchair) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker-behind) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(sun.n teddy-has) 

>> Prompt: armchair.n puppet-on purple pillow-on has-frame wooden cloth lamp-behind teddy-on
>> Response:  <u speaker=HUM>(shouse.n on-floor) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(coardrd.n red) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(couct.n drare|on) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(bag.n black on-table table-in) 

>> Prompt: illustration.n water black art
>> Response:  <u speaker=HUM>(cardaink.n ) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(sund.n part) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(sun.n green woorde w-light has-lamp lamp-in light-in lamp-in lamp-in lamp-in lamp-in lamp-in lamp-in lamp-in 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker=HUM>(pillow.n white on-armchair on-armchair) 

>> Prompt: puppet.n forward has-fabric on-armchair stuffed against-pillow
>> Response:  <u speaker-sunde.n part-on) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(susunde.n part-has) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sooter.n on-wall) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sounge.n ) 

>> Prompt: bureau.n wooden
>> Response:  <u speaker=HUM>(sooust.n port-has part) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n asian working sitting|at|at|a-desk working sitting|a-desk) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n wearing-trouser wearing-trouser sitting|a-desk wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-trouser wearing-shirt wearing-sunsuised  

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n are|awn man-wearing) 

>> Prompt: desk.n man-sitting|in|a woman-sitting|in|a man-at|a bowl-sitting|on man-sitting|at|a woman-sitting|at|a
>> Response:  <u speaker=HUM>(man.n has-hair has-hair wears-shirt has-hair wearing-trouser wearing-shirt wearing-trouser wearing-trouser wearing-shirt wearing-sunsuit wearing-trouser wearing-trouser wears 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing man-wears man-wearing man-wearing) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-under) 

>> Prompt: woman.n sitting at|a-table reaching sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n man-sitting|a) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(calal.n dre|on-desk) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM_prdrocessing.n ) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(bard.n black on-table on-table with-table) 

>> Prompt: jacket.n tan
>> Response:  <u speaker=HUM>(bag.n drawn on-dish) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-wearing) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing woman-wears woman-wearing) 

>> Prompt: knock.n woman-has man-has
>> Response:  <u speaker=HUM>(mane.n man-wearing) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white on-table monitor-on keyboard-on keyboard-on keyboard-on computer-on computer-on computer-on) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(part.n on-wall) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white clare tral_processing working sitting|on-desk on-desk) 

>> Prompt: hair.n dark parted black
>> Response:  <u speaker=HUM>(monitor.n white on-desk on-desk) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(calal.n black) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under cable-on cable-on) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n couch-on man-has man-wearing) 

>> Prompt: bowl.n plastic small red sitting|on-desk
>> Response:  <u speaker=HUM>(desk.n white clucluchairedinginging with-desk on-desk on-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n ar-wearing man-wearing woman-wearing) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n asirn working sitting|at|a-desk working|at|a-desk at|a-sitting|a-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(man.n asian working working sitting|at|a-desk working sitting|at|at|a-desk) 

>> Prompt: trouser.n purple woman-wearing man-wearing
>> Response:  <u speaker=HUM>(trouser.n woman-wearing woman-wearing) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n tan
>> Response:  <u speaker=HUM>(sun.n red) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n partion-on ptop-on) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n pastered bledge-of) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n paster-on paster-on) 

>> Prompt: band.n on-pavement green on-floor
>> Response:  <u speaker=HUM>(wall.n potograph-on edge-of) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(bag.n e-on drawnde-on) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(shade.n on-street) 

>> Prompt: light.n long lit
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(metal.n ric_element on-wall) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parking_shoe-incoatroat wearing-trouser eating-ring wearing-trouser wearing-trouser wearing-trouser wearing-shirt wearing-trouser wearing-trouser wears- 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked parked parked behind-man-has parked|on) 

>> Prompt: shade.n dark
>> Response:  <u speaker=HUM>(collllack.n black) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(met.n ) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(meat.n ) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(dish.n with-food with-food dish-with) 

>> Prompt: metallic_element.n box-made|of container-made|of
>> Response:  <u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bin.n black on-table on-table for-computer part-of) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bin.n draware de|on) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: box.n made|of-metallic_element
>> Response:  <u speaker=HUM>(cord.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(coad.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(carg.n ) 

>> Prompt: cord.n 
>> Response:  <u speaker=HUM>(carg.n ) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(hand.n man-has) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n sitting girl-sitting|at|a working|at|a) 

>> Prompt: hand.n girl-has|a
>> Response:  <u speaker=HUM>(girl.n ) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(man.n man-has man-wearing woman-wears man-wearing) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(hand.n on-desk) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(hand.n girl-has) 

>> Prompt: girl.n has|a-hand
>> Response:  <u speaker=HUM>(man.n man-has man-wearing) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(turoad.n on-wall) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(tu speaker=BOT>(lace.n trawaptop grey on-floor) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(lue.n black on-desk on-desk) 

>> Prompt: tube.n blue
>> Response:  <u speaker=HUM>(llap.n prt-has) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(lace.n black on-desk) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(wall.n pastick-on padd-on) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(wall.n pastered ptop-on ptop-on ptop-on) 

>> Prompt: tape.n white
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(window.n hound-on) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n pastick-on edge-of) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n baby-on ptop-on monitor-on) 

>> Prompt: floor.n band-on
>> Response:  <u speaker=HUM>(wall.n partion parocessing_unit-under cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: tray.n red
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: tray.n red
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: tray.n red
>> Response:  <u speaker=BOT>(dish.n ) 

>> Prompt: tray.n red
>> Response:  )</u speaker=HUM>(dish.n with-cheese) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-has) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n has-hair man-sitting|at|a man-sitting|at|a) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n araire wearing-trouser sitting|at|a-desk) 

>> Prompt: table.n woman-at|a man-at|a
>> Response:  <u speaker=HUM>(man.n areed man-wearing man-wearing) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(couck.n dr-has) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(susun.n e-with) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(court.n de|of-dish) 

>> Prompt: jean.n blue
>> Response:  <u speaker=HUM>(calal.n mise-with) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(saide.n black) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(desk.n caraptop cendrawn chocessing_unit-under) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(desk.n carentral_processing_unit-under) 

>> Prompt: line.n green
>> Response:  <u speaker=HUM>(seet.n black) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n ) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing_unit-with girl-wearing girl-with) 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n chal_prococessing_ptop grey chrordrick with-lindrdrick.n with-lish with-food)</ 

>> Prompt: desktop.n green
>> Response:  <u speaker=HUM>(desk.n chochdrde-has) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-wearing woman-wearing) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(desk.n man-has man-wearing man-wearing man-wearing woman-wears man-wearing) 

>> Prompt: man.n sitting at|a-table reaching at|a-desk sitting|in|a-desk wearing-trouser sitting|at|a-desk has-knock working asian
>> Response:  <u speaker=HUM>(trouser.n man-has man-has man-wearing) 

>> Prompt: container.n made|of-metallic_element
>> Response:  )</script.1> <u speaker=HUM>(bag.n black on-wall) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(couch.n ) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(barg.n ) 

>> Prompt: container.n made|of-metallic_element
>> Response:  <u speaker=HUM>(coucord.n black) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sususee.n black on-wall) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sun.n red) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(sundrar.n drawn ) 

>> Prompt: skirt.n blue
>> Response:  <u speaker=HUM>(saide.n de|on-table) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(bink.n black) 

>> Prompt: pavement.n band-on
>> Response:  drawndee|on) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(bag.n drarawn on-dish) 

>> Prompt: pavement.n band-on
>> Response:  <u speaker=HUM>(calar.n dare|on darawn on-dish) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n tan
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(coladr.n ) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(pordding.n ) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(chouch.n tan) 

>> Prompt: object.n white
>> Response:  <u speaker=HUM>(cholt.n tan) 

>> Prompt: device.n green
>> Response:  cordr-has) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bage.n e-with) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bink.n enge with-food) 

>> Prompt: device.n green
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in bedroom-in lamp-in lamp-in lamp-in lamp-in) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: room.n light-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(bedroom.n in-park has-ear behind-mane behind-man) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(bedroom.n in-bedroom feed|in bedroom-in bedroom-has) 

>> Prompt: light.n on bedroom-has in-room in-bedroom room-has
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(desk.n white claptop-on chair-on monitor-on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(wall.n green cllaptop grey) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(wall.n caroptop ptop-on ptop-on laptop-on ptop-on) 

>> Prompt: monitor.n flat white on-bureau dark on-desk off by-bottle
>> Response:  <u speaker=HUM>(padding.n past) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n black clulueentrocessing_unit-with) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n white cluclucluentroch workinging_ptop grey roroch with-lin with-lit) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk) 

>> Prompt: desk.n white tower-under book-on bin-next|to monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk on-desk) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(hair.n drick with-food) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(hair.n dressing dressing_unit-under) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(light.n light-in lamp-in lamp-in lamp-in) 

>> Prompt: chair.n office gray with-wheel rolling grey
>> Response:  <u speaker=HUM>(light.n wate light-in) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(part.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: bottle.n water screen-by monitor-by on-bureau on-desk plastic empty
>> Response:  <u speaker=HUM>(wall.n potick potick-on) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n housh porddd-on) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n hound-of) 

>> Prompt: window.n open large blind-on
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(bin.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(bag.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(caraink.n black) 

>> Prompt: outside.n 
>> Response:  <u speaker=HUM>(carain.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(window.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: blind.n drawn on-window
>> Response:  <u speaker=HUM>(paper.n ) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(bureau.n costick-on monitor-on) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(desk.n cholartiled with-food) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(bureau.n cotrtion-on carocessing_ptop grey) 

>> Prompt: computer.n on-bureau grey on-desk laptop
>> Response:  <u speaker=HUM>(desktop.n carent.n cal_prdrocess-on girl-with) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n parstered ptop-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n partised part-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n partered ptop-on) 

>> Prompt: poster.n on-wall
>> Response:  <u speaker=HUM>(wall.n pastice-on) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n green poter-on lastograph-on edge-of) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on ledge-of edge-of) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(lacel.n black) 

>> Prompt: wall.n ledge-against shelf-against poster-on green
>> Response:  <u speaker=HUM>(wall.n green poster-on padtice|on ptop-on) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(desk.n cal_prtrocessing with-lit) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(desk.n carock-on) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(pardding.n red) 

>> Prompt: bin.n next|to-bureau blue next|to-desk on-floor
>> Response:  <u speaker=HUM>(pardd.n ) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n pastick-in) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: ceiling.n white
>> Response:  <u speaker=HUM>(chourdrd.n ) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(lue.n black on-desk) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: shelf.n against-wall book-on hold-book baby-on tube-on brown wooden
>> Response:  <u speaker=HUM>(lueellal.n ceing) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n book-on baby) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n book-on) 

>> Prompt: book.n on-shelf shelf-hold on-bureau on-ledge on-desk with-paper red ledge-hold
>> Response:  <u speaker=HUM>(computer.n on-table on-desk on-table) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n carentral_pcessing_prtrticke|mit) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  curtapart.n black) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n cal_processing with-lit) 

>> Prompt: keyboard.n on-bureau on-desk black
>> Response:  <u speaker=HUM>(desk.n cal_processing chordrick-on) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: floor.n bin-on tower-on clean cable-on grey
>> Response:  <u speaker=HUM>(cable.n on-floor) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on edge-of edge-of ledge-of edge-of) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: baby.n on-shelf on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n coultice-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n coladrk-on chair-on) 

>> Prompt: tower.n under-bureau white under-desk on-floor
>> Response:  <u speaker=HUM>(desk.n courtiled with-food) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on cable-on cable-on cable-on cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: cable.n white on-floor
>> Response:  <u speaker=HUM>(floor.n cable-on) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(wall.n green bag-on) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(said.n with-lis) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(sunde.n on-floor) 

>> Prompt: building.n white large
>> Response:  <u speaker=HUM>(hair.n watee deee with-cheese) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(lacke.n choladr-on) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(lap.n red) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(bag.n ) 

>> Prompt: paper.n book-with
>> Response:  <u speaker=HUM>(bard.n black) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n ) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n on in-lamp light-in light-in lamp-in) 

>> Prompt: wheel.n chair-with
>> Response:  <u speaker=HUM>(light.n on in-bedroom bedroom-in bedroom-in) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(lap.n green) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(ledge.n of-image) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(edge.n of-wall) 

>> Prompt: tube.n on-shelf white on-ledge
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(light.n on) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: bedroom.n has-lamp light-in lamp-in has-light indoors
>> Response:  <u speaker=HUM>(lamp.n in-lamp) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(lamp.n in-bedroom) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(lamp.n in-bedroom bedroom-has) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(bedroom.n in-bedroom feed|in bedroom-in) 

>> Prompt: lamp.n on bedroom-has in-bedroom
>> Response:  <u speaker=HUM>(bedroom.n in-park has-ear has-ear behind-ear has-animal has-ear has-ear has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-top 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom bedroom-in bedroom-has) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(chouct.n ) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(wall.n postick-on edge-of) 

>> Prompt: roof.n white
>> Response:  <u speaker=HUM>(chourt.n ) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(keyboard.n white cluclaptop grey on-bureau) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n laptop-on) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-desk) 

>> Prompt: bureau.n white tower-under screen-on book-on bin-next|to container-on monitor-on bottle-on cluttered computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lue.n black on-bureau on-bureau on-desk on-bureau) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: ledge.n against-wall book-on baby-on hold-book tube-on brown wooden
>> Response:  <u speaker=HUM>(lap.n white) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(part.n corddr-on) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(choush.n black) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(page.n with-liquidd) 

>> Prompt: screen.n flat white by-container on-bureau dark off by-bottle
>> Response:  <u speaker=HUM>(couch.n black) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(pard.n red) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(port.n black) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(paddrink.n red) 

>> Prompt: container.n screen-by water on-bureau plastic empty
>> Response:  <u speaker=HUM>(wall.n paster-on ptop-on padtick-on edge-on edge-of edge-of) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(wall.n green poster-on) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n cortion de-on) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n caraprol_processing_unit-under) 

>> Prompt: lamp.n on on-table on-desk silver red
>> Response:  <u speaker=HUM>(table.n corddrocessing_unit-with) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: desk.n light lamp-on edge-of mousepad-on large has-edge computer-on wooden wood monitor-on laptop-on mouse-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-desk on-bureau) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on computer-on keyboard-on) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-table for-bureau) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n keyboard-on keyboard-on keyboard-on computer-on computer-on) 

>> Prompt: keyboard.n white gray on-table part-of on-desk portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-table keyboard-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n potice-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n green) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n green parose-on) 

>> Prompt: picture.n has-sun on-wall edge-of of-mountain hanging of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partion part-on past-on edge-of edge-of edge-of edge-of edge-of edge-of edge-of edge-of 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: wall.n picture-on note-on image-on part-of portion-of
>> Response:  <u speaker=HUM>(computer.n on-desk) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker-holding chin chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(chin.n holding-chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(charger.n red chordrg-holding holding-chin) 

>> Prompt: ipod.n on-shelf white charger-holding contains-gray on-charger
>> Response:  <u speaker=HUM>(charger.n chin) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker-on) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker=HUM>(con.n white on-table con-on keyboard-on keyboard-on keyboard-on computer-on keyboard-on computer-on computer-on) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker-on chordd.n on-table con-on cain) 

>> Prompt: charger.n ipod-on holding-ipod
>> Response:  <u speaker=HUM>(con.n green chourde-on) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n cal_processing_unit-with) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n caral_processing_unit-with pen-under) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n courtiling) 

>> Prompt: laptop.n on on-desk black on-table
>> Response:  <u speaker=HUM>(desk.n caral_processing_unit-under) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(keyboard.n white keyboard-on) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau on-bureau on-floor) 

>> Prompt: monitor.n black on-table part-of on-desk for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-desk on-table mousepad-on) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table for-computer) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table for-computer mouse-on mouse-on mouse-on) 

>> Prompt: mouse.n black on-table on-desk for-computer on-mousepad
>> Response:  <u speaker=HUM>(computer.n on-table for-computer mouse-on) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(table.n white table-with) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(monitor.n white keyboard-in|a monitor-on keyboard-in|a) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker=HUM>(monitor.n black on-desk on-desk) 

>> Prompt: mousepad.n device-on mouse-on on-desk on-table
>> Response:  <u speaker-nex.n cal|to monitor-on) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(couch.n chollarde with-cheese) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(con.n green coucholadre ce-on) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(saun.n white) 

>> Prompt: shelf.n ipod-on speaker-on
>> Response:  <u speaker=HUM>(courd.n on-table) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker-on chouch-on) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(wall.n partered en-on edge-of) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(wall.n pastick e-on edge-of edge-of) 

>> Prompt: speaker.n on-shelf
>> Response:  <u speaker=HUM>(susaage.n black) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sun.n picture-has image-has
>> Response:  <u speaker=HUM>(noustid.n ) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(noustide.n ) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(n.n on-wall) 

>> Prompt: mountain.n image-of picture-of picture-has image-has
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(noutrd.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(niousk.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(nouset.n ) 

>> Prompt: paper.n 
>> Response:  <u speaker=HUM>(nition.n ) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n pastick-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n potick prt-on pastograph-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n green postograph-on lad-on edge-on) 

>> Prompt: note.n on-wall
>> Response:  <u speaker=HUM>(wall.n paster-on) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(chourd.n red) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(sun.n mugy-with) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(seetrain.n drawn on-dish) 

>> Prompt: magnet.n red
>> Response:  <u speaker=HUM>(suse.n black) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(edge.n of-image edge-of) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(n.n n-of edge-of) 

>> Prompt: sunset.n image-of picture-of
>> Response:  <u speaker=HUM>(nound.n ) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker-on) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(coucouck.n chollar-has) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(coucourd.n cessing_unit-with) 

>> Prompt: gray.n ipod-contains
>> Response:  <u speaker=HUM>(couch.n colarde with-cheese napkin-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bord.n e-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(barge.n ) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bag.n e-on) 

>> Prompt: chair.n part-of green
>> Response:  <u speaker=HUM>(bage.n black) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(chourd.n red) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(couck.n black murtide|of-dish) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(chourd.n ) 

>> Prompt: barge.n white
>> Response:  <u speaker=HUM>(bag.n e-in) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white girl-has) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white girl-sitting|in|a girl-wearing) 

>> Prompt: part.n of-monitor of-wall of-couch of-keyboard of-chair of-screen
>> Response:  <u speaker=HUM>(monitor.n white) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(computer.n lawaptop lamp-on lamp-on laptop-on lamp-in lamp-in lamp-in) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(computer.n latered keyboard-on keyboard-on keyboard-on computer-on) 

>> Prompt: edge.n of-desk desk-has table-has of-table of-picture of-image
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau on-bureau) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(computer.n lawn cheeelll-on) 

>> Prompt: computer.n on-table monitor-for screen-for on-desk device-for mouse-for keyboard-for
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker=HUM>(edge.n of-picture) 

>> Prompt: couch.n part-of portion-of green
>> Response:  <u speaker-of) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(mousepad.n on-desk on-desk on-desk) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(computer.n on-bureau on-bureau) 

>> Prompt: table.n screen-on light edge-of has-edge device-on monitor-on mouse-on laptop-on light-on lamp-on mousepad-on large wooden wood computer-on keyboard-on
>> Response:  <u speaker=HUM>(mousepad.n white keyboard-in) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n pastick next|to-wall) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(shoush.n image-of) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partion bag-on ptop-on edge-on) 

>> Prompt: image.n has-sun on-wall edge-of of-mountain hanging of-element of-sunset has-mountain framed
>> Response:  <u speaker=HUM>(wall.n partered ptop-on ptop-on edge-of edge-of) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(said.n red) 

>> Prompt: element.n image-of
>> Response:  <u speaker=HUM>(edge.n of-image) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n colartiling) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(table.n white claptop-on) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n courdrocessing with-lindrick-cheese) 

>> Prompt: light.n on silver on-table red
>> Response:  <u speaker=HUM>(desk.n coladre-on) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(table.n cal_processing_unit-under) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-desk) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(table.n white cluchair-has) 

>> Prompt: device.n for-computer black on-table on-mousepad
>> Response:  <u speaker=HUM>(mousepad.n on-table on-table) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(computer.n on-bureau on-desk) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-picture) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: screen.n black on-table part-of portion-of for-computer
>> Response:  <u speaker=HUM>(part.n of-image) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(cholt.n girl-with) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(wall.n partion bed monitor-on part-on) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(wall.n baby-on ledge-of) 

>> Prompt: portion.n of-couch of-wall of-keyboard of-screen
>> Response:  <u speaker=HUM>(chouck.n with-lis) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(napkin.n on-plate) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-plate) 

>> Prompt: plate.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on with-egg cheese-on tomato-on small glass-on with-food egg-on with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n cheese-in) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: egg.n white muffin-with yellow muffin-under on-muffin on-plate plate-with
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(with.n with-food dish-under) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(with.n dish-with) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: food.n plate-with table-with dish-with
>> Response:  <u speaker=HUM>(food.n with-food) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(liquid.n with-food) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cup.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(liquid.n with-liquige) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(glass.n with-glass) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(liquid.n with-liquid) 

>> Prompt: liquid.n brown mug-with cup-with
>> Response:  <u speaker=HUM>(lin.n with-liquid) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  dish-in) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: glass.n plate-under on-table on-dish small on-plate with-straw straw-in dish-under on-disk clear drink-in
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(glass.n with-straw) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(straw.n with-food) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(straw.n with-food) 

>> Prompt: straw.n glass-with in-glass
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n glass-with) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n dish-with) 

>> Prompt: meat.n dish-with plate-with
>> Response:  <u speaker=HUM>(with.n with-food with-cheese) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n green) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sauce.n in-bottle
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(lindd.n ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(food.n glass ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: bottle.n condiment-in green with-cap sauce-in
>> Response:  <u speaker=HUM>(lind.n red) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: fork.n to|right|of-plate next|to-plate to|right|of-dish silver next|to-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-under) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(on.n plate-on) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: table.n with-food disk-on glass-on black
>> Response:  <u speaker=HUM>(cheese.n dish-with) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n under-napkin under-cheese) 

>> Prompt: sausage.n small on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(napkin.n ) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker-on plate-with) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: muffin.n under-egg cheese-on with-cheese egg-on under-cheese with-egg english
>> Response:  <u speaker=HUM>(cheese.n under-napkin) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(courg.n ) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(chouch.n miged with-lis) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(susage.n ) 

>> Prompt: chump.n brown
>> Response:  <u speaker=HUM>(sarge.n ) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-under) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food with-cheese cheese-on under-napkin-on) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n under-cheese) 

>> Prompt: tomato.n on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food dish-with) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: label.n orange
>> Response:  <u speaker=HUM>(car.n black) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(choad.n ch-with) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mag.n mage-on bottle-in) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mage.n with-liquy mid-food) 

>> Prompt: cap.n bottle-with
>> Response:  <u speaker=HUM>(mug.n red) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-with) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: drink.n in-glass red
>> Response:  <u speaker=HUM>(glass.n straw-in) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n with-food with-cheese) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: disk.n small white glass-on on-table
>> Response:  <u speaker=HUM>(table.n table-in) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker-under) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker=HUM>(cheese.n under-cheese) 

>> Prompt: napkin.n plate-under on-dish on-plate dish-under under-bread
>> Response:  <u speaker-under)</u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-food dish-with) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: bread.n napkin-under chocolate on-plate on-dish
>> Response:  <u speaker=HUM>(plate.n with-cheese) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: mug.n small glass with-liquid
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: cheese.n pastry-under white muffin-with yellow muffin-under on-dish on-muffin on-plate plate-with pastry-with on-pastry dish-with
>> Response:  <u speaker=HUM>(cheese.n dish-with) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(cheese.n cheese-on) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(cheese.n cheese-on under-cheese) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(napkin.n under-cheese) 

>> Prompt: pastry.n under-cheese cheese-on english with-cheese
>> Response:  <u speaker=HUM>(napkin.n on-dish) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(napkin.n under-cheese cheese) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-dish) 

>> Prompt: dish.n under-napkin with-cheese sausage-on fork-next|to fork-to|right|of napkin-on bread-on vegetable-on cheese-on tomato-on small glass-on with-food with-meat under-glass
>> Response:  <u speaker=HUM>(cheese.n on-plate) 

>> Prompt: vegetable.n on-dish
>> Response:  <u speaker=HUM>(dish.n glass-on) 

>> Prompt: vegetable.n on-dish
>> Response:  <u speaker=HUM>(plate.n under-cheese) 

>> Prompt: vegetable.n on-dish
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: vegetable.n on-dish
>> Response:  <u speaker=HUM>(plate.n with-cheese) 

>> Prompt: condiment.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n with-food) 

>> Prompt: condiment.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n with-cheese) 

>> Prompt: condiment.n in-bottle
>> Response:  <u speaker=HUM>(bottle.n coucoch with-food) 

>> Prompt: condiment.n in-bottle
>> Response:  <u speaker=HUM>(coadr.n ) 

>> Prompt: man.n eating-ring wears-trouser in-shirt holding-ring wearing-shirt has-nose has-ear wearing-watch light-behind wears-shirt has-hair eating wearing-trouser wearing-spectacles has-hand licking-thumb has-watch has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: man.n eating-ring wears-trouser in-shirt holding-ring wearing-shirt has-nose has-ear wearing-watch light-behind wears-shirt has-hair eating wearing-trouser wearing-spectacles has-hand licking-thumb has-watch has-spectacles
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wearing) 

>> Prompt: man.n eating-ring wears-trouser in-shirt holding-ring wearing-shirt has-nose has-ear wearing-watch light-behind wears-shirt has-hair eating wearing-trouser wearing-spectacles has-hand licking-thumb has-watch has-spectacles
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing woman-wearing) 

>> Prompt: man.n eating-ring wears-trouser in-shirt holding-ring wearing-shirt has-nose has-ear wearing-watch light-behind wears-shirt has-hair eating wearing-trouser wearing-spectacles has-hand licking-thumb has-watch has-spectacles
>> Response:  <u speaker=HUM>(ring.n wearing-shirt woman-wearing) 

>> Prompt: shirt.n woman-wearing blue baby|blue lamp|blue man-wearing man-wears woman-wears has-piece man-in has-button short|sleeved light|blue has-collar woman-in
>> Response:  <u speaker=HUM>(hair.n woman-has) 

>> Prompt: shirt.n woman-wearing blue baby|blue lamp|blue man-wearing man-wears woman-wears has-piece man-in has-button short|sleeved light|blue has-collar woman-in
>> Response:  <u speaker=HUM>(hair.n woman-wearing) 

>> Prompt: shirt.n woman-wearing blue baby|blue lamp|blue man-wearing man-wears woman-wears has-piece man-in has-button short|sleeved light|blue has-collar woman-in
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: shirt.n woman-wearing blue baby|blue lamp|blue man-wearing man-wears woman-wears has-piece man-in has-button short|sleeved light|blue has-collar woman-in
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: ring.n woman-eating woman-holding brown man-eating man-holding
>> Response:  <u speaker=HUM>(guy.n woman-wearing woman-wearing woman-wearing) 

>> Prompt: ring.n woman-eating woman-holding brown man-eating man-holding
>> Response:  <u speaker=HUM>(chin.n black woman-wearing) 

>> Prompt: ring.n woman-eating woman-holding brown man-eating man-holding
>> Response:  <u speaker=HUM>(guym_shoe.n brown woman-has man-wearing man-wearing) 

>> Prompt: ring.n woman-eating woman-holding brown man-eating man-holding
>> Response:  <u speaker=HUM>(chin.n drawn on) 

>> Prompt: watch.n woman-has woman-wearing multicolored black man-wearing red man-has
>> Response:  <u speaker=HUM>(trouser.n woman-wearing man-wearing man-wearing woman-wearing) 

>> Prompt: watch.n woman-has woman-wearing multicolored black man-wearing red man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: watch.n woman-has woman-wearing multicolored black man-wearing red man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing) 

>> Prompt: watch.n woman-has woman-wearing multicolored black man-wearing red man-has
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: spectacles.n woman-has woman-wearing dark man-wearing brown a|pair man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing) 

>> Prompt: spectacles.n woman-has woman-wearing dark man-wearing brown a|pair man-has
>> Response:  <u speaker=HUM>(trouser.n brown man-has man-wearing man-wearing) 

>> Prompt: spectacles.n woman-has woman-wearing dark man-wearing brown a|pair man-has
>> Response:  <u speaker=HUM>(ring.n holding-chin) 

>> Prompt: spectacles.n woman-has woman-wearing dark man-wearing brown a|pair man-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-wearing woman-wearing) 

>> Prompt: hair.n woman-has black shaved messy brown man-has
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing woman-wearing) 

>> Prompt: hair.n woman-has black shaved messy brown man-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: hair.n woman-has black shaved messy brown man-has
>> Response:  <u speaker=HUM>(hair.n black woman-has) 

>> Prompt: hair.n woman-has black shaved messy brown man-has
>> Response:  <u speaker=HUM>(trouser.n man-has man-has) 

>> Prompt: thumb.n man-licking woman-licking in-face in-mouth
>> Response:  <u speaker=HUM>(gy.n dr-has) 

>> Prompt: thumb.n man-licking woman-licking in-face in-mouth
>> Response:  <u speaker=HUM>(ge.n drawn ware wn on-dish) 

>> Prompt: thumb.n man-licking woman-licking in-face in-mouth
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: thumb.n man-licking woman-licking in-face in-mouth
>> Response:  <u speaker=HUM>(gy.n woman-has) 

>> Prompt: mouth.n thumb-in
>> Response:  <u speaker=HUM>(light.n cholart) 

>> Prompt: mouth.n thumb-in
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: mouth.n thumb-in
>> Response:  <u speaker=HUM>(lamp.n in-bedroom lamp-in bedroom-in) 

>> Prompt: mouth.n thumb-in
>> Response:  <u speaker=HUM>(lamp.n in|bart feed parked|on-street) 

>> Prompt: light.n behind-man behind-woman
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: light.n behind-man behind-woman
>> Response:  <u speaker=HUM>(man.n man-wearing achin|a) 

>> Prompt: light.n behind-man behind-woman
>> Response:  <u speaker=HUM>(woman.n woman-has woman-has) 

>> Prompt: light.n behind-man behind-woman
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing woman-wearing woman-wearing) 

>> Prompt: wall.n beige red orange
>> Response:  <u speaker=HUM>(courdr.n brown) 

>> Prompt: wall.n beige red orange
>> Response:  <u speaker=HUM>(suse.n woman-wearing) 

>> Prompt: wall.n beige red orange
>> Response:  <u speaker=HUM>(suseet.n woman-wearing) 

>> Prompt: wall.n beige red orange
>> Response:  <u speaker=HUM>(see.n woman-has) 

>> Prompt: trouser.n woman-wearing dark man-wearing man-wears woman-wears
>> Response:  <u speaker=HUM>(man.n man-has) 

>> Prompt: trouser.n woman-wearing dark man-wearing man-wears woman-wears
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing) 

>> Prompt: trouser.n woman-wearing dark man-wearing man-wears woman-wears
>> Response:  <u speaker=HUM>(man.n wearing-trouser wearing-trouser wearing-shirt) 

>> Prompt: trouser.n woman-wearing dark man-wearing man-wears woman-wears
>> Response:  <u speaker=HUM>(trouser.n woman-wearing) 

>> Prompt: ear.n woman-has man-has
>> Response:  <u speaker=HUM>(headlight.n man-has man-has) 

>> Prompt: ear.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n ar-wearing) 

>> Prompt: ear.n woman-has man-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: ear.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n man-has) 

>> Prompt: hand.n woman-has man-has
>> Response:  <u speaker=HUM>(hair.n black man-has) 

>> Prompt: hand.n woman-has man-has
>> Response:  <u speaker=HUM>(hair.n black woman-wearing) 

>> Prompt: hand.n woman-has man-has
>> Response:  <u speaker=HUM>(man.n ar-wearing man-wearing man-wearing) 

>> Prompt: hand.n woman-has man-has
>> Response:  <u speaker=HUM>(hair.n woman-has man-has man-wearing) 

>> Prompt: button.n white shirt-has
>> Response:  <u speaker=HUM>(seet.n woman-has) 

>> Prompt: button.n white shirt-has
>> Response:  woman-has) 

>> Prompt: button.n white shirt-has
>> Response:  <u speaker=HUM>(fullllat.n black woman-wearing) 

>> Prompt: button.n white shirt-has
>> Response:  shirt-has woman-has woman-has) 

>> Prompt: elbow.n bent
>> Response:  <u speaker=HUM>(cord.n dr-on) 

>> Prompt: elbow.n bent
>> Response:  <u speaker=HUM>(couch.n dr-with) 

>> Prompt: elbow.n bent
>> Response:  <u speaker=HUM>(page.n with-food) 

>> Prompt: elbow.n bent
>> Response:  <u speaker=HUM>(cord.n ) 

>> Prompt: collar.n dress-has shirt-has
>> Response:  <u speaker=HUM>(shirt.n brown woman-wearing) 

>> Prompt: collar.n dress-has shirt-has
>> Response:  <u speaker=HUM>(shirt.n brown woman-wearing woman-has man-wearing woman-wearing woman-wearing) 

>> Prompt: collar.n dress-has shirt-has
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: collar.n dress-has shirt-has
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: board.n white
>> Response:  <u speaker=HUM>(barg.n black) 

>> Prompt: board.n white
>> Response:  <u speaker=HUM>(chouck.n drick ) 

>> Prompt: board.n white
>> Response:  <u speaker=HUM>(chair.n tricke-has) 

>> Prompt: board.n white
>> Response:  <u speaker=HUM>(chouch.n drare-has) 

>> Prompt: bottle.n brown glass reddish
>> Response:  <u speaker=HUM>(couck.n midde-on chin|front-keyboard-in|of) 

>> Prompt: bottle.n brown glass reddish
>> Response:  <u speaker=HUM>(chin.n black muge-has) 

>> Prompt: bottle.n brown glass reddish
>> Response:  <u speaker=HUM>(muge.n with-food) 

>> Prompt: bottle.n brown glass reddish
>> Response:  <u speaker=HUM>(musk.n with-liquid) 

>> Prompt: chair.n black
>> Response:  <u speaker=HUM>(hair.n black with-food with-food with-food) 

>> Prompt: chair.n black
>> Response:  <u speaker=HUM>(hair.n tiled) 

>> Prompt: chair.n black
>> Response:  <u speaker=HUM>(hair.n tiled) 

>> Prompt: chair.n black
>> Response:  <u speaker=HUM>(hair.n girl-sitting|in|a) 

>> Prompt: nose.n woman-has man-has
>> Response:  <u speaker=HUM>(nose.n on|left man-wearing woman-wearing) 

>> Prompt: nose.n woman-has man-has
>> Response:  <u speaker=HUM>(nose.n animal-has) 

>> Prompt: nose.n woman-has man-has
>> Response:  <u speaker=HUM>(head.n has-head has-head eats-pasture has-head has-head has-ear has-head eating-pasture has-pasture has-ear has-head eats-pasture has-pasture has-head has-ear eats-pasture has 

>> Prompt: nose.n woman-has man-has
>> Response:  <u speaker=HUM>(nose.n animal-has) 

>> Prompt: couch.n black
>> Response:  <u speaker=HUM>(susarde.n ) 

>> Prompt: couch.n black
>> Response:  <u speaker=HUM>(coadr.n ) 

>> Prompt: couch.n black
>> Response:  <u speaker=HUM>(couch.n drar-has) 

>> Prompt: couch.n black
>> Response:  <u speaker=HUM>(sususage.n with-food with-food) 

>> Prompt: woman.n eating-ring wears-trouser in-shirt in-dress holding-ring wearing-shirt licking-thumb has-nose has-ear wearing-watch wears-dress wearing-dress light-behind wears-shirt wearing-glasses has-glasses has-hair eating has-accessory wearing-trouser wearing-spectacles lamp-behind has-hand has-watch has-spectacles wearing-accessory
>> Response:  <u speaker=HUM>(trouser.n man-wearing woman-wearing) 

>> Prompt: woman.n eating-ring wears-trouser in-shirt in-dress holding-ring wearing-shirt licking-thumb has-nose has-ear wearing-watch wears-dress wearing-dress light-behind wears-shirt wearing-glasses has-glasses has-hair eating has-accessory wearing-trouser wearing-spectacles lamp-behind has-hand has-watch has-spectacles wearing-accessory
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-has) 

>> Prompt: woman.n eating-ring wears-trouser in-shirt in-dress holding-ring wearing-shirt licking-thumb has-nose has-ear wearing-watch wears-dress wearing-dress light-behind wears-shirt wearing-glasses has-glasses has-hair eating has-accessory wearing-trouser wearing-spectacles lamp-behind has-hand has-watch has-spectacles wearing-accessory
>> Response:  <u speaker=HUM>(trouser.n brown man-wearing man-wearing) 

>> Prompt: woman.n eating-ring wears-trouser in-shirt in-dress holding-ring wearing-shirt licking-thumb has-nose has-ear wearing-watch wears-dress wearing-dress light-behind wears-shirt wearing-glasses has-glasses has-hair eating has-accessory wearing-trouser wearing-spectacles lamp-behind has-hand has-watch has-spectacles wearing-accessory
>> Response:  <u speaker=HUM>(trouser.n woman-has woman-wearing) 

>> Prompt: face.n thumb-in
>> Response:  <u speaker=HUM>(light.n on) 

>> Prompt: face.n thumb-in
>> Response:  <u speaker=HUM>(light.n on in-lamp lamp-in light-in) 

>> Prompt: face.n thumb-in
>> Response:  <u speaker=HUM>(light.n raprococessing light has-lamp-in lamp-in lamp-in light-in) 

>> Prompt: face.n thumb-in
>> Response:  <u speaker=HUM>(lamp.n on in-bedroom) 

>> Prompt: piece.n dress-has white shirt-has
>> Response:  <u speaker=HUM>(ring.n woman-has) 

>> Prompt: piece.n dress-has white shirt-has
>> Response:  <u speaker=HUM>(ring.n woman-wearing woman-wears) 

>> Prompt: piece.n dress-has white shirt-has
>> Response:  <u speaker=HUM>(ring.n brown woman-wearing) 

>> Prompt: piece.n dress-has white shirt-has
>> Response:  <u speaker=HUM>(ring.n woman-wearing) 

>> Prompt: glasses.n woman-has woman-wearing dark brown a|pair
>> Response:  <u speaker=HUM>(trouser.n brown woman-has woman-wearing) 

>> Prompt: glasses.n woman-has woman-wearing dark brown a|pair
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: glasses.n woman-has woman-wearing dark brown a|pair
>> Response:  <u speaker=HUM>(ring.n brown woman-wearing man-wearing man-wearing man-wearing) 

>> Prompt: glasses.n woman-has woman-wearing dark brown a|pair
>> Response:  <u speaker=HUM>(trouser.n woman-has) 

>> Prompt: lamp.n behind-woman
>> Response:  <u speaker=HUM>(lamp.n on) 

>> Prompt: lamp.n behind-woman
>> Response:  <u speaker=HUM>(lamp.n in|bardr-bedroom) 

>> Prompt: lamp.n behind-woman
>> Response:  <u speaker=HUM>(lamp.n in-lamp lamp-in lamp-in) 

>> Prompt: lamp.n behind-woman
>> Response:  <u speaker=HUM>(light.n on in-lamp) 

>> Prompt: dress.n woman-wearing blue baby|blue lamp|blue has-piece woman-wears short|sleeved has-collar woman-in
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: dress.n woman-wearing blue baby|blue lamp|blue has-piece woman-wears short|sleeved has-collar woman-in
>> Response:  <u speaker=HUM>(woman.n woman-has woman-has woman-wearing) 

>> Prompt: dress.n woman-wearing blue baby|blue lamp|blue has-piece woman-wears short|sleeved has-collar woman-in
>> Response:  <u speaker=HUM>(woman.n brown woman-has) 

>> Prompt: dress.n woman-wearing blue baby|blue lamp|blue has-piece woman-wears short|sleeved has-collar woman-in
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: accessory.n woman-has woman-wearing black multicolored red
>> Response:  <u speaker=HUM>(thumb.n woman-wearing) 

>> Prompt: accessory.n woman-has woman-wearing black multicolored red
>> Response:  <u speaker=HUM>(shirt.n brown woman-has) 

>> Prompt: accessory.n woman-has woman-wearing black multicolored red
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: accessory.n woman-has woman-wearing black multicolored red
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n has-ear has-ear has-topographic_point has-topographic_point topographic_point has-topographic_point has-topographic_point topographic_point-on topographic_ 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on-animal) 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n has-head has-horn has-head has-horn has-head has-horn has-horn has-head has-horn has-horn has-head has-head eats-pasture has-head eats-pasture eats-pasture enjoying 

>> Prompt: giraffe.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n animal-has animal-has animal-has animal-has animal-has) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n in-tree behind-animal has-animal has-plant has-plant has-plant plant-plant has-plant has-plant has-plant has-plant has-plant has-branch has-branch has-branch has-branch has-branch 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n on-plant plant-in) 

>> Prompt: park.n tree-in giraffe-in animal-in plant-in
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has animal-has animal-has animal-has) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: head.n has-horn has-ear giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(pasture.n feeding in-park has-head has-head has-head has-ear eats-pasture has-ear has-head enjoying-pasture has-pasture eats-pasture has-pasture has-ear has-ear eating- 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(pasture.n animal-has animal-has) 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(ear.n on-body) 

>> Prompt: crate.n pasture-in has-pasture holds-pasture gray
>> Response:  <u speaker=HUM>(ear.n on-animal animal-has) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(animal.n animal-has) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(pasture.n animal-has animal-has) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(pasture.n has-ear animal-in animal-in) 

>> Prompt: pasture.n animal-eats animal-eating crate-holds giraffe-enjoying giraffe-eats crate-has dried animal-enjoying in-crate giraffe-eating green
>> Response:  <u speaker=HUM>(pasture.n fasian fan fed has-head has-ear animal-in animal-in plant-in) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(eye.n animal-has) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has animal-has animal-has animal-has) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(eye.n animal-has) 

>> Prompt: nose.n has-nostril giraffe-has long animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has animal-has animal-has) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: mouth.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(horn.n giraffe-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(horn.n animal-has) 

>> Prompt: horn.n head-has giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has animal-in animal-has animal-has animal-has animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(animal.n animal-has animal-has animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: eye.n giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n has-horn has-horn has-horn has-horn animal-has animal-has animal-has) 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-topographic_point topographic_point-on topographic_point-on topographic_point-on topographic_point-on topographic_point-on top 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on|topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: body.n spotted giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(plant.n on-tree behind-animal) 

>> Prompt: tree.n has-branch has-leaf behind-giraffe has-plant behind-animal plant-on in-park leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-braid braid-behind) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(top.n animal-in) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(top.n animal-has animal-has animal-has) 

>> Prompt: ear.n white animal-has black on-giraffe on|right giraffe-has on-animal pointy head-has on|left
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n on-neck) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n on-neck on-neck) 

>> Prompt: topographic_point.n animal-has black giraffe-has on-body on-neck
>> Response:  <u speaker=HUM>(topographic_point.n on-neck on-neck) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n in-park has-head behind-man) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n in-park has-ear behind-animal) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n in-tree behind-woman on|me woman-wearing) 

>> Prompt: leaf.n on-tree green tree-has
>> Response:  <u speaker=HUM>(tree.n in-park behind-animal has-animal has-head eats-ear has-head has-ear has-ear has-ear has-ear has-topographic_point has-topographic_point has-topographic_point 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(branch.n tree-has tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-tree tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-tree tree-has) 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has) 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(ear.n on|left ft ft feding in-park has-park has-head eats-pasture eats-pasture eating-pasture eats-pasture has-pasture eating-pasture eats-pasture has- 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n has-headlight) 

>> Prompt: mane.n brown giraffe-has animal-has
>> Response:  <u speaker=HUM>(head.n animal-has animal-has animal-has) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(body.n animal-has) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n animal-has animal-has) 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-neck on-neck on-neck on|topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic 

>> Prompt: neck.n giraffe-has animal-has topographic_point-on
>> Response:  <u speaker=HUM>(topographic_point.n on-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point has-topographic_point 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(neck.n animal-has animal-has) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(neck.n animal-has) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=BOT>(topographic_point.n on-neck) 

>> Prompt: nostril.n nose-has
>> Response:  <u speaker=HUM>(neck.n girl-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n has-head has-head has-horn has-head has-head eating-pasture eating-pasture has-pasture eating-pasture has-pasture has-pasture has-pasture eats-pasture has-ear eating-pasture eats- 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on|left animal-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(ear.n on|left feed animal-has) 

>> Prompt: animal.n eats-pasture has-topographic_point has-eye has-horn feeding center enjoying-pasture tree-behind has-nose on|left has-neck eating-pasture ear-on plant-behind has-mouth has-body on|the|left has-mane has-head in-park has-ear on|the|right
>> Response:  <u speaker=HUM>(head.n animal-has animal-has) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has plant-has) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n in|front-park behind-animal) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(branch.n plant-has) 

>> Prompt: plant.n tree-has has-branch plant-has has-limb on-plant has-plant behind-animal plant-on in-park on-tree green
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(plant.n in-tree behind-woman) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(plant.n on-plant) 

>> Prompt: limb.n plant-has
>> Response:  <u speaker=HUM>(branch.n plant-has) 

>> Prompt: plate.n white cheese-on|a cracker-on chopstick-in|middle|of with-food table-with
>> Response:  <u speaker=HUM>(dish.n with-food with-cheese) 

>> Prompt: plate.n white cheese-on|a cracker-on chopstick-in|middle|of with-food table-with
>> Response:  <u speaker-with)</u speaker=HUM>(food.n ) 

>> Prompt: plate.n white cheese-on|a cracker-on chopstick-in|middle|of with-food table-with
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: plate.n white cheese-on|a cracker-on chopstick-in|middle|of with-food table-with
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: bit.n container-of bowl-of
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: bit.n container-of bowl-of
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: bit.n container-of bowl-of
>> Response:  <u speaker=HUM>(container.n with-food with-food) 

>> Prompt: bit.n container-of bowl-of
>> Response:  <u speaker=HUM>(container.n with-food dish-with) 

>> Prompt: bowl.n colorful black filled|with-drop striped of-bit wire of-drop
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: bowl.n colorful black filled|with-drop striped of-bit wire of-drop
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: bowl.n colorful black filled|with-drop striped of-bit wire of-drop
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: bowl.n colorful black filled|with-drop striped of-bit wire of-drop
>> Response:  <u speaker=HUM>(bowl.n filled bowl-with) 

>> Prompt: sauce.n food-next|to red
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: sauce.n food-next|to red
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: sauce.n food-next|to red
>> Response:  <u speaker=HUM>(dish.n dish-on) 

>> Prompt: sauce.n food-next|to red
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: food.n white cubed on|a-dish platter-full|of plate-with next|to-sauce dish-with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: food.n white cubed on|a-dish platter-full|of plate-with next|to-sauce dish-with
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: food.n white cubed on|a-dish platter-full|of plate-with next|to-sauce dish-with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: food.n white cubed on|a-dish platter-full|of plate-with next|to-sauce dish-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: vegetable.n platter-full|of tray-full|of
>> Response:  <u speaker=HUM>(platter.n of-of) 

>> Prompt: vegetable.n platter-full|of tray-full|of
>> Response:  <u speaker=HUM>(bowl.n fillled|a-desk) 

>> Prompt: vegetable.n platter-full|of tray-full|of
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: vegetable.n platter-full|of tray-full|of
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: tray.n full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: tray.n full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: tray.n full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: tray.n full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: chopstick.n in|middle|of-dish in|middle|of-plate
>> Response:  <u speaker=HUM>(plate.n with-cheese) 

>> Prompt: chopstick.n in|middle|of-dish in|middle|of-plate
>> Response:  <u speaker=HUM>(dish.n dish-under) 

>> Prompt: chopstick.n in|middle|of-dish in|middle|of-plate
>> Response:  <u speaker=HUM>(dish.n dish-under) 

>> Prompt: chopstick.n in|middle|of-dish in|middle|of-plate
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: table.n with-plate with-dish
>> Response:  <u speaker=HUM>(food.n with-cheese) 

>> Prompt: table.n with-plate with-dish
>> Response:  <u speaker=HUM>(food.n with-food dish-with) 

>> Prompt: table.n with-plate with-dish
>> Response:  <u speaker=HUM>(food.n dish-with) 

>> Prompt: table.n with-plate with-dish
>> Response:  <u speaker=HUM>(food.n with-food) 

>> Prompt: cracker.n on-plate platter-of tray-of on-dish
>> Response:  <u speaker-of) 

>> Prompt: cracker.n on-plate platter-of tray-of on-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: cracker.n on-plate platter-of tray-of on-dish
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: cracker.n on-plate platter-of tray-of on-dish
>> Response:  <u speaker=HUM>(food.n ) 

>> Prompt: basket.n with-napkin napkin-in with-handle light|tan light|brown
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: basket.n with-napkin napkin-in with-handle light|tan light|brown
>> Response:  <u speaker=HUM>(light.n light-in) 

>> Prompt: basket.n with-napkin napkin-in with-handle light|tan light|brown
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: basket.n with-napkin napkin-in with-handle light|tan light|brown
>> Response:  <u speaker=HUM>(dish.n with-food with-food with-food) 

>> Prompt: napkin.n white basket-with container-with in-basket in-container
>> Response:  <u speaker=HUM>(container.n with-food dish-under) 

>> Prompt: napkin.n white basket-with container-with in-basket in-container
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: napkin.n white basket-with container-with in-basket in-container
>> Response:  <u speaker=HUM>(dish.n with-food dish-with) 

>> Prompt: napkin.n white basket-with container-with in-basket in-container
>> Response:  <u speaker=HUM>(container.n white) 

>> Prompt: cheese.n white cubed on|a-plate on|a-dish
>> Response:  <u speaker=HUM>(plate.n with-food with-cheese) 

>> Prompt: cheese.n white cubed on|a-plate on|a-dish
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: cheese.n white cubed on|a-plate on|a-dish
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: cheese.n white cubed on|a-plate on|a-dish
>> Response:  <u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: drop.n bowl-filled|with container-of bowl-of container-filled|with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: drop.n bowl-filled|with container-of bowl-of container-filled|with
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: drop.n bowl-filled|with container-of bowl-of container-filled|with
>> Response:  <u speaker=HUM>(container.n with-food with-food) 

>> Prompt: drop.n bowl-filled|with container-of bowl-of container-filled|with
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: bread.n flat
>> Response:  <u speaker=HUM>(ceat.n black murtuge.n ) 

>> Prompt: bread.n flat
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: bread.n flat
>> Response:  <u speaker=HUM>(cellllacel.n black) 

>> Prompt: bread.n flat
>> Response:  <u speaker=HUM>(dish.n with-food with-food) 

>> Prompt: fabric.n red
>> Response:  <u speaker=HUM>(seet.n wn on-dish) 

>> Prompt: fabric.n red
>> Response:  <u speaker=HUM>(wateel.n black wure black with-cheese) 

>> Prompt: fabric.n red
>> Response:  <u speaker=HUM>(sususk.n ) 

>> Prompt: fabric.n red
>> Response:  <u speaker=HUM>(seade.n ) 

>> Prompt: pile.n 
>> Response:  <u speaker=HUM>(page.n ) 

>> Prompt: pile.n 
>> Response:  <u speaker=HUM>(potograph.n on-wall) 

>> Prompt: pile.n 
>> Response:  <u speaker=HUM>(wall.n ) 

>> Prompt: pile.n 
>> Response:  <u speaker=HUM>(wall.n postograph-on ptop-on) 

>> Prompt: rug.n 
>> Response:  <u speaker=HUM>(shoun.n ) 

>> Prompt: rug.n 
>> Response:  <u speaker=HUM>(floor.n potograph-on laptop-on) 

>> Prompt: rug.n 
>> Response:  <u speaker=HUM>(shi.n ) 

>> Prompt: rug.n 
>> Response:  <u speaker=HUM>(shouse.n ) 

>> Prompt: sushi.n platter-of tray-of
>> Response:  <u speaker=HUM>(platter.n of-of) 

>> Prompt: sushi.n platter-of tray-of
>> Response:  <u speaker=HUM>(platter.n fur|ofi) 

>> Prompt: sushi.n platter-of tray-of
>> Response:  <u speaker=HUM>(platter.n fur|offillllllllllled|of-dish) 

>> Prompt: sushi.n platter-of tray-of
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: handle.n basket-with container-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: handle.n basket-with container-with
>> Response:  card.n )</scre|has </script.1> <script.8 pe=CONV> <u speaker=HUM>(furnilled woman-has) 

>> Prompt: handle.n basket-with container-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: handle.n basket-with container-with
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: dish.n white cheese-on|a chopstick-in|middle|of cracker-on with-food food-on|a table-with object-in|middle|of
>> Response:  <u speaker=HUM>(food.n charen black) 

>> Prompt: dish.n white cheese-on|a chopstick-in|middle|of cracker-on with-food food-on|a table-with object-in|middle|of
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: dish.n white cheese-on|a chopstick-in|middle|of cracker-on with-food food-on|a table-with object-in|middle|of
>> Response:  <u speaker=HUM>(food.n caraiged) 

>> Prompt: dish.n white cheese-on|a chopstick-in|middle|of cracker-on with-food food-on|a table-with object-in|middle|of
>> Response:  <u speaker=HUM>(dish.n with-cheese) 

>> Prompt: container.n with-napkin colorful black filled|with-drop napkin-in striped with-handle light|tan of-bit wire light|brown of-drop
>> Response:  <u speaker=HUM>(bowl.n of-filed|of) 

>> Prompt: container.n with-napkin colorful black filled|with-drop napkin-in striped with-handle light|tan of-bit wire light|brown of-drop
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: container.n with-napkin colorful black filled|with-drop napkin-in striped with-handle light|tan of-bit wire light|brown of-drop
>> Response:  <u speaker=HUM>(container.n ) 

>> Prompt: container.n with-napkin colorful black filled|with-drop napkin-in striped with-handle light|tan of-bit wire light|brown of-drop
>> Response:  <u speaker=HUM>(bowl.n ) 

>> Prompt: platter.n full|of-food full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: platter.n full|of-food full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: platter.n full|of-food full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n dish-with) 

>> Prompt: platter.n full|of-food full|of-vegetable of-sushi of-cracker
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: object.n in|middle|of-dish
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: object.n in|middle|of-dish
>> Response:  <u speaker=HUM>(dish.n ) 

>> Prompt: object.n in|middle|of-dish
>> Response:  <u speaker=HUM>(dish.n with-food) 

>> Prompt: object.n in|middle|of-dish
>> Response:  <u speaker=HUM>(ceat.n with-liquid) 

>> Prompt: elephant.n trunk-of gray in-braid has-eye braid-next|to braid-behind baby in-center and-elephant elephant-and in|front-adult adult small has-tail big young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(elephant.n adult has-adult has-tail) 

>> Prompt: elephant.n trunk-of gray in-braid has-eye braid-next|to braid-behind baby in-center and-elephant elephant-and in|front-adult adult small has-tail big young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(trunk.n elephant-has) 

>> Prompt: elephant.n trunk-of gray in-braid has-eye braid-next|to braid-behind baby in-center and-elephant elephant-and in|front-adult adult small has-tail big young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(trunk.n tree-has) 

>> Prompt: elephant.n trunk-of gray in-braid has-eye braid-next|to braid-behind baby in-center and-elephant elephant-and in|front-adult adult small has-tail big young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: trunk.n white long animal-has elephant-has of-animal of-elephant
>> Response:  <u speaker=HUM>(elephant.n adult has-tail) 

>> Prompt: trunk.n white long animal-has elephant-has of-animal of-elephant
>> Response:  <u speaker=HUM>(elephant.n adult has-adult has-tail) 

>> Prompt: trunk.n white long animal-has elephant-has of-animal of-elephant
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: trunk.n white long animal-has elephant-has of-animal of-elephant
>> Response:  <u speaker=HUM>(elephant.n adult) 

>> Prompt: grass.n brown tall yellow
>> Response:  <u speaker=HUM>(ear.n on|lefde|left ft parked animal-has) 

>> Prompt: grass.n brown tall yellow
>> Response:  <u speaker=HUM>(chourdrdr.n ) 

>> Prompt: grass.n brown tall yellow
>> Response:  <u speaker=HUM>(susun.n red man-has) 

>> Prompt: grass.n brown tall yellow
>> Response:  <u speaker=HUM>(susun.n mage-has) 

>> Prompt: ear.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-in) 

>> Prompt: ear.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n adult) 

>> Prompt: ear.n animal-has elephant-has
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: ear.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tree.n has-branch
>> Response:  tree-has) 

>> Prompt: tree.n has-branch
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-branch
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: tree.n has-branch
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(branch.n plant-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: branch.n plant-has tree-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: center.n animal-in elephant-in
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: center.n animal-in elephant-in
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: center.n animal-in elephant-in
>> Response:  <u speaker=HUM>(animal.n feed feed ffeedededing in-park has-head eats-pasture eats-pasture has-pasture has-ear has-ear has-ear animal-has animal-has animal- 

>> Prompt: center.n animal-in elephant-in
>> Response:  <u speaker=HUM>(animal.n rain) 

>> Prompt: braid.n animal-in next|to-elephant behind-elephant behind-animal plant-on elephant-in dense next|to-animal green leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-braid) 

>> Prompt: braid.n animal-in next|to-elephant behind-elephant behind-animal plant-on elephant-in dense next|to-animal green leaf-on
>> Response:  <u speaker=HUM>(tree.n in-tree tree-has) 

>> Prompt: braid.n animal-in next|to-elephant behind-elephant behind-animal plant-on elephant-in dense next|to-animal green leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: braid.n animal-in next|to-elephant behind-elephant behind-animal plant-on elephant-in dense next|to-animal green leaf-on
>> Response:  <u speaker=HUM>(leaf.n on-tree behind-animal tree-behind) 

>> Prompt: leaf.n small on-braid
>> Response:  <u speaker=HUM>(tree.n in-tree tree-has) 

>> Prompt: leaf.n small on-braid
>> Response:  <u speaker=HUM>(tree.n tree-has tree-has) 

>> Prompt: leaf.n small on-braid
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: leaf.n small on-braid
>> Response:  <u speaker=HUM>(braid.n elephant-has) 

>> Prompt: eye.n animal-has elephant-has
>> Response:  <u speaker=HUM>(elephant.n spottttted adult has-adult has-body has-body has-body has-body has-topographic_point has-topographic_point animal-in animal-has) 

>> Prompt: eye.n animal-has elephant-has
>> Response:  <u speaker=HUM>(elephant.n adult has-tail) 

>> Prompt: eye.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: eye.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tail.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tail.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tail.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: tail.n animal-has elephant-has
>> Response:  <u speaker=HUM>(adult.n animal-has animal-has animal-has animal-has) 

>> Prompt: back.n elephant-seen animal-seen
>> Response:  <u speaker=HUM>(tree.n behind-animal) 

>> Prompt: back.n elephant-seen animal-seen
>> Response:  <u speaker=HUM>(tree.n in-tree tree-has) 

>> Prompt: back.n elephant-seen animal-seen
>> Response:  <u speaker=HUM>(tree.n behind-animal) 

>> Prompt: back.n elephant-seen animal-seen
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: adult.n animal-in|front elephant-in|front
>> Response:  <u speaker=HUM>(adult.n adult) 

>> Prompt: adult.n animal-in|front elephant-in|front
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: adult.n animal-in|front elephant-in|front
>> Response:  <u speaker=HUM>(adult.n animal-has) 

>> Prompt: adult.n animal-in|front elephant-in|front
>> Response:  <u speaker=HUM>(elephant.n elephant-in) 

>> Prompt: plant.n yellow has-branch small brown tall on-braid
>> Response:  <u speaker=HUM>(sidewalk.n bicycle-parked|on bicycle-parked parked|on-parked|on parked|on-sidewalk) 

>> Prompt: plant.n yellow has-branch small brown tall on-braid
>> Response:  <u speaker=HUM>(ear.n elephant-has elephant-has) 

>> Prompt: plant.n yellow has-branch small brown tall on-braid
>> Response:  <u speaker=HUM>(ear.n tree-has) 

>> Prompt: plant.n yellow has-branch small brown tall on-braid
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: animal.n animal-and trunk-of gray in-braid has-eye has-limb braid-next|to braid-behind baby in-center and-animal body-of in|front-adult adult seen-body small has-tail big has-body young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: animal.n animal-and trunk-of gray in-braid has-eye has-limb braid-next|to braid-behind baby in-center and-animal body-of in|front-adult adult seen-body small has-tail big has-body young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(trunk.n on-sidewalk) 

>> Prompt: animal.n animal-and trunk-of gray in-braid has-eye has-limb braid-next|to braid-behind baby in-center and-animal body-of in|front-adult adult seen-body small has-tail big has-body young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(trunk.n elephant-has) 

>> Prompt: animal.n animal-and trunk-of gray in-braid has-eye has-limb braid-next|to braid-behind baby in-center and-animal body-of in|front-adult adult seen-body small has-tail big has-body young has-trunk african has-ear seen-back
>> Response:  <u speaker=HUM>(elephant.n adult) 

>> Prompt: body.n white long animal-has animal-seen of-animal
>> Response:  <u speaker=HUM>(animal.n adult has-tail) 

>> Prompt: body.n white long animal-has animal-seen of-animal
>> Response:  <u speaker=HUM>(animal.n on|left animal-has animal-has) 

>> Prompt: body.n white long animal-has animal-seen of-animal
>> Response:  <u speaker=HUM>(animal.n adult has-body has-tail) 

>> Prompt: body.n white long animal-has animal-seen of-animal
>> Response:  <u speaker=HUM>(animal.n animal-has animal-has) 

>> Prompt: limb.n animal-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: limb.n animal-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: limb.n animal-has
>> Response:  <u speaker=HUM>(plant.n on-plant plant-has) 

>> Prompt: limb.n animal-has
>> Response:  <u speaker=HUM>(branch.n tree-has) 

>> Prompt: suit.n man-wearing person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: suit.n man-wearing person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n brown woman-has) 

>> Prompt: suit.n man-wearing person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: suit.n man-wearing person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n woman-wearing woman-wearing) 

>> Prompt: man.n smiling has-eye sitting wearing-shirt has-hair has-nose wearing-necktie wearing-suit in|front|of-building
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: man.n smiling has-eye sitting wearing-shirt has-hair has-nose wearing-necktie wearing-suit in|front|of-building
>> Response:  <u speaker=HUM>(trouser.n brown woman-wearing) 

>> Prompt: man.n smiling has-eye sitting wearing-shirt has-hair has-nose wearing-necktie wearing-suit in|front|of-building
>> Response:  <u speaker=HUM>(trouser.n man-has man-has) 

>> Prompt: man.n smiling has-eye sitting wearing-shirt has-hair has-nose wearing-necktie wearing-suit in|front|of-building
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: necktie.n purple person-wearing man-wearing cartridge_holder-over cartridge_holder-on maroon
>> Response:  <u speaker=HUM>(bard.n drick with-food) 

>> Prompt: necktie.n purple person-wearing man-wearing cartridge_holder-over cartridge_holder-on maroon
>> Response:  <u speaker=HUM>(bag.n black on-wall) 

>> Prompt: necktie.n purple person-wearing man-wearing cartridge_holder-over cartridge_holder-on maroon
>> Response:  <u speaker=HUM>(bardrick.n ) 

>> Prompt: necktie.n purple person-wearing man-wearing cartridge_holder-over cartridge_holder-on maroon
>> Response:  <u speaker=HUM>(bard.n black on-wall) 

>> Prompt: woman.n wearing-sweater smiling has|a-hand has-hair tree-behind wearing-jewelry wearing-suit has-head has-hand wearing-earring
>> Response:  <u speaker=HUM>(hair.n woman-has man-wearing woman-wearing woman-wears woman-wearing) 

>> Prompt: woman.n wearing-sweater smiling has|a-hand has-hair tree-behind wearing-jewelry wearing-suit has-head has-hand wearing-earring
>> Response:  <u speaker=HUM>(hair.n woman-has) 

>> Prompt: woman.n wearing-sweater smiling has|a-hand has-hair tree-behind wearing-jewelry wearing-suit has-head has-hand wearing-earring
>> Response:  <u speaker=HUM>(trouser.n man-has man-wearing) 

>> Prompt: woman.n wearing-sweater smiling has|a-hand has-hair tree-behind wearing-jewelry wearing-suit has-head has-hand wearing-earring
>> Response:  <u speaker=HUM>(hair.n black sharturoat-has man-wearing man-wearing) 

>> Prompt: shirt.n white person-wearing man-wearing
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: shirt.n white person-wearing man-wearing
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: shirt.n white person-wearing man-wearing
>> Response:  <u speaker=HUM>(shirt.n brown woman-wearing) 

>> Prompt: shirt.n white person-wearing man-wearing
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: nose.n big man-has person-has
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing woman-wearing) 

>> Prompt: nose.n big man-has person-has
>> Response:  <u speaker=HUM>(woman.n tan) 

>> Prompt: nose.n big man-has person-has
>> Response:  <u speaker=HUM>(woman.n woman-has woman-wearing) 

>> Prompt: nose.n big man-has person-has
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing man-wears) 

>> Prompt: table.n small hand-on brown wooden round worn
>> Response:  <u speaker=HUM>(hair.n drawn chol_proch with-lin with-food) 

>> Prompt: table.n small hand-on brown wooden round worn
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: table.n small hand-on brown wooden round worn
>> Response:  <u speaker=HUM>(trouser.n man-wearing) 

>> Prompt: table.n small hand-on brown wooden round worn
>> Response:  <u speaker=HUM>(hair.n drick tan) 

>> Prompt: eye.n man-has person-has
>> Response:  <u speaker=HUM>(man.n man-wearing man-wearing man-wears woman-wearing) 

>> Prompt: eye.n man-has person-has
>> Response:  <u speaker=HUM>(man.n man-has) 

>> Prompt: eye.n man-has person-has
>> Response:  <u speaker=HUM>(woman.n woman-has) 

>> Prompt: eye.n man-has person-has
>> Response:  <u speaker=HUM>(man.n man-wearing man-has) 

>> Prompt: earring.n stone black in-ear woman-wearing
>> Response:  <u speaker=HUM>(man.n asian ) 

>> Prompt: earring.n stone black in-ear woman-wearing
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: earring.n stone black in-ear woman-wearing
>> Response:  <u speaker=HUM>(man.n ar-wearing) 

>> Prompt: earring.n stone black in-ear woman-wearing
>> Response:  <u speaker=HUM>(shirt.n woman-wearing) 

>> Prompt: ear.n earring-in jewelry-in
>> Response:  <u speaker=HUM>(woman.n tan) 

>> Prompt: ear.n earring-in jewelry-in
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: ear.n earring-in jewelry-in
>> Response:  <u speaker=HUM>(woman.n woman-has) 

>> Prompt: ear.n earring-in jewelry-in
>> Response:  <u speaker=HUM>(woman.n tan) 

>> Prompt: cartridge_holder.n on-necktie silver over-necktie metal
>> Response:  <u speaker=HUM>(hair.n tan with-window baby-on) 

>> Prompt: cartridge_holder.n on-necktie silver over-necktie metal
>> Response:  <u speaker=HUM>(hair.n tan maged|of-street) 

>> Prompt: cartridge_holder.n on-necktie silver over-necktie metal
>> Response:  <u speaker=HUM>(desk.n brtied with-liquid) 

>> Prompt: cartridge_holder.n on-necktie silver over-necktie metal
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: belt.n black under-cringle
>> Response:  <u speaker=HUM>(hair.n drar-has woman-wearing) 

>> Prompt: belt.n black under-cringle
>> Response:  <u speaker=HUM>(hair.n black with-window) 

>> Prompt: belt.n black under-cringle
>> Response:  <u speaker=HUM>(hair.n woman-has) 

>> Prompt: belt.n black under-cringle
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: hand.n on-hand woman-has on-table on-shoulder hand-on|top|of hand-on on|top|of-hand woman-has|a
>> Response:  <u speaker=HUM>(hand.n on|a-desk) 

>> Prompt: hand.n on-hand woman-has on-table on-shoulder hand-on|top|of hand-on on|top|of-hand woman-has|a
>> Response:  <u speaker=HUM>(hand.n man-wearing) 

>> Prompt: hand.n on-hand woman-has on-table on-shoulder hand-on|top|of hand-on on|top|of-hand woman-has|a
>> Response:  <u speaker=HUM>(hair.n woman-wearing) 

>> Prompt: hand.n on-hand woman-has on-table on-shoulder hand-on|top|of hand-on on|top|of-hand woman-has|a
>> Response:  <u speaker=HUM>(hair.n woman-has man-wearing) 

>> Prompt: hair.n woman-has black pulled|back man-has person-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: hair.n woman-has black pulled|back man-has person-has
>> Response:  <u speaker=HUM>(hair.n tan) 

>> Prompt: hair.n woman-has black pulled|back man-has person-has
>> Response:  <u speaker=HUM>(trouser.n man-wearing man-has man-wearing) 

>> Prompt: hair.n woman-has black pulled|back man-has person-has
>> Response:  woman-has) 

>> Prompt: button.n 
>> Response:  <u speaker=BOT>(s.n woman-wearing) 

>> Prompt: button.n 
>> Response:  <u speaker=HUM>(s.n man-has man-wearing woman-wearing) 

>> Prompt: button.n 
>> Response:  <u speaker=HUM>(furnit.n man-wearing) 

>> Prompt: button.n 
>> Response:  <u speaker=HUM>(fare.n man-has) 

>> Prompt: tree.n has-leaf behind-woman has-trunk
>> Response:  <u speaker=HUM>(leaf.n on-braid) 

>> Prompt: tree.n has-leaf behind-woman has-trunk
>> Response:  <u speaker=HUM>(leaf.n behind-animal) 

>> Prompt: tree.n has-leaf behind-woman has-trunk
>> Response:  <u speaker=HUM>(leaf.n on-tree tree-has) 

>> Prompt: tree.n has-leaf behind-woman has-trunk
>> Response:  <u speaker=HUM>(tree.n in-tree behind-animal) 

>> Prompt: leaf.n tree-has
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: leaf.n tree-has
>> Response:  <u speaker=HUM>(tree.n in-park behind-man) 

>> Prompt: leaf.n tree-has
>> Response:  <u speaker=HUM>(leaf.n tree-has) 

>> Prompt: leaf.n tree-has
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: trunk.n tree-has
>> Response:  <u speaker=HUM>(elephant.n elephant-has) 

>> Prompt: trunk.n tree-has
>> Response:  <u speaker=HUM>(elephant.n adult has-tail) 

>> Prompt: trunk.n tree-has
>> Response:  <u speaker=HUM>(tree.n in-park behind-animal) 

>> Prompt: trunk.n tree-has
>> Response:  <u speaker=HUM>(tree.n tree-has) 

>> Prompt: cringle.n accessory-under belt-under
>> Response:  <u speaker=HUM>(couch.n ddr-with) 

>> Prompt: cringle.n accessory-under belt-under
>> Response:  <u speaker=HUM>(couck.n mage-with) 

>> Prompt: cringle.n accessory-under belt-under
>> Response:  <u speaker=HUM>(glass.n ) 

>> Prompt: cringle.n accessory-under belt-under
>> Response:  <u speaker=HUM>(couck.n dr-with) 

>> Prompt: shoulder.n hand-on
>> Response:  <u speaker=HUM>(hair.n girl-has) 

>> Prompt: shoulder.n hand-on
>> Response:  <u speaker=HUM>(hand.n man-has) 

>> Prompt: shoulder.n hand-on
>> Response:  <u speaker=HUM>(hand.n on-desk) 

>> Prompt: shoulder.n hand-on
>> Response:  <u speaker-on) 

>> Prompt: building.n white man-in|front|of person-in|front|of
>> Response:  <u speaker=HUM>(man.n asian working sitting|a-desk wearing-trouser sitting|at|a-desk) 

>> Prompt: building.n white man-in|front|of person-in|front|of
>> Response:  <u speaker=HUM>(man.n ar|aide|on) 

>> Prompt: building.n white man-in|front|of person-in|front|of
>> Response:  <u speaker=HUM>(man.n ar-has) 

>> Prompt: building.n white man-in|front|of person-in|front|of
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: person.n wearing-sweater has-face smiling has-eye sitting wearing-shirt has-hair in|front|of-house has-nose wearing-necktie wearing-suit has-head in|front|of-building
>> Response:  <u speaker=HUM>(hair.n woman-wearing) 

>> Prompt: person.n wearing-sweater has-face smiling has-eye sitting wearing-shirt has-hair in|front|of-house has-nose wearing-necktie wearing-suit has-head in|front|of-building
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: person.n wearing-sweater has-face smiling has-eye sitting wearing-shirt has-hair in|front|of-house has-nose wearing-necktie wearing-suit has-head in|front|of-building
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: person.n wearing-sweater has-face smiling has-eye sitting wearing-shirt has-hair in|front|of-house has-nose wearing-necktie wearing-suit has-head in|front|of-building
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: sweater.n person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(woman.n wearing-shirt) 

>> Prompt: sweater.n person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: sweater.n person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n woman-wearing woman-wearing) 

>> Prompt: sweater.n person-wearing woman-wearing black
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: accessory.n black under-cringle
>> Response:  <u speaker=HUM>(s.n woman-has) 

>> Prompt: accessory.n black under-cringle
>> Response:  <u speaker=HUM>(s.n woman-wearing man-wearing man-wearing man-wearing man-wearing) 

>> Prompt: accessory.n black under-cringle
>> Response:  <u speaker=HUM>(see.n woman-wearing) 

>> Prompt: accessory.n black under-cringle
>> Response:  <u speaker=HUM>(shirt.n brown woman-wearing woman-has) 

>> Prompt: face.n person-has
>> Response:  <u speaker=HUM>(woman.n woman-has) 

>> Prompt: face.n person-has
>> Response:  <u speaker=HUM>(man.n woman-wearing man-wearing) 

>> Prompt: face.n person-has
>> Response:  <u speaker=HUM>(woman.n tan) 

>> Prompt: face.n person-has
>> Response:  <u speaker=HUM>(man.n woman-wearing woman-has) 

>> Prompt: house.n white person-in|front|of
>> Response:  <u speaker=HUM>(woman.n brown woman-wearing woman-wearing woman-wearing woman-wears) 

>> Prompt: house.n white person-in|front|of
>> Response:  <u speaker=HUM>(man.n man-has man-has man-wearing) 

>> Prompt: house.n white person-in|front|of
>> Response:  <u speaker=HUM>(woman.n woman-wearing) 

>> Prompt: house.n white person-in|front|of
>> Response:  <u speaker=HUM>(man.n asian working sitting|a-desk) 

>> Prompt: head.n woman-has pulled|back black person-has
>> Response:  <u speaker=HUM>(trouser.n man-has) 

>> Prompt: head.n woman-has pulled|back black person-has
>> Response:  <u speaker=HUM>(shirt.n woman-has) 

>> Prompt: head.n woman-has pulled|back black person-has
>> Response:  <u speaker=HUM>(shirt.n tan) 

>> Prompt: head.n woman-has pulled|back black person-has
>> Response:  <u speaker=HUM>(trouser.n man-has woman-has) 

>> Prompt: jewelry.n stone woman-wearing black in-ear
>> Response:  <u speaker=HUM>(shirt.n woman-has man-wearing) 

>> Prompt: jewelry.n stone woman-wearing black in-ear
>> Response:  <u speaker=HUM>(ear.n raised woman-has) 

>> Prompt: jewelry.n stone woman-wearing black in-ear
>> Response:  <u speaker=HUM>(ear.n animal-has) 

>> Prompt: jewelry.n stone woman-wearing black in-ear
>> Response:  <u speaker=HUM>(ear.n on-animal) 
